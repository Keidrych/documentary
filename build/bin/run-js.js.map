{"version":3,"sources":["../../src/bin/run-js.js"],"names":["runJs","source","output","s","rs","pipe","c","Catchment","res","promise","ws","Promise","r","j","on","end","console","log"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;AAEA;;;;AAIe,eAAeA,KAAf,CAAqBC,MAArB,EAA6BC,MAA7B,EAAqC;AAClD,QAAMC,IAAI,0BAAiBF,MAAjB,CAAV;AACA,QAAMG,KAAK,+BAAX;AACAD,IAAEE,IAAF,CAAOD,EAAP;AACA,QAAME,IAAI,IAAIC,kBAAJ,CAAc;AACtBH;AADsB,GAAd,CAAV;AAGA,QAAMI,MAAM,MAAMF,EAAEG,OAApB;AACA,QAAMC,KAAK,2BAAkBR,UAAUD,MAA5B,CAAX;AACA,QAAM,IAAIU,OAAJ,CAAY,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC1BH,OAAGI,EAAH,CAAM,OAAN,EAAeD,CAAf,EAAkBE,GAAlB,CAAsBP,GAAtB,EAA2BI,CAA3B;AACD,GAFK,CAAN;AAGAI,UAAQC,GAAR,CAAY,8BAAZ,EAA4ChB,MAA5C;AACD","sourcesContent":["import { createWriteStream, createReadStream } from 'fs'\nimport createJsReplaceStream from '../lib/js-replace-stream'\nimport Catchment from 'catchment'\n\n/**\n * Process a JavaScript file.\n * @param {string} source Path to the source JavaScript file.\n */\nexport default async function runJs(source, output) {\n  const s = createReadStream(source)\n  const rs = createJsReplaceStream()\n  s.pipe(rs)\n  const c = new Catchment({\n    rs,\n  })\n  const res = await c.promise\n  const ws = createWriteStream(output || source)\n  await new Promise((r, j) => {\n    ws.on('error', j).end(res, r)\n  })\n  console.log('Updated %s to include types.', source)\n}\n"],"file":"run-js.js"}