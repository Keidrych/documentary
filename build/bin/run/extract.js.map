{"version":3,"sources":["../../../src/bin/run/extract.js"],"names":[],"mappings":"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","file":"bin/run/extract.js","sourcesContent":["import { createReadStream } from 'fs'\nimport createRegexTransformStream from 'restream'\nimport { Transform, PassThrough } from 'stream'\nimport mismatch from 'mismatch'\nimport whichStream from 'which-stream'\nimport catcher from '../catcher'\nimport { debuglog } from 'util'\nimport typedefRe from '../../lib/typedef/re'\nimport { getNameWithDefault } from 'typal'\n\nconst LOG = debuglog('doc')\n\nconst getVal = (val) => {\n  let v\n  if (val == 'true') v = true\n  else if (val == 'false') v = false\n  else if (/^\\d+$/.test(val)) v = parseInt(val, 10)\n  return v !== undefined ? v : val\n}\n\nexport const propExtractRe = /^ \\* @prop {(.+?)} (\\[)?(.+?)(?:=([\"'])?(.+?)\\4)?(?:])?(?: (.+?))?(?: Default `(.+?)`.)?$/gm\nconst keys = ['type', 'opt', 'name', 'quote', 'defaultValue', 'description', 'Default']\n\nconst makeType = (type, name, description, properties) => {\n  const hasProps = properties.length\n  const tt = type && type != 'Object' ? ` type=\"${type}\"` : ''\n  const d = description ? ` desc=\"${description}\"` : ''\n  const i = ' '.repeat(2)\n  const t = `${i}<type name=\"${name}\"${tt}${d}${hasProps ? '' : ' /'}>\\n`\n  return t\n}\n\nconst makeP = (type, name, defaultValue, optional, description) => {\n  const t = ['string', 'number', 'boolean'].includes(type) ? ` ${type}` : ` type=\"${type}\"`\n  const hasDefault = defaultValue !== undefined\n  const def = hasDefault ? ` default=\"${defaultValue}\"` : ''\n  const o = (optional && !hasDefault) ? ' opt' : ''\n  const i = ' '.repeat(4)\n  const ii = ' '.repeat(6)\n  const desc = description ? `>\\n${ii}${description}\\n${i}</prop>` : '/>'\n  const p = `${i}<prop${o}${t} name=\"${name}\"${def}${desc}\\n`\n  return p\n}\n\nconst writeOnce = async (stream, data) => {\n  let jj\n  await new Promise((r, j) => {\n    jj = j\n    stream.on('error', jj)\n    stream.write(data, r)\n  })\n  stream.removeListener('error', jj)\n}\n\n/**\n * Writes XML.\n */\nclass XML extends Transform {\n  constructor() {\n    super({\n      writableObjectMode: true,\n    })\n  }\n  _transform({ type, name, description, properties }, enc, next) {\n    const t = type && type.startsWith('import')\n      ? makeImport(type, name)\n      : makeType(type, name, description, properties)\n    this.push(t)\n    properties.forEach(({ type: pType, name: pName, default: d, description: pDesc, optional }) => {\n      const p = makeP(pType, pName, d, optional, pDesc)\n      this.push(p)\n    })\n    if (properties.length) this.push('  </type>\\n')\n    next()\n  }\n}\n\nconst makeImport = (type, name) => {\n  const f = /import\\((['\"])(.+?)\\1\\)/.exec(type)\n  if (!f) throw new Error(`Could not extract package from \"${type}\"`)\n  const [,, from] = f\n  const i = ' '.repeat(2)\n  return `${i}<import name=\"${name}\" from=\"${from}\" />\\n`\n}\n\n/**\n * Parses properties from a RegExp stream.\n */\nclass Properties extends Transform {\n  constructor() {\n    super({\n      objectMode: true,\n    })\n  }\n  _transform([, type, name, description, props], _, next) {\n    /** @type {Object.<string, string>[]} */\n    const p = mismatch(\n      propExtractRe,\n      props,\n      keys,\n    )\n    const properties = p.map(e => {\n      const { defaultValue: d, Default: D, opt: o, ...rest } = e\n      const pr = {\n        ...rest,\n        ...(d ? { defaultValue: getVal(d) } : {}),\n        ...(D ? { Default: getVal(D) } : {}),\n        ...(o ? { optional: true } : {}),\n      }\n      if (d || D) {\n        if (!d) {\n          const dn = getNameWithDefault(pr.name, D, pr.type)\n          LOG('%s[%s] got from Default.', name, dn)\n        } else if (d !== D && pr.Default !== undefined) {\n          const dn = getNameWithDefault(pr.name, D, pr.type)\n          LOG('%s[%s] does not match Default `%s`.', name, dn, pr.Default)\n        }\n        pr.default = 'defaultValue' in pr ? pr.defaultValue : pr.Default\n        delete pr.defaultValue\n        delete pr.Default\n      }\n      return pr\n    })\n    const o = {\n      type, name, description, properties,\n    }\n    this.push(o)\n    next()\n  }\n}\n\n/**\n * Process a JavaScript file to extract typedefs and place them in an XML file.\n * @param {Config} config Configuration object.\n * @param {string} config.source Input file from which to extract typedefs.\n * @param {string} [config.destination=\"-\"] Output file to where to write XML. `-` will write to `stdout`. Default `-`.\n * @param {string} [config.stream] An output stream to which to write instead of a location from `extractTo`.\n */\nasync function extractTypedef(config) {\n  const {\n    source,\n    destination,\n    writable,\n  } = config\n  try {\n    const s = createReadStream(source)\n    const ts = createRegexTransformStream(typedefRe)\n    const ps = new Properties()\n    const readable = new PassThrough()\n    const xml = new XML()\n\n    await writeOnce(readable, '<types>\\n')\n\n    s.pipe(ts).pipe(ps).pipe(xml).pipe(readable, { end: false })\n\n    const p = whichStream({\n      readable,\n      source,\n      writable,\n      destination,\n    })\n\n    await new Promise((r, j) => {\n      s.on('error', e => { LOG('Error in Read'); j(e) })\n      ts.on('error', e => { LOG('Error in Transform'); j(e) })\n      ps.on('error', e => { LOG('Error in RegexTransform'); j(e) })\n      xml.on('error', e => { LOG('Error in XML'); j(e) })\n      readable.on('error', e => { LOG('Error in Stream'); j(e) })\n      xml.on('end', r)\n    })\n\n    await new Promise(r => readable.end('</types>\\n', r))\n    await p\n  } catch (err) {\n    catcher(err)\n  }\n}\n\n/**\n * @typedef {Object} Config Configuration object.\n * @prop {string} [source] Input file from which to extract typedefs.\n * @prop {string} [destination=\"-\"] Output file to where to write XML. `-` will write to `stdout`.\n * @prop {Readable} [stream] An output stream to which to write instead of a location from `extract`.\n */\n\nexport default extractTypedef\n"]}