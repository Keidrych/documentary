{"version":3,"sources":["../../../src/bin/run/generate.js"],"names":[],"mappings":"AAAA,MAAM,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE;AACpC,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI;AAC9B,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,MAAM;AACrC,MAAM,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,MAAM;AAC9D,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO;;AAE/B,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC;;;;;;;;;AAS1B,KAAK,CAAC,QAAQ,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;EACrC,KAAK,CAAC;IACJ,MAAM;IACN,WAAW,CAAC,CAAC,CAAC,MAAM;IACpB,QAAQ;EACV,CAAC,CAAC,CAAC,CAAC;EACJ,GAAG,CAAC;IACF,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;MACxB,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;MAClE,OAAO,CAAC,IAAI,CAAC,CAAC;IAChB;;IAEA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,MAAM;IACjC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,qBAAqB,CAAC;IACvC,CAAC,CAAC,IAAI,CAAC,QAAQ;;IAEf,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;MACpB,MAAM;MACN,QAAQ;MACR,WAAW,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,WAAW;MAC/C,QAAQ;IACV,CAAC;;IAED,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC1B,QAAQ,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC/D,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACjD,QAAQ,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC;;IAED,KAAK,CAAC;;IAEN,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC;MACZ,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM;IACpC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;MAChC,OAAO,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM;IACtD,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC7B,OAAO,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM;IAC/C,CAAC,CAAC,IAAI,CAAC;MACL,OAAO,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW;IACjD;EACF,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC;IACZ,OAAO,CAAC,GAAG;EACb;AACF;;;;;;;;AAQA,MAAM,CAAC,OAAO,CAAC","file":"bin/run/generate.js","sourcesContent":["import { createReadStream } from 'fs'\nimport { debuglog } from 'util'\nimport whichStream from 'which-stream'\nimport createJsReplaceStream from '../../lib/js-replace-stream'\nimport catcher from '../catcher'\n\nconst LOG = debuglog('doc')\n\n/**\n * Process a JavaScript file to include `@typedef`s found with the `/* documentary types.xml *\\/` marker.\n * @param {Config} config Configuration Object.\n * @param {string} config.source Path to the source JavaScript file.\n * @param {string} [config.destination] Path to the source JavaScript file. If not specified, source is assumed (overwriting the original file).\n * @param {import('stream').Writable} [config.writable] An output stream to which to write instead of a location from `generateTo`.\n */\nasync function generateTypedef(config) {\n  const {\n    source,\n    destination = source,\n    writable,\n  } = config\n  try {\n    if (!source && !writable) {\n      console.log('Please specify a JavaScript file or a pass a stream.')\n      process.exit(1)\n    }\n\n    const s = createReadStream(source)\n    const readable = createJsReplaceStream()\n    s.pipe(readable)\n\n    const p = whichStream({\n      source,\n      readable,\n      destination: writable ? undefined : destination,\n      writable,\n    })\n\n    await new Promise((r, j) => {\n      readable.on('error', e => { LOG('Error in Replaceable'); j(e) })\n      s.on('error', e => { LOG('Error in Read'); j(e) })\n      readable.on('end', r)\n    })\n\n    await p\n\n    if (writable) {\n      LOG('%s written to stream', source)\n    } else if (source == destination) {\n      console.error('Updated %s to include types.', source)\n    } else if (destination == '-') {\n      console.error('Written %s to stdout.', source)\n    } else {\n      console.error('Saved output to %s', destination)\n    }\n  } catch (err) {\n    catcher(err)\n  }\n}\n\n/**\n * @typedef {Object} Config\n * @prop {string} source Path to the source JavaScript file.\n * @prop {string} [output] Path to the source JavaScript file.\n */\n\nexport default generateTypedef\n"]}