{"version":3,"sources":["../../src/bin/index.js"],"names":["LOG","DEBUG","test","process","env","NODE_DEBUG","source","_source","output","_output","toc","_toc","watch","_watch","command","short","boolean","doc","console","log","exit","stream","content","err","code","stack","message"],"mappings":"AAAA;;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;;;AAEA,MAAMA,MAAM,oBAAS,KAAT,CAAZ;AACA,MAAMC,QAAQ,MAAMC,IAAN,CAAWC,QAAQC,GAAR,CAAYC,UAAvB,CAAd;AAEA,MAAM;AACJC,UAAQC,OADJ;AAEJC,UAAQC,OAFJ;AAGJC,OAAKC,IAHD;AAIJC,SAAOC;AAJH,IAKF,qBAAO;AACTP,UAAQ;AACNQ,aAAS;AADH,GADC;AAITJ,OAAK;AACHK,WAAO,GADJ;AAEHC,aAAS;AAFN,GAJI;AAQTJ,SAAO;AACLG,WAAO,GADF;AAELC,aAAS;AAFJ,GARE;AAYTR,UAAQ;AAZC,CAAP,CALJ;;AAoBA,MAAMS,MAAM,OAAOX,MAAP,EAAeE,MAAf,EAAuBE,GAAvB,KAA+B;AACzC,MAAI,CAACJ,MAAL,EAAa;AACXY,YAAQC,GAAR,CAAY,+BAAZ,EADW,CACkC;;AAC7ChB,YAAQiB,IAAR,CAAa,CAAb;AACD;;AACD,MAAIC,MAAJ;;AACA,MAAI;AACF,UAAM;AAAEC;AAAF,QAAc,MAAM,6BAAiBhB,MAAjB,CAA1B;AACAe,aAAS,wBAAgBf,MAAhB,EAAwBgB,OAAxB,CAAT;AACD,GAHD,CAGE,OAAOC,GAAP,EAAY;AACZ,UAAM;AAAEC;AAAF,QAAWD,GAAjB;;AACA,QAAIC,QAAQ,SAAZ,EAAuB;AACrBH,eAAS,0BAAiBf,MAAjB,CAAT;AACD,KAFD,MAEO;AACL,YAAMiB,GAAN;AACD;AACF;;AACD,QAAM,kBAAIF,MAAJ,EAAYb,MAAZ,EAAoBE,GAApB,CAAN;AACD,CAlBD;;AAoBA,CAAC,YAAY;AACX,MAAI;AACF,UAAMO,IAAIV,OAAJ,EAAaE,OAAb,EAAsBE,IAAtB,CAAN;AACD,GAFD,CAEE,OAAO;AAAEc,SAAF;AAASC,WAAT;AAAkBF;AAAlB,GAAP,EAAiC;AACjC,QAAIA,QAAQ,QAAZ,EAAsB;AACpBN,cAAQC,GAAR,CAAY,wBAAZ,EAAsCZ,OAAtC;AACAJ,cAAQiB,IAAR,CAAa,CAAb;AACD;;AACDnB,YAAQD,IAAIyB,KAAJ,CAAR,GAAqBP,QAAQC,GAAR,CAAYO,OAAZ,CAArB;AACD;;AACD,MAAIb,MAAJ,EAAY;AACV,mBAAMN,OAAN,EAAe,YAAY;AACzB,YAAMU,IAAIV,OAAJ,EAAaE,OAAb,EAAsBE,IAAtB,CAAN;AACD,KAFD;AAGD;AACF,CAfD","sourcesContent":["#!/usr/bin/env node\nimport { watch } from 'fs'\nimport argufy from 'argufy'\nimport { createReadStream } from 'fs'\nimport { readDirStructure } from 'wrote'\nimport { debuglog } from 'util'\nimport run from './run'\nimport createDirStream from '../lib/dir-stream'\n\nconst LOG = debuglog('doc')\nconst DEBUG = /doc/.test(process.env.NODE_DEBUG)\n\nconst {\n  source: _source,\n  output: _output,\n  toc: _toc,\n  watch: _watch,\n} = argufy({\n  source: {\n    command: true,\n  },\n  toc: {\n    short: 't',\n    boolean: true,\n  },\n  watch: {\n    short: 'w',\n    boolean: true,\n  },\n  output: 'o',\n})\n\nconst doc = async (source, output, toc) => {\n  if (!source) {\n    console.log('Please specify an input file.') // print usage\n    process.exit(1)\n  }\n  let stream\n  try {\n    const { content } = await readDirStructure(source)\n    stream = createDirStream(source, content)\n  } catch (err) {\n    const { code } = err\n    if (code == 'ENOTDIR') {\n      stream = createReadStream(source)\n    } else {\n      throw err\n    }\n  }\n  await run(stream, output, toc)\n}\n\n(async () => {\n  try {\n    await doc(_source, _output, _toc)\n  } catch ({ stack, message, code }) {\n    if (code == 'ENOENT') {\n      console.log('File %s does not exist', _source)\n      process.exit(2)\n    }\n    DEBUG ? LOG(stack) : console.log(message)\n  }\n  if (_watch) {\n    watch(_source, async () => {\n      await doc(_source, _output, _toc)\n    })\n  }\n})()\n"],"file":"index.js"}