{"version":3,"sources":["../../src/bin/index.js"],"names":[],"mappings":"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","file":"bin/index.js","sourcesContent":["#!/usr/bin/env node\nimport { watch } from 'fs'\nimport { debuglog } from 'util'\nimport { lstatSync } from 'fs'\nimport run from './run'\nimport getArgs from './get-args'\nimport generateTypedef from './run/generate'\nimport extractTypedef from './run/extract'\nimport { version } from '../../package.json'\nimport catcher from './catcher'\nimport { getStream, gitPush } from '../lib'\n\nconst LOG = debuglog('doc')\nconst DEBUG = /doc/.test(process.env.NODE_DEBUG)\n\nconst {\n  source: _source,\n  output: _output,\n  toc: _toc,\n  watch: _watch,\n  push: _push,\n  version: _version,\n  extract: _extract,\n} = getArgs()\n\nlet {\n  generate: _generate,\n  _argv,\n} = getArgs()\n\nif (_version) {\n  console.log(version)\n  process.exit(0)\n}\n\nif (process.argv.find(a => a == '-p') && !_push) {\n  catcher('Please specify a commit message.')\n}\nif (process.argv.find(a => a == '-e') && !_extract) {\n  catcher('Please specify where to extract typedefs (- for stdout).')\n}\n\nif (_argv.find(g => g == '-g') && !_generate) {\n  _generate = _source\n}\n\nif (_source) {\n  try {\n    lstatSync(_source)\n  } catch (err) {\n    if (err.message) err.message = `Could not read input ${_source}: ${err.message}`\n    catcher(err)\n  }\n}\n\nconst doc = async (source, output, justToc = false) => {\n  if (!source) {\n    throw new Error('Please specify an input file.')\n  }\n  const stream = getStream(source)\n  await run(stream, output, justToc)\n}\n\n(async () => {\n  if (_extract) {\n    await extractTypedef({\n      source: _source,\n      destination: _extract,\n    })\n    return\n  }\n  if (_generate) {\n    await generateTypedef({\n      source: _source,\n      destination: _generate,\n    })\n    return\n  }\n  try {\n    await doc(_source, _output, _toc)\n  } catch ({ stack, message, code }) {\n    DEBUG ? LOG(stack) : console.log(message)\n  }\n\n  let debounce = false\n  if (_watch || _push) {\n    // also watch referenced example files.\n    watch(_source, { recursive: true }, async () => {\n      if (!debounce) {\n        debounce = true\n        await doc(_source, _output, _toc)\n        if (_push) {\n          console.log('Pushing documentation changes.')\n          await gitPush(_source, _output, _push)\n        }\n        debounce = false\n      }\n    })\n  }\n})()\n"]}