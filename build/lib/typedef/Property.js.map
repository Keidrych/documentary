{"version":3,"sources":["../../../src/lib/typedef/Property.js"],"names":["Property","constructor","fromXML","content","name","string","boolean","opt","number","type","default","def","Error","description","t","undefined","hasDefault","optional","toJSDoc","parentParam","nameWithDefault","d","s","toProp","p","toParam"],"mappings":";;;;;;;AAAA;;AAEA,MAAMA,QAAN,CAAe;AACbC,gBAAc,CAAE;;AAChBC,UAAQC,OAAR,EAAiB;AAAEC,QAAF;AAAQC,UAAR;AAAgBC,WAAhB;AAAyBC,OAAzB;AAA8BC,UAA9B;AAAsCC,QAAtC;AAA4CC,aAASC;AAArD,GAAjB,EAA6E;AAC3E,QAAI,CAACP,IAAL,EAAW,MAAM,IAAIQ,KAAJ,CAAU,gCAAV,CAAN;AACX,SAAKR,IAAL,GAAYA,IAAZ;AACA,QAAID,OAAJ,EAAa,KAAKU,WAAL,GAAmBV,OAAnB;AACb,UAAMW,IAAI,mBAAY;AAAEN,YAAF;AAAUH,YAAV;AAAkBC,aAAlB;AAA2BG;AAA3B,KAAZ,CAAV;AACA,SAAKA,IAAL,GAAYK,CAAZ;AACA,QAAIH,QAAQI,SAAZ,EAAuB,KAAKC,UAAL,GAAkB,IAAlB;AACvB,QAAI,KAAKA,UAAT,EAAqB,KAAKN,OAAL,GAAeC,GAAf;AACrB,QAAIJ,OAAO,KAAKS,UAAhB,EAA4B,KAAKC,QAAL,GAAgB,IAAhB;AAC7B;;AACDC,UAAQC,WAAR,EAAqB;AACnB,UAAMC,kBAAkB,0BAAmB,KAAKhB,IAAxB,EAA8B,KAAKM,OAAnC,EAA4C,KAAKD,IAAjD,EAAuDU,WAAvD,CAAxB;AACA,UAAMf,OAAO,KAAKa,QAAL,GAAiB,IAAGG,eAAgB,GAApC,GAAyCA,eAAtD;AACA,UAAMC,IAAI,KAAKL,UAAL,GAAmB,cAAa,KAAKN,OAAQ,KAA7C,GAAoD,EAA9D;AACA,UAAMY,IAAK,IAAG,KAAKb,IAAK,KAAIL,IAAK,IAAG,KAAKS,WAAY,GAAEQ,CAAE,EAAzD;AACA,WAAOC,CAAP;AACD;;AACDC,WAAS;AACP,UAAMD,IAAI,KAAKJ,OAAL,EAAV;AACA,UAAMM,IAAK,YAAWF,CAAE,EAAxB;AACA,WAAOE,CAAP;AACD;;AACDC,UAAQN,WAAR,EAAqB;AACnB,UAAMG,IAAI,KAAKJ,OAAL,CAAaC,WAAb,CAAV;AACA,UAAMK,IAAK,aAAYF,CAAE,EAAzB;AACA,WAAOE,CAAP;AACD;;AA5BY;;eA+BAxB,Q","sourcesContent":["import { getPropType, getNameWithDefault } from '.'\n\nclass Property {\n  constructor() {}\n  fromXML(content, { name, string, boolean, opt, number, type, default: def }) {\n    if (!name) throw new Error('Property does not have a name.')\n    this.name = name\n    if (content) this.description = content\n    const t = getPropType({ number, string, boolean, type })\n    this.type = t\n    if (def !== undefined) this.hasDefault = true\n    if (this.hasDefault) this.default = def\n    if (opt || this.hasDefault) this.optional = true\n  }\n  toJSDoc(parentParam) {\n    const nameWithDefault = getNameWithDefault(this.name, this.default, this.type, parentParam)\n    const name = this.optional ? `[${nameWithDefault}]` : nameWithDefault\n    const d = this.hasDefault ? ` Default \\`${this.default}\\`.` : ''\n    const s = `{${this.type}} ${name} ${this.description}${d}`\n    return s\n  }\n  toProp() {\n    const s = this.toJSDoc()\n    const p = ` * @prop ${s}`\n    return p\n  }\n  toParam(parentParam) {\n    const s = this.toJSDoc(parentParam)\n    const p = ` * @param ${s}`\n    return p\n  }\n}\n\nexport default Property"],"file":"Property.js"}