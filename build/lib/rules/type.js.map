{"version":3,"sources":["../../../src/lib/rules/type.js"],"names":[],"mappings":"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","file":"lib/rules/type.js","sourcesContent":["import { debuglog } from 'util'\nimport extractTags from 'rexml'\n\nconst LOG = debuglog('doc')\n\nconst typeRe = /^%TYPE( .+)?\\n([\\s\\S]+?)\\n%$/mg\n\nexport { typeRe }\n\nconst tag = (t, s) => `<${t}>${s}</${t}>`\nconst strong = s => tag('strong', s)\n\nconst getDescAndExample = (description, example, isExampleRow, hasExamples) => {\n  const span2 = hasExamples ? ' colspan=\"2\"' : ''\n  if (!example) {\n    return `<td${span2}>${description}</td>`\n  }\n  if (isExampleRow) {\n    return `<td${span2}>${description}</td>\n  </tr>\n  <tr></tr>\n  <tr>\n   <td colspan=\"${hasExamples ? 4 : 3}\">${example}</td>`\n  }\n  return `<td>${description}</td>\n   <td>${example}</td>`\n}\n\nconst makeTable = (properties, tocTitles) => {\n  const hasExamples = properties.some(({ example, isExampleRow }) => example && !isExampleRow)\n  const rows = properties.map(({ name, type, required, description = '', example = '', isExampleRow }) => {\n    const t = `<code>${required ? `${name}*` : name}</code>`\n    const n = required ? strong(t) : t\n    const nn = tocTitles ? `[${n}](t)` : n\n    const e = example.startsWith('```') ? `\\n\\n${example}`: example\n    return `  <tr>\n   <td>${nn}</td>\n   <td>${tag('em', type)}</td>\n   ${getDescAndExample(description, e, isExampleRow, hasExamples)}\n  </tr>`\n  })\n  return `<table>\n <thead>\n  <tr>\n   <th>Property</th>\n   <th>Type</th>\n   <th>Description</th>${hasExamples ? '\\n   <th>Example</th>' : ''}\n  </tr>\n </thead>\n <tbody>\n${rows.join('\\n')}\n </tbody>\n</table>\n`\n}\n\nconst typeRule = {\n  re: typeRe,\n  replacement(match, tocTitles, body) {\n    try {\n      const tags = extractTags('p', body)\n        .map(({ content, props }) => {\n          const [{ content: description } = {}] = extractTags('d', content)\n          const [{ content: example, props: { row: isExampleRow = false } = {} } = {}] = extractTags('e', content)\n          return {\n            description,\n            example,\n            isExampleRow,\n            ...props,\n          }\n        })\n      const table = makeTable(tags, tocTitles)\n      return table\n    } catch (err) {\n      LOG('Could not parse type, %s', err.message)\n      return match\n    }\n  },\n}\n\n// const b = (summary, alt, gif) => {\n//   return `\n// <details>\n//   <summary>${summary}</summary>\n//   <table>\n//   <tr><td>\n//     <img alt=\"${alt}\" src=\"${gif}\" />\n//   </td></tr>\n//   </table>\n// </details>\n// `.trim()\n// }\n\nexport default typeRule\n"]}