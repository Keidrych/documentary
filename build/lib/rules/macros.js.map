{"version":3,"sources":["../../../src/lib/rules/macros.js"],"names":[],"mappings":"AAAA,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,KAAK;AAC9B,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9D,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;;;;;;;AAQ5D,QAAQ,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;;EAE9C,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACnB,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC9C,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;MACpB,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACtB,MAAM,CAAC;IACT,CAAC;IACD,MAAM,CAAC;EACT;EACA,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;EAC9B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EACpB,MAAM,CAAC,CAAC;AACV;;AAEA,QAAQ,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC;EAC/C,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACxB,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK;EAC5B,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC;EACrB,GAAG,CAAC;IACF,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI;IACpC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO;IAC1C,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;IACpB,MAAM,CAAC;EACT,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC;IACZ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO;IACvB,MAAM,CAAC;EACT;AACF;;AAEA,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;EACvB,EAAE,CAAC,CAAC,OAAO;EACX,WAAW,CAAC,CAAC,gBAAgB;AAC/B;AACA,MAAM,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC;EAC1B,EAAE,CAAC,CAAC,UAAU;EACd,WAAW,CAAC,CAAC,mBAAmB;AAClC","file":"lib/rules/macros.js","sourcesContent":["import extractTags from 'rexml'\nexport const macroRe = /^(%+)MACRO (.+)\\n([\\s\\S]+?)\\n\\1(\\n|$)/gm\nexport const useMacroRe = /^%USE-MACRO (.+)\\n([\\s\\S]+?)\\n%$/gm\n\n/**\n * @param {string} match\n * @param {string} _\n * @param {string} name\n * @param {string} body\n */\nfunction macroReplacement(match, _, name, body) {\n  /** @param {string[]} data */\n  const fn = (data) => {\n    const res = body.replace(/\\$(\\d+)/g, (__, s) => {\n      const i = parseInt(s)\n      const val = data[i - 1]\n      return val\n    })\n    return res\n  }\n  this.macros = this.macros || {}\n  this.macros[name] = fn\n  return ''\n}\n\nfunction useMacroReplacement(match, macro, body) {\n  const { macros = {} } = this\n  const macroFn = macros[macro]\n  if (!macroFn) return match\n  try {\n    const res = extractTags('data', body)\n    const r = res.map(({ content }) => content)\n    const rr = macroFn(r)\n    return rr\n  } catch (err) {\n    console.log(err.message)\n    return match\n  }\n}\n\nexport const macroRule = {\n  re: macroRe,\n  replacement: macroReplacement,\n}\nexport const useMacroRule = {\n  re: useMacroRe,\n  replacement: useMacroReplacement,\n}\n\n"]}