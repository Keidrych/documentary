{"version":3,"sources":["../../../src/lib/rules/section-break.js"],"names":[],"mappings":"AAAA,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI;AAC1B,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,QAAQ;AAC9B,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK;AAC/B,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI;AAC9B,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI;;AAE1B,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC;;AAE1B,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAEvD,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;EACX,EAAE,CAAC,CAAC,cAAc;EAClB,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3C,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACR,GAAG,CAAC;MACF,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM;MAC/B,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC;QAC7E,CAAC,CAAC,CAAC;QACH,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC;MAC/B,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACnB,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC;MACrC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG;MACtB,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI;MAC5D,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QAClE,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;UACvD,EAAE,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC;QACnC,CAAC;;MAEH,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,EAAE;;MAEvB,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAClD,MAAM,CAAC;IACT,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC;MACZ,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC;MAC9B,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;MACrC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;MAChC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;MAC1C,GAAG,CAAC,CAAC;MACL,MAAM,CAAC;IACT;EACF,CAAC;AACH;;AAEA,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;EACf,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,QAAQ,CAAC;EAC3B,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACJ,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EACpE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACjE,MAAM,CAAC;AACT;;AAEA,MAAM,CAAC,CAAC,CAAC,cAAc,CAAC;AACxB,MAAM,CAAC,OAAO,CAAC","file":"lib/rules/section-break.js","sourcesContent":["import { join } from 'path'\nimport mismatch from 'mismatch'\nimport clone from '@wrote/clone'\nimport { debuglog } from 'util'\nimport { c, b } from 'erte'\n\nconst LOG = debuglog('doc')\n\nconst sectionBrakeRe = /^%~(?: +(-?\\d+))?(?: +(.+))?%$/gm\n\nconst rule = {\n  re: sectionBrakeRe,\n  async replacement(match, number, attrs = '') {\n    let n = 0\n    try {\n      if (number) n = parseInt(number)\n      else if (this.sectionBrakeNumber !== undefined) n = this.sectionBrakeNumber == 22\n        ? 0                           // reset\n        : this.sectionBrakeNumber + 1 // increase from the prev one\n      const isEnd = n >= 0\n      if (isEnd) this.sectionBrakeNumber = n\n      const name = `${n}.svg`\n      const imgPath = join(__dirname, '../../section-breaks', name)\n      const { to, ...a } = mismatch(/(.+)=\"(.+)\"/gm, attrs, ['key', 'val'])\n        .reduce((acc, { key, val }) => ({ ...acc, [key]: val }), {\n          to: '.documentary/section-breaks',\n        })\n\n      await clone(imgPath, to)\n\n      const tags = getTags({ src: join(to, name), ...a })\n      return tags\n    } catch (err) {\n      const h = c(err.message, 'red')\n      const [, ...s] = err.stack.split('\\n')\n      const st = b(s.join('\\n'), 'red')\n      const l = `Section break ${n}: ${h}\\n${st}`\n      LOG(l)\n      return match\n    }\n  },\n}\n\nconst getTags = ({\n  href = '#table-of-contents',\n  ...attrs\n}) => {\n  const a = Object.keys(attrs).map(k => `${k}=\"${attrs[k]}\"`).join(' ')\n  const s = `<p align=\"center\"><a href=\"${href}\"><img ${a}></a></p>`\n  return s\n}\n\nexport { sectionBrakeRe }\nexport default rule"]}