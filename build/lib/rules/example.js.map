{"version":3,"sources":["../../../src/lib/rules/example.js"],"names":[],"mappings":"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","file":"lib/rules/example.js","sourcesContent":["import { debuglog } from 'util'\nimport { parse } from 'path'\nimport { read, codeSurround } from '..'\n\nconst LOG = debuglog('doc')\n\nconst getExt = (type, source) => {\n  return type || parse(source).ext.replace(/^\\./, '')\n}\n\nconst getPartial = (boundExample) => {\n  const s = boundExample\n    .replace(/^\\s*\\n/gm, '')\n    .replace(/[^\\s]/g, '')\n  const minLength = s\n    .split('\\n')\n    .reduce((acc, current) => {\n      if (current.length < acc) return current.length\n      return acc\n    }, Infinity)\n  const e = boundExample\n    .replace(new RegExp(`^ {${minLength}}`, 'gm'), '')\n  return e\n}\n\nexport const replacer = async (match, source, from, to, type) => {\n  try {\n    let f = await read(source)\n    f = f.trim()\n    if (from && to) {\n      f = f\n        .replace(/^(import .+? )(from (['\"])(.+)\\3)/gm, (m, i, fromSeg, q, fr) => {\n          if (fr == from) {\n            const r = fromSeg.replace(fr, to)\n            return `${i}${r}`\n          }\n          return m\n        })\n        .replace(/=\\s+require\\((['\"'])(.+?)\\1\\)/gm, (m, q, fr) => {\n          if (fr == from) return m.replace(fr, to)\n          return m\n        })\n    }\n\n    let ff = f\n    const fre = /\\/\\* start example \\*\\/([\\s\\S]+?)\\/\\* end example \\*\\//.exec(f)\n    if (fre) {\n      const [, boundExample] = fre\n      ff = getPartial(boundExample)\n      LOG('Example (partial): %s', source)\n    } else {\n      LOG('Example: %s', source)\n    }\n\n    const lang = getExt(type, source)\n    const res = codeSurround(ff.trim(), lang)\n    return res\n  } catch ({ stack }) {\n    LOG('Could not read an example from %s.', source)\n    LOG(stack)\n    return match\n  }\n}\nexport const re = /^%EXAMPLE: (.[^\\n,]+)(?:, (.+?) => (.[^\\s,]+))?(?:, (.+))?%$/gm\n\nconst exampleRule = {\n  re,\n  replacement: replacer,\n}\n\nexport default exampleRule\n"]}