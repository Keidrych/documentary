{"version":3,"sources":["../../src/lib/index.js"],"names":[],"mappings":"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","file":"lib/index.js","sourcesContent":["import { createReadStream, lstatSync } from 'fs'\nimport spawn from 'spawncommand'\nimport { collect } from 'catchment'\nimport Pedantry from 'pedantry'\nimport tableRule from './rules/table'\nimport titleRule from './rules/method-title'\n\nexport const getLink = (title) => {\n  const l = title\n    .replace(/<\\/?code>/g, '')\n    .replace(/<\\/?strong>/g, '')\n    .replace(/<br\\/>/g, '')\n    .replace(/&nbsp;/g, '')\n    .replace(/[^\\w-\\d ]/g, '')\n    .toLowerCase()\n    .replace(/[, ]/g, '-')\n  return l\n}\n\nexport const makeARegexFromRule = (rule) => {\n  const re = new RegExp(`^${rule.re.source}`)\n  return re\n}\n\nexport const exactTable = makeARegexFromRule(tableRule)\nexport const exactMethodTitle = makeARegexFromRule(titleRule)\n\nexport const read = async (source) => {\n  const rs = createReadStream(source)\n  const data = await collect(rs)\n  return data\n}\n\nexport const getStream = (path) => {\n  const ls = lstatSync(path)\n  let stream\n  if (ls.isDirectory()) {\n    stream = new Pedantry(path)\n  } else if (ls.isFile()) {\n    stream = createReadStream(path)\n  }\n  return stream\n}\n\nexport const gitPush = async (source, output, message) => {\n  const { promise } = spawn('git', ['log', '--format=%B', '-n', '1'])\n  const { stdout } = await promise\n  const s = stdout.trim()\n  if (s == message) {\n    await git('reset', 'HEAD~1')\n  }\n  await git('add', source, output)\n  await git('commit', '-m', message)\n  await git('push', '-f')\n}\n\nexport const git = async (...args) => {\n  const { promise } = spawn('git', args, { stdio: 'inherit' })\n  await promise\n}\n\nexport const codeSurround = (content, lang = '') => {\n  const hasBackticks = /```/.test(content)\n  const t = hasBackticks ? '````' : '```'\n  return `${t}${lang}\\n${content}\\n${t}`\n}\n"]}