{"version":3,"sources":["../../src/lib/Documentary.js"],"names":[],"mappings":"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","file":"lib/Documentary.js","sourcesContent":["import { Replaceable, makeMarkers, makeCutRule, makePasteRule } from 'restream'\nimport {\n  createTocRule, commentRule as stripComments, codeRe, innerCodeRe, linkTitleRe, linkRe,\n} from './rules'\nimport tableRule, { tableRe } from './rules/table'\nimport methodTitleRule, { methodTitleRe } from './rules/method-title'\nimport treeRule from './rules/tree'\nimport exampleRule from './rules/example'\nimport forkRule from './rules/fork'\nimport { getLink } from '.'\nimport gifRule from './rules/gif'\nimport typeRule from './rules/type'\nimport badgeRule from './rules/badge'\nimport { typedefMdRe } from './rules/typedef-md'\nimport tableMacroRule from './rules/macro'\nimport sectionBrakeRule from './rules/section-break'\nimport { debuglog } from 'util'\nimport { macroRule, useMacroRule } from './rules/macros'\n\nconst LOG = debuglog('doc')\n\n/**\n * Documentary is a _Replaceable_ stream with transform rules for documentation.\n */\nexport default class Documentary extends Replaceable {\n  /**\n   * @param {DocumentaryOptions} options Options for the Documentary constructor.\n * @param {string} [options.toc] The table of contents to replace the `%TOC%` marker with.\n   */\n  constructor(options = {}) {\n    const { toc, locations = {}, types: allTypes = [] } = options\n    const tocRule = createTocRule(toc)\n\n    const {\n      table, methodTitle, code, innerCode, linkTitle,\n    } = makeMarkers({\n      table: tableRe,\n      methodTitle: methodTitleRe,\n      code: codeRe,\n      innerCode: innerCodeRe,\n      linkTitle: linkTitleRe,\n    })\n\n    /* below have ``` in them, therefore we want more control over handling them\n    * so that Replaceable does not confuse them with the code blocks.\n    */\n    const [cutCode, cutTable, cutMethodTitle, cutInnerCode] =\n      [code, table, methodTitle, innerCode, linkTitle].map((marker) => {\n        const rule = makeCutRule(marker)\n        return rule\n      })\n    const [insertCode, insertTable, insertMethodTitle, insertInnerCode] =\n      [code, table, methodTitle, innerCode, linkTitle].map((marker) => {\n        const rule = makePasteRule(marker)\n        return rule\n      })\n\n    super([\n      cutInnerCode, // don't want other rules being detected inside of inner code, including toc-titles\n      cutTable,\n      cutMethodTitle,\n      cutCode,\n      stripComments,\n\n      macroRule,\n      useMacroRule,\n\n      badgeRule,\n      treeRule,\n      ...[\n        exampleRule,\n        cutCode, // cut code again after inserting example\n      ],\n      forkRule,\n      tocRule,\n      gifRule,\n      typeRule,\n      sectionBrakeRule,\n\n      insertTable,\n      // typedefMdRule, // places a table hence just before table\n\n      {\n        re: typedefMdRe,\n        replacement(match, location, typeName) {\n          const types = locations[location]\n          if (!types) {\n            LOG('No types for location %s.', location)\n            return ''\n          }\n          const t = typeName ? types.filter(a => a.name == typeName) : types\n          const res = t.map((type) => {\n            return type.toMarkdown(allTypes)\n          }).join('\\n\\n')\n          return res\n        },\n      },\n\n      tableMacroRule, // macro is for the table\n      tableRule,\n\n      {\n        re: linkTitleRe,\n        replacement(match, title) {\n          const t = this.replaceInnerCode(title)\n          const link = getLink(t)\n          return `<a name=\"${link}\">${t}</a>`\n        },\n      },\n      {\n        re: linkRe, // TODO implement links system\n        replacement(match, title) {\n          // TODO replace inner code as well\n          const link = getLink(title)\n          return `<a name=\"${link}\">${title}</a>`\n        },\n      },\n      insertMethodTitle,\n      methodTitleRule,\n\n      insertCode,\n      insertInnerCode,\n      // those found inside of code blocks\n      insertTable,\n      insertMethodTitle,\n    ])\n\n    this._types = {}\n\n    this._innerCode = innerCode\n\n    this.on('types', types => {\n      types.forEach(this.addType.bind(this))\n    })\n  }\n  get innerCode() {\n    return this._innerCode\n  }\n  /**\n   * Replace a marked inner code with its actual value.\n   * @param {string} data\n   */\n  replaceInnerCode(data) {\n    const s = data.replace(this.innerCode.regExp, (m, i) => {\n      const val = this.innerCode.map[i]\n      return val\n    })\n    return s\n  }\n  addType(name) {\n    this.types[name] = true\n  }\n  get types() {\n    return this._types\n  }\n}\n\n/* documentary types/Documentary.xml */\n/**\n * @typedef {Object} DocumentaryOptions Options for the Documentary constructor.\n * @prop {string} [toc] The table of contents to replace the `%TOC%` marker with.\n */\n"]}