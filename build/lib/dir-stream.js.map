{"version":3,"sources":["../../src/lib/dir-stream.js"],"names":["readFile","path","name","p","rs","hasFile","array","file","some","a","processDir","stream","content","k","Object","keys","hasIndex","hasFooter","filter","includes","sort","reduce","acc","type","dirContent","Promise","r","j","pipe","end","on","args","createDirStream","source","PassThrough"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA;AAEA,MAAMA,WAAW,CAACC,IAAD,EAAOC,IAAP,KAAgB;AAC/B,QAAMC,IAAI,mBAAQF,IAAR,EAAcC,IAAd,CAAV;AACA,QAAME,KAAK,0BAAiBD,CAAjB,CAAX;AACA,SAAOC,EAAP;AACD,CAJD;;AAMA,MAAMC,UAAU,CAACC,KAAD,EAAQC,IAAR,KAAiB;AAC/B,SAAOD,MAAME,IAAN,CAAWC,KAAKA,KAAKF,IAArB,CAAP;AACD,CAFD;;AAIA,MAAMG,aAAa,OAAOC,MAAP,EAAeV,IAAf,EAAqBW,OAArB,KAAiC;AAClD,QAAMC,IAAIC,OAAOC,IAAP,CAAYH,OAAZ,CAAV;AACA,QAAMI,WAAWX,QAAQQ,CAAR,EAAW,UAAX,CAAjB;AACA,QAAMI,YAAYZ,QAAQQ,CAAR,EAAW,WAAX,CAAlB;AAEA,QAAME,OAAO,CACX,IAAIC,WAAW,CAAC,UAAD,CAAX,GAA0B,EAA9B,CADW,EAEX,GAAGH,EAAEK,MAAF,CAAST,KAAK,CAAC,CAAC,UAAD,EAAa,WAAb,EAA0BU,QAA1B,CAAmCV,CAAnC,CAAf,EAAsDW,IAAtD,EAFQ,EAGX,IAAIH,YAAY,CAAC,WAAD,CAAZ,GAA4B,EAAhC,CAHW,CAAb;AAMA,QAAMF,KAAKM,MAAL,CAAY,OAAOC,GAAP,EAAYpB,IAAZ,KAAqB;AACrC,UAAMoB,GAAN;AACA,UAAM;AAAEC,UAAF;AAAQX,eAASY;AAAjB,QAAgCZ,QAAQV,IAAR,CAAtC;;AACA,QAAIqB,QAAQ,MAAZ,EAAoB;AAClB,YAAM,IAAIE,OAAJ,CAAY,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC1B,cAAMvB,KAAKJ,SAASC,IAAT,EAAeC,IAAf,CAAX;AACAE,WAAGwB,IAAH,CAAQjB,MAAR,EAAgB;AAAEkB,eAAK;AAAP,SAAhB;AACAzB,WAAG0B,EAAH,CAAM,OAAN,EAAe,MAAM;AACnBJ;AACD,SAFD;AAGAtB,WAAG0B,EAAH,CAAM,OAAN,EAAeH,CAAf;AACD,OAPK,CAAN;AAQD,KATD,MASO,IAAIJ,QAAQ,WAAZ,EAAyB;AAC9B,YAAMb,WAAWC,MAAX,EAAmB,mBAAQV,IAAR,EAAcC,IAAd,CAAnB,EAAwCsB,UAAxC,CAAN;AACD;AACF,GAfK,EAeH,EAfG,CAAN;AAgBD,CA3BD;;AA6BA,MAAMrB,IAAI,OAAOQ,MAAP,EAAe,GAAGoB,IAAlB,KAA2B;AACnC,QAAMrB,WAAWC,MAAX,EAAmB,GAAGoB,IAAtB,CAAN;AACApB,SAAOkB,GAAP;AACD,CAHD;;AAKe,SAASG,eAAT,CAAyBC,MAAzB,EAAiCrB,OAAjC,EAA0C;AACvD,QAAMD,SAAS,IAAIuB,mBAAJ,EAAf;AACA/B,IAAEQ,MAAF,EAAUsB,MAAV,EAAkBrB,OAAlB;AACA,SAAOD,MAAP;AACD","sourcesContent":["import { resolve } from 'path'\nimport { createReadStream } from 'fs'\nimport { PassThrough } from 'stream'\n\n// this needs to go in `wrote` once it's rewritten\n\nconst readFile = (path, name) => {\n  const p = resolve(path, name)\n  const rs = createReadStream(p)\n  return rs\n}\n\nconst hasFile = (array, file) => {\n  return array.some(a => a == file)\n}\n\nconst processDir = async (stream, path, content) => {\n  const k = Object.keys(content)\n  const hasIndex = hasFile(k, 'index.md')\n  const hasFooter = hasFile(k, 'footer.md')\n\n  const keys = [\n    ...(hasIndex ? ['index.md'] : []),\n    ...k.filter(a => !['index.md', 'footer.md'].includes(a)).sort(),\n    ...(hasFooter ? ['footer.md'] : []),\n  ]\n\n  await keys.reduce(async (acc, name) => {\n    await acc\n    const { type, content: dirContent } = content[name]\n    if (type == 'File') {\n      await new Promise((r, j) => {\n        const rs = readFile(path, name)\n        rs.pipe(stream, { end: false })\n        rs.on('close', () => {\n          r()\n        })\n        rs.on('error', j)\n      })\n    } else if (type == 'Directory') {\n      await processDir(stream, resolve(path, name), dirContent)\n    }\n  }, {})\n}\n\nconst p = async (stream, ...args) => {\n  await processDir(stream, ...args)\n  stream.end()\n}\n\nexport default function createDirStream(source, content) {\n  const stream = new PassThrough()\n  p(stream, source, content)\n  return stream\n}\n"],"file":"dir-stream.js"}