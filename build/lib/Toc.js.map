{"version":3,"sources":["../../src/lib/Toc.js"],"names":[],"mappings":"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","file":"lib/Toc.js","sourcesContent":["import { Transform } from 'stream'\nimport { collect } from 'catchment'\nimport { getLink } from '.'\nimport { methodTitleRe, replaceTitle } from './rules/method-title'\nimport {\n  codeRe, commentRule as stripComments, innerCodeRe, linkTitleRe,\n} from './rules'\nimport tableRule from './rules/table'\nimport macroRule from './rules/macro'\nimport {\n  Replaceable, makeCutRule, makePasteRule, makeMarkers,\n} from 'restream'\nimport { tableRe } from './rules/table'\nimport typeRule from './rules/type'\nimport typedefMdRule from './rules/typedef-md'\n\nconst re = /(?:^|\\n) *(#+) +(.+)/g\n\nconst underline = /^ *([=-]+) *$/gm\n\nclass ChunkReplaceable extends Replaceable {\n  /**\n   * A chunk replaceable needs to be used because we want to process the whole chunk from pedantry first because we will need to sort titles as titles are detected rule-by-rule and not in the natural order.\n   * @constructor\n   */\n  constructor(skipLevelOne) {\n    const {\n      methodTitle, code, innerCode, table,\n    } = makeMarkers({\n      methodTitle: methodTitleRe,\n      code: codeRe,\n      innerCode: innerCodeRe,\n      table: tableRe,\n      linkTitle: linkTitleRe,\n    })\n\n    const [\n      cutCode, cutMethodTitle,\n      cutInnerCode, cutTable,\n    ] =\n      [code, methodTitle, innerCode, table].map((marker) => {\n        const rule = makeCutRule(marker)\n        return rule\n      })\n    const [\n      insertMethodTitle, insertTable,\n    ] =\n      [methodTitle, table].map((marker) => {\n        const rule = makePasteRule(marker)\n        return rule\n      })\n\n    const getTitle = (title) => {\n      const t = title.replace(innerCode.regExp, (m, i) => {\n        const val = innerCode.map[i]\n        return val\n      })\n      return t\n    }\n\n    const rules = [\n      cutInnerCode, // this ensures no link titles are detected inside of inner code\n\n      // make sure those are not cut with code\n      cutTable,\n      cutMethodTitle,\n\n      // never pasted back\n      cutCode,\n      stripComments,\n\n      // types will add link titles\n      typedefMdRule,\n      typeRule,\n\n      // paste those cut out earlier.\n      insertMethodTitle,\n      insertTable,\n\n      macroRule,\n      tableRule,\n      {\n        re: underline,\n        replacement(match, u, position, input) {\n          const level = u.indexOf('-') + 2 // either 0 or -1\n          if (this.skipLine(level)) return match\n          const lines = []\n          let ok = true\n          let s = input.substr(0, position - 1)\n          while (ok) {\n            const li = s.lastIndexOf('\\n')\n            const t = s.substr(li + 1)\n            const isLine = new RegExp(underline.source).test(t)\n            if (isLine) {\n              break\n            }\n            ok = /^ *(?!\\s*(?:>|(?:[+*-] )|(?:\\d+\\.)|(?:# )|`{3,}))[^\\s]+.*$/.test(t)\n            if (ok) {\n              lines.unshift(t)\n              s = s.substr(0, s.length - t.length - 1)\n            } else {\n              break\n            }\n          }\n          const title = `${lines.map(l => l.trim()).join('<br/>')}`\n          if (!title) return match\n          const t = getTitle(title)\n          const link = getLink(t)\n          this.emit('title', {\n            title: t, link, level, position,\n          })\n          return match\n        },\n      },\n      {\n        re,\n        replacement(match, { length: level }, title, position) {\n          if (this.skipLine(level)) return match\n          const t = getTitle(title)\n\n          this.emit('title', {\n            title: t,\n            link: getLink(t),\n            position,\n            level,\n          })\n          return match\n        },\n      },\n      {\n        re: methodTitleRe,\n        replacement(match, hash, isAsync, name, returnType, jsonArgs, position) {\n          try {\n            const { length: level } = hash\n\n            if (this.skipLine(level)) return match\n            const json = jsonArgs.trim() ? jsonArgs : '[]'\n            const bb = [isAsync, name]\n              .filter(a => a)\n              .join(' ').trim()\n            const args = JSON.parse(json)\n            const s = args.map(([argName, type, shortType]) => {\n              let tt\n              if (shortType) tt = shortType\n              else if (typeof type == 'string') tt = type\n              else tt = 'object'\n              return `${argName}: ${tt}`\n            })\n            const fullTitle = replaceTitle(hash, isAsync, name, returnType, jsonArgs)\n              .replace(/^#+ +/, '')\n            const link = getLink(fullTitle)\n\n            const rt = `${returnType ? `: ${returnType}` : ''}`\n            const title = `\\`${bb}(${s.join(', ')})${rt}\\``\n            this.emit('title', {\n              title,\n              link,\n              position,\n              level,\n            })\n          } catch (err) {\n            // ok\n            return match\n          }\n        },\n      },\n      {\n        re: linkTitleRe,\n        replacement(match, title, l, position) {\n          const t = getTitle(title)\n          const link = getLink(t)\n          this.emit('title', {\n            title: t,\n            ...(l == 't' ? { parentLevel: true } : { level: l.length }),\n            link,\n            position,\n          })\n          return match\n        },\n      },\n    ]\n    super(rules)\n    this.skipLevelOne = skipLevelOne\n  }\n\n  skipLine(level) {\n    return this.skipLevelOne && level == 1\n  }\n}\n\nexport default class Toc extends Transform {\n  /**\n   * A transform stream which will extract the titles in the markdown document and transform them into a markdown nested list with links.\n   * @param {Config} [config] Configuration object.\n   * @param {boolean} [config.skipLevelOne=true] Don't use the first title in the TOC (default `true`).\n   */\n  constructor(config = {}) {\n    const {\n      skipLevelOne = true,\n    } = config\n\n    super()\n    this.skipLevelOne = skipLevelOne\n    this.level = 0\n    this.titles = []\n  }\n\n  addTitle({ title, link, position, level, parentLevel }) {\n    this.titles.push({\n      title, link, position, level, parentLevel,\n    })\n  }\n\n  getTocLine({ title, link, level }) {\n    const heading = `[${title}](#${link})`\n    let s\n    const lvl = this.skipLevelOne ? level - 1 : level\n    if (lvl == 1) {\n      s = `- ${heading}`\n    } else {\n      const p = '  '.repeat(Math.max(lvl - 1, 0))\n      s = `${p}* ${heading}`\n    }\n    const ts = s.trimRight()\n    return ts\n  }\n\n  async _transform(buffer, enc, next) {\n    const cr = new ChunkReplaceable(this.skipLevelOne)\n    cr\n      .on('title', t => this.addTitle(t))\n      .end(buffer)\n\n    try {\n      await collect(cr)\n      const sorted = this.sortTitles()\n      sorted.forEach((title) => {\n        if (title.parentLevel) {\n          title.level = this.level + 1\n        } else {\n          this.level = title.level\n        }\n        const line = this.getTocLine(title)\n        this.push(line)\n        this.push('\\n')\n      })\n      this.clear()\n      next()\n    } catch (err) {\n      next(err)\n    }\n  }\n  clear() {\n    this.titles = []\n  }\n  sortTitles() {\n    const sorted = this.titles.sort(({ position: A }, { position: B }) => {\n      if (A > B) return 1\n      if (A < B) return -1\n      return 0\n    })\n    return sorted\n  }\n}\n\n/**\n * Gather all titles from the stream and return the table of contents as a string.\n * @returns {string} The table of contents.\n */\nexport const getToc = async (stream, h1) => {\n  const toc = new Toc({ skipLevelOne: !h1 })\n  stream.pipe(toc)\n  const res = await collect(toc)\n  return res.trimRight()\n}\n\n/**\n * @typedef {Object} Config\n * @property {boolean} [skipLevelOne=true] Don't use the first title in the TOC (default `true`).\n */\n"]}