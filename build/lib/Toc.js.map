{"version":3,"sources":["../../src/lib/Toc.js"],"names":[],"mappings":"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","file":"lib/Toc.js","sourcesContent":["import { Transform } from 'stream'\nimport Catchment from 'catchment'\nimport { getLink } from '.'\nimport { methodTitleRe, replaceTitle } from './rules/method-title'\nimport { codeRe, commentRule as stripComments, innerCodeRe, linkTitleRe } from './rules'\nimport { Replaceable } from 'restream'\nimport { makeCutRule, makePasteRule, makeMarkers } from 'restream'\nimport { tableRe } from './rules/table'\nimport typeRule from './rules/type'\nimport typedefMdRule from './rules/typedef-md'\n\nconst re = /(?:^|\\n) *(#+) *((?:(?!\\n)[\\s\\S])+)\\n/\n\nconst getBuffer = async (buffer) => {\n  const {\n    title, methodTitle, code, innerCode, table, linkTitle,\n  } = makeMarkers({\n    title: /^ *#+.+/gm,\n    methodTitle: methodTitleRe,\n    code: codeRe,\n    innerCode: innerCodeRe,\n    table: tableRe,\n    linkTitle: linkTitleRe,\n  })\n\n  const [cutTitle, cutLinkTitle, cutCode, cutMethodTitle, cutInnerCode, cutTable] =\n    [title, linkTitle, code, methodTitle, innerCode, table].map((marker) => {\n      const rule = makeCutRule(marker)\n      return rule\n    })\n  const [insertTitle, insertLinkTitle, insertMethodTitle, insertInnerCode, insertTable] =\n    [title, linkTitle, methodTitle, innerCode, table].map((marker) => {\n      const rule = makePasteRule(marker)\n      return rule\n    })\n\n  const rs = new Replaceable([\n    cutTitle,\n    cutInnerCode,\n    cutLinkTitle,\n    {\n      re: innerCode.regExp,\n      replacement() {\n        return ''\n      },\n    },\n    cutTable,\n    cutMethodTitle,\n    cutCode,\n    stripComments,\n    typedefMdRule,\n    typeRule,\n    insertMethodTitle,\n    insertTable,\n    insertLinkTitle,\n    insertInnerCode,\n    insertTitle,\n  ])\n  const c = new Catchment({ rs })\n  rs.end(buffer)\n  const b = await c.promise\n  return b\n}\n\nexport default class Toc extends Transform {\n  /**\n   * A transform stream which will extract the titles in the markdown document and transform them into a markdown nested list with links.\n   * @param {Config} [config] Configuration object.\n   * @param {boolean} [config.skipLevelOne=true] Don't use the first title in the TOC (default `true`).\n   */\n  constructor(config = {}) {\n    const {\n      skipLevelOne = true,\n    } = config\n    super()\n    this.skipLevelOne = skipLevelOne\n    this.level = 0\n  }\n  async _transform(buffer, enc, next) {\n    let res\n\n    const b = await getBuffer(buffer)\n    // create a single regex otherwise titles will always come before method titles\n    const superRe = new RegExp(`(?:${re.source})|(?:${methodTitleRe.source})|(?:${linkTitleRe.source})`, 'g')\n    while ((res = superRe.exec(b)) !== null) {\n      let t\n      let level\n      let link\n      if (res[8] && res[9]) {\n        t = res[8]\n        level = res[9] != 't' ? res[9].length : this.level + 1\n        link = getLink(t)\n      } else if (res[1]) { // normal title regex\n        const [, { length }, title] = res\n        this.level = length\n        if (this.skipLevelOne && this.level == 1) continue\n        t = title\n        link = getLink(title)\n      } else { // the method title regex\n        try {\n          const { length } = res[3]\n          this.level = length\n          if (this.skipLevelOne && this.level == 1) continue\n          const bb = res.slice(4, 6).filter(a => a).join(' ').trim()\n          const json = res[7] || '[]'\n          const args = JSON.parse(json)\n          const s = args.map(([name, type, shortType]) => {\n            let tt\n            if (shortType) tt = shortType\n            else if (typeof type == 'string') tt = type\n            else tt = 'object'\n            return `${name}: ${tt}`\n          })\n          const fullTitle = replaceTitle(...res.slice(3)).replace(/^#+ +/, '')\n          link = getLink(fullTitle)\n          t = `\\`${bb}(${s.join(', ')})${res[6] ? `: ${res[6]}` : ''}\\``\n        } catch (err) {\n          // ok\n          continue\n        }\n      }\n      const heading = `[${t}](#${link})`\n      let s\n      if (!level) level = this.level\n      level = this.skipLevelOne ? level - 1 : level\n      if (level == 1) {\n        s = `- ${heading}`\n      } else {\n        const p = '  '.repeat(Math.max(level - 1, 0))\n        s = `${p}* ${heading}`\n      }\n      this.push(s)\n      this.push('\\n')\n    }\n    next()\n  }\n}\n\nexport const getToc = async (stream) => {\n  const rs = new Toc()\n  stream.pipe(rs)\n  const { promise } = new Catchment({ rs })\n  const t = await promise\n  return t.trim()\n}\n\n/**\n * @typedef {Object} Config\n * @property {boolean} [skipLevelOne=true] Don't use the first title in the TOC (default `true`).\n */\n"]}