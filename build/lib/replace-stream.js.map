{"version":3,"sources":["../../src/lib/replace-stream.js"],"names":[],"mappings":"AAAA,MAAM,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,WAAW,CAAC,CAAC,WAAW,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ;AAC9E,MAAM,CAAC;EACL,aAAa,CAAC,CAAC,WAAW,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,CAAC,WAAW,CAAC,CAAC,MAAM;AACvF,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK;AACf,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK;AACjD,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK;AACpE,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI;AAClC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO;AACxC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI;AAClC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AAC1B,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG;AAChC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI;AAClC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK;AACpC,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE;;AAE7C,MAAM,CAAC,KAAK,CAAC,mBAAmB,CAAC,OAAO,CAAC,WAAW,CAAC;EACnD,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACnB,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,aAAa,CAAC,GAAG;;IAEjC,KAAK,CAAC;MACJ,KAAK,CAAC,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,SAAS;IAChD,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;MACd,KAAK,CAAC,CAAC,OAAO;MACd,WAAW,CAAC,CAAC,aAAa;MAC1B,IAAI,CAAC,CAAC,MAAM;MACZ,SAAS,CAAC,CAAC,WAAW;MACtB,SAAS,CAAC,CAAC,WAAW;IACxB,CAAC;;;;;IAKD,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,YAAY,CAAC,CAAC;MACtD,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/D,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,WAAW,CAAC,MAAM;QAC/B,MAAM,CAAC;MACT,CAAC;IACH,KAAK,CAAC,CAAC,UAAU,CAAC,CAAC,WAAW,CAAC,CAAC,iBAAiB,CAAC,CAAC,eAAe,CAAC,CAAC;MAClE,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/D,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,aAAa,CAAC,MAAM;QACjC,MAAM,CAAC;MACT,CAAC;;IAEH,KAAK,CAAC;MACJ,YAAY;MACZ,QAAQ;MACR,cAAc;MACd,OAAO;MACP,aAAa;;MAEb,SAAS;MACT,QAAQ;MACR,WAAW;MACX,QAAQ;MACR,OAAO;MACP,OAAO;MACP,QAAQ;;MAER,WAAW;MACX,aAAa,CAAC;MACd,SAAS;;MAET,CAAC;QACC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACpB,WAAW,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC;UACvB,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC;UAClC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC5C,CAAC;MACH,CAAC;MACD;QACE,EAAE,CAAC,CAAC,WAAW;QACf,WAAW,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC;UACxB,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC;UAC1D,GAAG,CAAC;UACJ,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;YACP,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK;UACtB,CAAC,CAAC,IAAI,CAAC;YACL,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACd,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;YAC3B,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG;UACpB;UACA,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QACxC,CAAC;MACH,CAAC;MACD;QACE,EAAE,CAAC,CAAC,MAAM,CAAC;QACX,WAAW,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC;;UAExB,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK;UAC1B,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QACxC,CAAC;MACH,CAAC;MACD,iBAAiB;MACjB,eAAe;;MAEf,UAAU;MACV,eAAe;;MAEf,WAAW;MACX,iBAAiB;IACnB,CAAC;;IAED,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;;IAEf,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;MACxB,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC;IACvC,CAAC;EACH;EACA,OAAO,CAAC,IAAI,CAAC,CAAC;IACZ,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EACrB;EACA,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IACV,MAAM,CAAC,IAAI,CAAC;EACd;AACF;;AAEA,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC;EAC/C,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,mBAAmB,CAAC;IAChC,GAAG;EACL,CAAC;;EAED,MAAM,CAAC;AACT","file":"lib/replace-stream.js","sourcesContent":["import { Replaceable, makeMarkers, makeCutRule, makePasteRule } from 'restream'\nimport {\n  createTocRule, commentRule as stripComments, codeRe, innerCodeRe, linkTitleRe, linkRe,\n} from './rules'\nimport tableRule, { tableRe } from './rules/table'\nimport methodTitleRule, { methodTitleRe } from './rules/method-title'\nimport treeRule from './rules/tree'\nimport exampleRule from './rules/example'\nimport forkRule from './rules/fork'\nimport { getLink } from '.'\nimport gifRule from './rules/gif'\nimport typeRule from './rules/type'\nimport badgeRule from './rules/badge'\nimport typedefMdRule from './rules/typedef-md'\n\nexport class DocumentationStream extends Replaceable {\n  constructor({ toc }) {\n    const tocRule = createTocRule(toc)\n\n    const {\n      table, methodTitle, code, innerCode, linkTitle,\n    } = makeMarkers({\n      table: tableRe,\n      methodTitle: methodTitleRe,\n      code: codeRe,\n      innerCode: innerCodeRe,\n      linkTitle: linkTitleRe,\n    })\n\n    /* below have ``` in them, therefore we want more control over handling them\n    * so that Replaceable does not confuse them with the code blocks.\n    */\n    const [cutCode, cutTable, cutMethodTitle, cutInnerCode] =\n      [code, table, methodTitle, innerCode, linkTitle].map((marker) => {\n        const rule = makeCutRule(marker)\n        return rule\n      })\n    const [insertCode, insertTable, insertMethodTitle, insertInnerCode] =\n      [code, table, methodTitle, innerCode, linkTitle].map((marker) => {\n        const rule = makePasteRule(marker)\n        return rule\n      })\n\n    super([\n      cutInnerCode,\n      cutTable,\n      cutMethodTitle,\n      cutCode,\n      stripComments,\n\n      badgeRule,\n      treeRule,\n      exampleRule,\n      forkRule,\n      tocRule,\n      gifRule,\n      typeRule,\n\n      insertTable,\n      typedefMdRule, // places a table hence just before table\n      tableRule,\n\n      { // a hackish way to update types property tables to include links to seen types.\n        re: /\\| _(\\w+)_ \\|/g,\n        replacement(match, name) {\n          if (!(name in this.types)) return match\n          return `| _[${name}](#${getLink(name)})_ |`\n        },\n      },\n      {\n        re: linkTitleRe,\n        replacement(match, title) {\n          const ic = new RegExp(innerCode.regExp.source).exec(title) // test please\n          let link\n          if (!ic) {\n            link = getLink(title)\n          } else {\n            const [, i] = ic\n            const val = innerCode.map[i]\n            link = getLink(val)\n          }\n          return `<a name=\"${link}\">${title}</a>`\n        },\n      },\n      {\n        re: linkRe, // make links\n        replacement(match, title) {\n          // check why is needed to use innerCode re above\n          const link = getLink(title)\n          return `<a name=\"${link}\">${title}</a>`\n        },\n      },\n      insertMethodTitle,\n      methodTitleRule,\n\n      insertCode,\n      insertInnerCode,\n      // those found inside of code blocks\n      insertTable,\n      insertMethodTitle,\n    ])\n\n    this._types = {}\n\n    this.on('types', types => {\n      types.forEach(this.addType.bind(this))\n    })\n  }\n  addType(name) {\n    this.types[name] = true\n  }\n  get types() {\n    return this._types\n  }\n}\n\nexport default function createReplaceStream(toc) {\n  const s = new DocumentationStream({\n    toc,\n  })\n\n  return s\n}\n\n// {\n//   re: /[\\s\\S]*/,\n//   replacement(match) {\n//     debugger\n//     return match\n//   },\n// },\n"]}