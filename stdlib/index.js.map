{
"version":3,
"file":"stdlib/index.js",
"lineCount":1560,
"mappings":"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",
"sources":["node_modules/fs/index.js","node_modules/erotic/src/lib.js","node_modules/os/index.js","node_modules/@artdeco/clean-stack/src/index.js","node_modules/erotic/src/callback.js","node_modules/erotic/src/index.js","node_modules/stream/index.js","node_modules/catchment/src/lib/index.js","node_modules/catchment/src/index.js","node_modules/@wrote/read/src/index.js","node_modules/makepromise/src/index.js","node_modules/path/index.js","node_modules/@wrote/ensure-path/src/index.js","node_modules/@wrote/read-dir-structure/src/index.js","node_modules/@wrote/clone/src/index.js","node_modules/mismatch/src/index.js","node_modules/rexml/src/lib/res-simple.js","node_modules/rexml/src/index.js","node_modules/rexml/src/lib/index.js","node_modules/argufy/src/index.js","node_modules/@depack/render/src/util.js","node_modules/@depack/render/src/lib/index.js","node_modules/@depack/render/src/index.js","node_modules/restream/src/lib/index.js","node_modules/restream/src/SyncReplaceable.js","node_modules/restream/src/lib/markers.js","node_modules/restream/src/Replaceable.js","node_modules/competent/src/lib/index.js","node_modules/tty/index.js","node_modules/util/index.js","node_modules/@idio/debug/src/ms.js","node_modules/@idio/debug/src/bytes.js","node_modules/erte/src/diff.js","node_modules/erte/src/index.js","node_modules/@idio/debug/src/modifiers/f.js","node_modules/@idio/debug/src/node.js","node_modules/@idio/debug/src/common.js","node_modules/crypto/index.js","node_modules/competent/src/make-comps/index.js","node_modules/competent/src/index.js","node_modules/@idio/debug/src/index.js","node_modules/@wrote/exists/src/index.js","node_modules/resolve-dependency/src/index.js","node_modules/child_process/index.js","node_modules/spawncommand/src/index.js","node_modules/pedantry/src/lib/index.js","node_modules/pedantry/src/index.js","node_modules/module/index.js","node_modules/@depack/detect/src/index.js","node_modules/fpj/src/index.js","node_modules/static-analysis/src/lib.js","node_modules/@depack/split/src/index.js","node_modules/static-analysis/src/index.js","node_modules/@depack/cache/src/lib.js","node_modules/which-stream/src/index.js","src/stdlib.js","node_modules/@depack/cache/src/index.js","node_modules/usually/src/index.js","node_modules/@wrote/write/src/index.js","node_modules/clearr/src/index.js","node_modules/forkfeed/src/index.js"],
"sourcesContent":["export default fs\nexport const {\n  ReadStream,\n  Stats,\n  WriteStream,\n  access,\n  accessSync,\n  appendFile,\n  appendFileSync,\n  chmod,\n  chmodSync,\n  chown,\n  chownSync,\n  close,\n  closeSync,\n  constants,\n  copyFile,\n  copyFileSync,\n  createReadStream,\n  createWriteStream,\n  exists,\n  existsSync,\n  fchmod,\n  fchmodSync,\n  fchown,\n  fchownSync,\n  fdatasync,\n  fdatasyncSync,\n  fstat,\n  fstatSync,\n  fsync,\n  fsyncSync,\n  ftruncate,\n  ftruncateSync,\n  futimes,\n  futimesSync,\n  lchmod,\n  lchmodSync,\n  lchown,\n  lchownSync,\n  link,\n  linkSync,\n  lstat,\n  lstatSync,\n  mkdir,\n  mkdirSync,\n  mkdtemp,\n  mkdtempSync,\n  open,\n  openSync,\n  read,\n  readFile,\n  readFileSync,\n  readSync,\n  readdir,\n  readdirSync,\n  readlink,\n  readlinkSync,\n  realpath,\n  realpathSync,\n  rename,\n  renameSync,\n  rmdir,\n  rmdirSync,\n  stat,\n  statSync,\n  symlink,\n  symlinkSync,\n  truncate,\n  truncateSync,\n  unlink,\n  unlinkSync,\n  unwatchFile,\n  utimes,\n  utimesSync,\n  watch,\n  watchFile,\n  write,\n  writeFile,\n  writeFileSync,\n  writeSync,\n} = fs","const getLastItem = (array) => {\n  const item = array[array.length - 1]\n  return item\n}\nconst getItemsFrom = (array, from) => array.slice(from)\n\n/**\n * Get a segment of the stack string, defaults are from = 0 and oneLine = false.\n * @param {string} stack the stack string\n * @param {number} [from=0] index from which to slice from\n * @param {boolean} [oneLine=false] Whether just first line must be returned\n * @returns {string} A stack segment starting from the specified line.\n */\nexport const getStackSegment = (stack, from = 0, oneLine = false) => {\n  if (from === 0 && !oneLine) {\n    return stack\n  }\n  const splitStack = stack\n    .split('\\n', oneLine ? from + 1 : undefined)\n  if (oneLine) {\n    const line = getLastItem(splitStack)\n    return line\n  } else {\n    const items = getItemsFrom(splitStack, from)\n    return items.join('\\n')\n  }\n}\n\n/**\n * Get the stack trace part of when the erotic function was called. Disregards\n * first two lines.\n * @param {string} stack error's stack\n * @param {boolean} [transparent] trim the top line as well\n * @returns {string} A part of stack\n */\nexport const getEntryStack = (stack, transparent = false) => {\n  const stackSegment = getStackSegment(stack, 2 + (transparent ? 1 : 0))\n  return stackSegment\n}\n\n/**\n * Get stack line of where the callback was called.\n * @param {string} stack Stack string.\n * @returns {string} Stack line.\n */\nexport const getCalleeStackLine = (stack) => {\n  const calleeStackLine = getStackSegment(stack, 2, true)\n  return calleeStackLine\n}\n\nexport const getStackHeading = message => `Error: ${message}`\n\n/**\n * Extract caller from the function's `arguments`.\n * @param {Object} args arguments\n * @returns {!Function} The caller function from `arguments.callee.caller`.\n */\nexport const getCallerFromArguments = (args) => {\n  const { callee: { caller } } = args\n  return caller\n}","export default os\nexport const {\n  EOL,\n  arch,\n  constants,\n  cpus,\n  endianness,\n  freemem,\n  homedir,\n  hostname,\n  loadavg,\n  networkInterfaces,\n  platform,\n  release,\n  tmpdir,\n  totalmem,\n  type,\n  uptime,\n  userInfo,\n} = os","import { homedir } from 'os'\n\nconst extractPathRegex = /\\s+at.*(?:\\(|\\s)(.*)\\)?/\nconst pathRegex = /^(?:(?:(?:node|(?:internal\\/[\\w/]*|.*node_modules\\/(?:IGNORED_MODULES)\\/.*)?\\w+)\\.js:\\d+:\\d+)|native)/\n\nconst homeDir = homedir()\n\n/**\n * Remove internal Node.JS lines from the error stack traces.\n * @param {string} stack The error stack to update.\n * @param {!_cleanStack.Config} [options] Options for the program.\n * @param {boolean} [options.pretty=false] Replace the absolute path to the home directory with the `~`. Default `false`.\n * @param {!Array<string>} [options.ignoredModules=\"\uff3b'pirates'\uff3d\"] Which modules to ignore in the path. Default `\uff3b'pirates'\uff3d`.\n */\nconst cleanStack = (stack, options) => {\n  const {\n    pretty = false, ignoredModules = ['pirates'],\n  } = options || {}\n  const j = ignoredModules.join('|')\n  const re = new RegExp(pathRegex.source.replace('IGNORED_MODULES', j))\n\n  return stack.replace(/\\\\/g, '/')\n    .split('\\n')\n    .filter(x => {\n      const pathMatches = x.match(extractPathRegex)\n      if (pathMatches === null || !pathMatches[1]) {\n        return true\n      }\n\n      const match = pathMatches[1]\n\n      // Electron\n      if (match.includes('.app/Contents/Resources/electron.asar') ||\n        match.includes('.app/Contents/Resources/default_app.asar')) {\n        return false\n      }\n\n      return !re.test(match)\n    })\n    .filter(x => x.trim())\n    .map(x => {\n      if (pretty) {\n        return x.replace(extractPathRegex, (m, p1) => m.replace(p1, p1.replace(homeDir, '~')))\n      }\n\n      return x\n    })\n    .join('\\n')\n}\n\nexport default cleanStack\n\n/* documentary types/index.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_cleanStack.Config} Config Options for the program.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {Object} _cleanStack.Config Options for the program.\n * @prop {boolean} [pretty=false] Replace the absolute path to the home directory with the `~`. Default `false`.\n * @prop {!Array<string>} [ignoredModules=\"\uff3b'pirates'\uff3d\"] Which modules to ignore in the path. Default `\uff3b'pirates'\uff3d`.\n */\n","import cleanStack from '@artdeco/clean-stack'\nimport {\n  getCallerFromArguments, getCalleeStackLine, getStackHeading,\n} from './lib'\n\n/**\n * Create a callback.\n * @param {!Function} entryCaller The function which was called at entry.\n * @param {string} entryStack The first line of the error stack to be returned\n * @param {boolean} [shadow=false] Print only entry stack.\n */\nexport function makeCallback(entryCaller, entryStack, shadow = false) {\n  /**\n   * This callback should be called when an asynchronous error occurred.\n   * @param {(string|Error)} messageOrError A message string or an _Error_ object at the point of actual error.\n   * @returns {Error} An error with the updated stack which includes the callee.\n   */\n  function cb(messageOrError) {\n    const caller = getCallerFromArguments(arguments)\n    const { stack: errorStack } = new Error()\n    const calleeStackLine = getCalleeStackLine(errorStack)\n    const isError = messageOrError instanceof Error\n    const message = isError ? messageOrError.message : messageOrError\n\n    const stackHeading = getStackHeading(message)\n    const entryHasCallee = caller !== null && entryCaller === caller\n    const stackMessage = [\n      stackHeading,\n      ...(entryHasCallee || shadow ? [entryStack] : [\n        calleeStackLine,\n        entryStack,\n      ]),\n    ].join('\\n')\n\n    const stack = cleanStack(stackMessage)\n    const properties = { message, stack }\n    const e = isError ? messageOrError : new Error()\n\n    return /** @type {Error} */ (Object.assign(/** @type {!Object} */ (e), properties))\n  }\n\n  return cb\n}","import {\n  getEntryStack, getCallerFromArguments,\n} from './lib'\nimport { makeCallback } from './callback'\n\n/**\n * Returns a function to create an error with a stack trace starting at the line in code when the call was made by the callee.\n * @param {boolean} [transparent] Pretend as if the call to the function lead to the error, without exposing any of the internal stack.\n */\nexport default function erotic(transparent) {\n  const { stack } = new Error()\n  const caller = getCallerFromArguments(arguments)\n  const entryStack = getEntryStack(stack, transparent)\n\n  return makeCallback(caller, entryStack, transparent)\n}","export default stream\nexport const {\n  Duplex,\n  PassThrough,\n  Readable,\n  Stream,\n  Transform,\n  Writable,\n} = stream","/**\n * Listens for the `error` event once so that when an error in _streamB_ is emitted, is is also emitted in the _streamA_.\n * @param {stream.Stream} streamA The stream that will emit an error once it's caught in the `streamB`.\n * @param {stream.Stream} streamB The stream from which the error originates.\n * @returns The stream the error is listened on, i.e., transparent to calling the `.once` method on that stream.\n */\nexport const pipeError = (streamA, streamB) => {\n  streamB\n    .once('error', e => {\n      streamA.emit('error', e)\n    })\n  return streamB\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('stream').Stream} stream.Stream\n */","import { Writable } from 'stream'\nimport erotic from 'erotic'\nimport cleanStack from '@artdeco/clean-stack'\nimport { pipeError } from './lib'\n\nfunction joinBufferData(array) {\n  return array.join('')\n}\n\n/**\n * A writable stream which collects incoming data into memory, and provides a promise to way for the stream to finish. The promise is resolved with joined chunks.\n */\nexport default class Catchment extends Writable {\n  /**\n   * Create a new catchment to pipe a readable stream into and collect all emitted data.\n   * @param {!_catchment.Options} [options] Options to pass to the `Writable` super constructor, and others shown below.\n   * @param {!stream.Readable} [options.rs] A readable stream to automatically pipe into the catchment. If an error occurs during reading of this stream, the catchment promise will be rejected with it.\n   * @param {boolean} [options.binary=false] Whether to return a raw buffer instead of a string. The string is created by joining all incoming chunks together with `.join('')` method. Default `false`.\n   * @example\n   *\n   * import { createReadStream } from 'fs'\n   * import Catchment from 'catchment'\n   *\n   * const rs = createReadStream('file.txt')\n   * const { promise } = new Catchment({ rs })\n   * const res = await promise\n   */\n  constructor(options) {\n    const {\n      binary = false, rs = null, ...opts\n    } = options || {}\n    /** @suppress {missingProperties} */\n    const { er = erotic(true), proxyError } = options || {}\n    const wrap = (_, e) => er(e)\n    super(/** @type {!stream.WritableOptions} */ (opts))\n    this._caughtData = []\n    this._promise = new Promise((r, j) => {\n      this.on('finish', () => {\n        let d\n        if (binary) {\n          d = Buffer.concat(this._caughtData)\n        } else {\n          d = joinBufferData(this._caughtData)\n        }\n        r(d)\n        this._caughtData = []\n      })\n      this.once('error', (e) => {\n        if (e.stack.indexOf('\\n') == -1) {\n          wrap`${e}`\n          j(e)\n        } else {\n          const stack = cleanStack(e.stack)\n          e.stack = stack\n          if (proxyError) wrap`${e}`\n          j(e)\n        }\n      })\n      if (rs) {\n        pipeError(this, rs).pipe(this)\n      }\n    })\n  }\n  _write(chunk, encoding, callback) {\n    this._caughtData.push(chunk)\n    callback()\n  }\n  /**\n   * A promise which will resolve will all data when the stream finishes.\n   * @type {Promise<string|Buffer>}\n   */\n  get promise() {\n    return this._promise\n  }\n}\n\n/**\n * Collect data into a catchment, and return results when the stream finishes.\n * @param {stream.Readable} readable A readable stream to collect all data from. If an error occurs during reading of this stream, the promise will be rejected with it.\n * @param {_catchment.CollectOptions} options Options when collecting data into a catchment. They can extend `Writable` options which will be passed to the `Catchment` constructor.\n * @param {boolean} [options.binary=false] Whether to return a raw buffer instead of a string. The string is created by joining all incoming chunks together with `.join('')` method. Default `false`.\n * @param {boolean} [options.proxyError=false] Sets whether an error emitted by the stream with have its stack start at the line where the `collect` was called rather than inside of the stream. In other words, hides the implementation of the stream. Default `false`.\n * @example\n *\n * import { collect } from 'catchment'\n * import { createReadStream } from 'fs'\n *\n * const rs = createReadStream(path)\n * await collect(rs, { proxyError: true })\n */\nexport const collect = async (readable, options = {}) => {\n  const { promise } = new Catchment({\n    rs: readable,\n    ...options,\n    er: erotic(true),\n  })\n  const res = await promise\n  return res\n}\n\n/* typal types/index.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_catchment.Options} Options Options to pass to the `Writable` super constructor, and others shown below.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {Object} _catchment.Options Options to pass to the `Writable` super constructor, and others shown below.\n * @prop {!stream.Readable} [rs] A readable stream to automatically pipe into the catchment. If an error occurs during reading of this stream, the catchment promise will be rejected with it.\n * @prop {boolean} [binary=false] Whether to return a raw buffer instead of a string. The string is created by joining all incoming chunks together with `.join('')` method. Default `false`.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('stream').Readable} stream.Readable\n */\n\n/* typal types/collect.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_catchment.CollectOptions} CollectOptions Options when collecting data into a catchment. They can extend `Writable` options which will be passed to the `Catchment` constructor.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {Object} _catchment.CollectOptions Options when collecting data into a catchment. They can extend `Writable` options which will be passed to the `Catchment` constructor.\n * @prop {boolean} [binary=false] Whether to return a raw buffer instead of a string. The string is created by joining all incoming chunks together with `.join('')` method. Default `false`.\n * @prop {boolean} [proxyError=false] Sets whether an error emitted by the stream with have its stack start at the line where the `collect` was called rather than inside of the stream. In other words, hides the implementation of the stream. Default `false`.\n */\n","import { createReadStream } from 'fs'\nimport { collect } from 'catchment'\n\n/**\n * Read a file.\n * @param {string} path The path to the file to read.\n */\nexport default async function read(path) {\n  const rs = createReadStream(path)\n  /** @type {string} */\n  const res = await collect(rs)\n  return res\n}\n\n/**\n * Read a file as a buffer.\n * @param {string} path The path to the file to read.\n */\nexport async function readBuffer(path) {\n  const rs = createReadStream(path)\n  /** @type {Buffer} */\n  const res = await collect(rs, { binary: true })\n  return res\n}","import erotic from 'erotic'\n\n// /**\n//  * @param {number} length\n//  * @param {number} i\n//  * @param {!Function} fn\n//  */\n// function checkArgumentIndex(length, i, fn) {\n//   if (i > length - 2) {\n//     throw new Error(`Function${fn.name ? ` ${fn.name}` : ''} does not accept that many arguments (max ${length - 1} + callback).`)\n//   }\n// }\n\n/**\n * Get a promise from a function which otherwise accepts a callback.\n * @param {Function} fn A function to promisify.\n * @param {*|Array<*>} [args] An array of arguments to use in the call, or a single argument.\n * @param {*} [resolveValue] A value to override the value with which the promise will be resolved.\n * @returns {Promise<*>} A promise resolved on callback invocation without an error and rejected on callback called with an error.\n */\nexport default async function makePromise(fn, args, resolveValue) {\n  const er = erotic(true)\n  if (typeof fn != 'function') {\n    throw new Error('Function must be passed.')\n  }\n  const { length: fnLength } = fn\n  if (!fnLength) {\n    throw new Error(`Function${fn.name ? ` ${fn.name}` : ''} does not accept any arguments.`)\n  }\n\n  const res = await new Promise((resolve, reject)=> {\n    const cb = (err, res) => {\n      if (err) {\n        const error = er(err)\n        return reject(error)\n      }\n      return resolve(resolveValue || res)\n    }\n\n    let allArgs = [cb]\n\n    if (Array.isArray(args)) {\n      // args.forEach((arg, i) => {\n      //   checkArgumentIndex(fnLength, i, fn)\n      // })\n      allArgs =  [...args, cb]\n    } else if (Array.from(arguments).length > 1) { // args passed as a single argument, not array\n      // checkArgumentIndex(fnLength, 0, fn)\n      allArgs = [args, cb]\n    }\n    fn(...allArgs)\n  })\n  return res\n}","export default path\nexport const {\n  basename,\n  delimiter,\n  dirname,\n  extname,\n  format,\n  isAbsolute,\n  join,\n  normalize,\n  parse,\n  posix,\n  relative,\n  resolve,\n  sep,\n  win32,\n} = path","import { mkdir, mkdirSync } from 'fs'\nimport makePromise from 'makepromise'\nimport { dirname } from 'path'\n\n/**\n * Makes sure that a file can be created by creating all directories to which it belongs to, e.g., `ensurePath('~/path/to/wrote.data')` will attempt to create `~/path/to` directory recursively.\n * @param {string} path The path to the file.\n * @throws {Error} When the first folder in the path is non-executable.\n */\nexport default async function ensurePath(path) {\n  const dir = dirname(path)\n  try {\n    await make(dir)\n    return path\n  } catch (err) {\n    if (/EEXIST/.test(err.message) && err.message.indexOf(dir) != -1) {\n      return path\n    }\n    throw err\n  }\n}\n\n/**\n * Recursive promise-based mkdir.\n * @param {string} dir Path to the directory to be created\n */\nasync function make(dir) {\n  try {\n    await makePromise(mkdir, dir)\n  } catch (err) {\n    if (err.code == 'ENOENT') {\n      const parentDir = dirname(dir)\n      await make(parentDir)\n      await make(dir)\n    } else if (err.code != 'EEXIST') { // created in parallel\n      throw err\n    }\n  }\n}\n\n/**\n * Makes sure that a file can be created by creating all directories to which it belongs to synchronously, e.g., `ensurePath('~/path/to/wrote.data')` will attempt to create `~/path/to` directory recursively.\n * @param {string} path The path to the file.\n * @throws {Error} When the first folder in the path is non-executable.\n */\nexport function ensurePathSync(path) {\n  const dir = dirname(path)\n  try {\n    makeSync(dir)\n    return path\n  } catch (err) {\n    if (/EEXIST/.test(err.message) && err.message.indexOf(dir) != -1) {\n      return path\n    }\n    throw err\n  }\n}\n\n/**\n * Recursive promise-based mkdir.\n * @param {string} dir Path to the directory to be created\n */\nfunction makeSync(dir) {\n  try {\n    mkdirSync(dir)\n  } catch (err) {\n    if (err.code == 'ENOENT') {\n      const parentDir = dirname(dir)\n      makeSync(parentDir)\n      makeSync(dir)\n    } else if (err.code != 'EEXIST') { // created in parallel\n      throw err\n    }\n  }\n}","import { lstat, readdir } from 'fs'\nimport makePromise from 'makepromise'\nimport { join, relative } from 'path'\n\n/**\n * Update information about directory's content with lstat.\n * @param {string} dirPath Path to the root directory\n * @param {!Array<string>} dirContent\n * @returns {!Promise<!Array<!_wrote.File>>} An array with file objects.\n */\nasync function lstatFiles(dirPath, dirContent) {\n  const readFiles = dirContent.map(async (relativePath) => {\n    const path = join(dirPath, relativePath)\n    const ls = await makePromise(lstat, path)\n    return {\n      lstat: ls,\n      path,\n      relativePath,\n    }\n  })\n  const res = await Promise.all(readFiles)\n  return res\n}\n\n/**\n * Check if lstat result is a directory\n * @param {!_wrote.File} lstatRes\n * @param {!fs.Stats} lstatRes.lstat The stats of the item.\n * @param {string} lstatRes.path The full path of the item.\n * @param {string} lstatRes.relativePath The name of the item.\n * @returns {boolean} true if is a directory\n */\nconst isDirectory = lstatRes => lstatRes.lstat.isDirectory()\n/**\n * Check if lstat result is not a directory\n * @param {!_wrote.File} lstatRes\n * @param {!fs.Stats} lstatRes.lstat The stats of the item.\n * @param {string} lstatRes.path The full path of the item.\n * @param {string} lstatRes.relativePath The name of the item.\n * @returns {boolean} true if is not a directory\n */\nconst isNotDirectory = lstatRes => !lstatRes.lstat.isDirectory()\n\nconst getType = (lstatRes) => {\n  if (lstatRes.lstat.isDirectory()) {\n    return 'Directory'\n  }\n  if (lstatRes.lstat.isFile()) {\n    return 'File'\n  }\n  if (lstatRes.lstat.isSymbolicLink()) {\n    return 'SymbolicLink'\n  }\n}\n\n/**\n * Read a directory, and return its structure as an object. Only `Files`, `Directories` and `Symlinks` are included!\n * @param {string} dirPath Path to the directory.\n * @param {!_wrote.ReadDirStructureOpts} [opts] Options for reading the dir structure.\n * @param {!Array<string>} [opts.ignore] The list of paths inside of the directory to ignore, e.g., `[.git]`.\n * @returns {!Promise<!_wrote.DirectoryStructure>} An object reflecting the directory structure.\n * @example\n  ```js\n  const res = await readDirStructure('dir')\n  // result:\n  {\n    type: 'Directory',\n    content: {\n      'data.txt': {\n        type: 'File'\n      },\n      subdir: {\n        type: 'Directory',\n        content: {\n          'data-ln.txt': {\n            type: 'SymbolicLink'\n          },\n        }\n      }\n    }\n  }\n  ```\n */\nexport default async function readDirStructure(dirPath, opts = {}) {\n  if (!dirPath) {\n    throw new Error('Please specify a path to the directory')\n  }\n  const { ignore = [] } = opts\n  const ls = await makePromise(lstat, dirPath)\n  if (!ls.isDirectory()) {\n    const err = new Error('Path is not a directory')\n    err.code = 'ENOTDIR'\n    throw err\n  }\n  const dir = /** @type {!Array<string>} */ (await makePromise(readdir, dirPath))\n  const lsr = await lstatFiles(dirPath, dir)\n\n  const directories = lsr.filter(isDirectory) // reduce at once\n  const notDirectories = lsr.filter(isNotDirectory)\n\n  const files = notDirectories.reduce((acc, current) => {\n    const type = getType(current)\n    return {\n      ...acc,\n      [current.relativePath]: {\n        type,\n      },\n    }\n  }, {})\n\n  const dirs = await directories.reduce(async (acc, { path, relativePath }) => {\n    const rel = relative(dirPath, path)\n    if (ignore.includes(rel)) return acc\n    const res = await acc\n    const structure = await readDirStructure(path)\n    return {\n      ...res,\n      [relativePath]: structure,\n    }\n  }, {})\n\n  const content = {\n    ...files,\n    ...dirs,\n  }\n  return {\n    content,\n    type: 'Directory',\n  }\n}\n\n/**\n * After running the `readDirStructure`, this function can be used to flatten the `content` output and return the list of all files (not including symlinks).\n * @param {!_wrote.Content} content The recursive content of the directory.\n * @param {string} path The path to the directory.\n */\nexport const getFiles = (content, path) => {\n  let files = []\n  let dirs = []\n  Object.keys(content).forEach((key) => {\n    const { type } = content[key]\n    if (type == 'File') files.push(join(path, key))\n    else if (type == 'Directory') dirs.push(key)\n  })\n  const dirFiles = dirs.reduce((acc, dir) => {\n    const { content: c } =\n      /** @type {!_wrote.Content} */ (content[dir])\n    const f = getFiles(c, join(path, dir))\n    return [...acc, ...f]\n  }, [])\n  return [...files, ...dirFiles]\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../').Content} _wrote.Content\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../').ReadDirStructureOpts} _wrote.ReadDirStructureOpts\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../').DirectoryStructure} _wrote.DirectoryStructure\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../').File} _wrote.File\n */","import ensurePath from '@wrote/ensure-path'\nimport readDirStructure from '@wrote/read-dir-structure'\nimport makePromise from 'makepromise'\nimport {\n  createReadStream, createWriteStream, lstat, readlink, symlink,\n} from 'fs'\nimport { join, basename } from 'path'\n\n/**\n * Clone a file.\n * @param {string} from Path to the file which to clone.\n * @param {string} to Path to the file where to clone.\n */\nconst cloneFile = async (from, to) => {\n  const rs = createReadStream(from)\n  const ws = createWriteStream(to)\n  rs.pipe(ws)\n  await Promise.all([\n    new Promise((r, j) => {\n      rs.on('close', r).on('error', j)\n    }),\n    new Promise((r, j) => {\n      ws.on('close', r).on('error', j)\n    }),\n  ])\n}\n\nconst cloneLn = async (from, to) => {\n  const target = await makePromise(readlink, from)\n  await makePromise(symlink, [target, to])\n}\n\n/**\n * Clones a directory.\n * @param {string} from Path of the file or directory being cloned.\n * @param {string} to Path to the cloned directory (not its parent!).\n */\nconst cloneDir = async (from, to) => {\n  await ensurePath(join(to, 'path.file'))\n  const { content } = await readDirStructure(from)\n  const pr = Object.keys(/** @type {!Object} */ (content)).map(async (k) => {\n    const { type } = content[k]\n    const p = join(from, k)\n    const pt = join(to, k)\n    if (type == 'Directory') {\n      await cloneDir(p, pt)\n    } else if (type == 'File') {\n      await cloneFile(p, pt)\n    } else if (type == 'SymbolicLink') {\n      await cloneLn(p, pt)\n    }\n  })\n  await Promise.all(pr)\n}\n\n/**\n * Clone a file or directory.\n * @param {string} path Path to the file or directory to clone.\n * @param {string} to Path to the directory to contain the file or directory being cloned (not the path to the cloned entity).\n */\nconst clone = async (path, to) => {\n  const s = /** @type {!fs.Stats} */ (await makePromise(lstat, path))\n  const b = basename(path)\n  const t = join(to, b)\n\n  if (s.isDirectory()) {\n    await cloneDir(path, t)\n  } else if (s.isSymbolicLink()) {\n    await cloneLn(path, t)\n  } else {\n    await ensurePath(t)\n    await cloneFile(path, t)\n  }\n}\n\nexport default clone\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('fs').Stats} fs.Stats\n */","/**\n * Returns an array of captured groups of a regular expression as objects. Does not modify the `lastIndex` property of the regex.\n * @param {RegExp} re The regular expression used for matching.\n * @param {string} string String to find matches in.\n * @param {Array<string>} keys Keys to use to create an captured group object.\n * @param {boolean} addPositions Whether to include positions in the return.\n * @example\n *\n```js\nconst re = /(test) inside of a (string)(\\d)?/ig\nconst s = 'Test inside of a STRING1. TEST inside of a string.'\nconst keys = ['test', 'string', 'number']\nconst res = mismatch(re, s, keys)\n\n// result:\n[\n {\n   test: 'Test',\n   string: 'STRING',\n   number: '1',\n },\n {\n   test: 'TEST',\n   string: 'string',\n },\n]\n```\n */\nexport default function mismatch(re, string, keys, addPositions = false) {\n  /** @type {!Array<!Object<string, string>>} */\n  const m = []\n  string.replace(re, (match, ...args) => {\n    // remove position and input\n    const position = args[args.length - 2]\n    const start = addPositions ? { position } : {}\n    const p = args.slice(0, args.length - 2)\n    const o = p.reduce((acc, capturedGroup, i) => {\n      const key = keys[i]\n      if (!(key && capturedGroup !== undefined)) return acc\n      acc[key] = capturedGroup\n      return acc\n    }, start)\n    m.push(o)\n  })\n  return m\n}","const nameRe = /([^\\s>=/]+)/\nconst valRe = /(?:\"([\\s\\S]*?)\"|'([\\s\\S]*?)')/\n\nexport const attributeRe = new RegExp(`${nameRe.source}(?:\\\\s*=\\\\s*${valRe.source})?`, 'g')\n\n/**\n * This regex will match all attributes as a string inside of element, e.g., matching `<el attr=\"abc\" bool/>` will result in `attr=\"abc\" bool`.\n */\nexport const attributesRe = new RegExp(`(?:\\\\s+((?:${attributeRe.source}\\\\s*)*))`)\n","import mismatch from 'mismatch'\nimport { extractProps as extractPropsSpec, getPropValue } from './lib'\nimport { attributesRe } from './lib/res'\nimport { attributesRe as simple, attributeRe as simpleAttribute } from './lib/res-simple'\n\nconst execRes = (re, s) => {\n  const res = re.exec(s)\n  if (!res) return res\n  const [, ...args] = res\n  return args\n}\n\n/**\n * Extract member elements from an XML string. Numbers and booleans will be parsed into their JS types.\n * @param {string|!Array<string>} tag Which tag to extract, e.g., `div`. Can also pass an array of tags, in which case the name of the tag will also be returned.\n * @param {string} string The XML string.\n * @example\n *\n * const xml = `\n * <html>\n *   <div id=\"1\" class=\"test\" contenteditable>\n *     Hello World\n *   </div>\n * </html>\n * `\n * const [{ content, props }] = extractTag('div', xml)\n * // content: Hello World\n * // props: { id: 1, class: 'test', contenteditable: true }\n */\nconst extractTags = (tag, string) => {\n  const tags = Array.isArray(tag) ? tag : [tag]\n  const t = tags.join('|')\n  const end1 = /\\s*\\/>/\n  const end2 = />([\\s\\S]+?)?<\\/\\1>/\n  const re = new RegExp(`<(${t})${simple.source}?(?:${end1.source}|${end2.source})`, 'g')\n\n  const matches = mismatch(re, string, ['t', 'a', 'v', 'v1', 'v2', 'c'])\n  const res = matches.map(({ 't': tagName, 'a': attributes = '', 'c': content = '' }) => {\n    const attrs = attributes.replace(/\\/$/, '').trim()\n    const props = extractProps(attrs)\n    return { content, props, tag: tagName }\n  })\n  return res\n}\n\n/**\n * Extracts the properties from the attributes part of the tag and returns them as an object. It will parse values if not specified otherwise.\n * @param {string} string The attribute part of the tag.\n * @param {boolean} parseValue Whether to transform the value into its value.\n */\nexport const extractProps = (string, parseValue = true) => {\n  const m = mismatch(simpleAttribute, string, ['key', 'val', 'def', 'f'])\n  const props = m\n    .reduce((acc, { 'key': key, 'val': val }) => {\n      if (val === undefined) {\n        acc[key] = true\n        return acc\n      }\n      acc[key] = parseValue ? getPropValue(val) : val\n      return acc\n    }, {})\n  return props\n}\n\n/**\n * Extract member elements from an XML string using the complex regular expression to match attributes that confirms to the XML spec. Numbers and booleans will be parsed into their JS types.\n * @param {string} tag Which tag to extract, e.g., `div`.\n * @param {string} string The XML string.\n * @example\n *\n * const xml = `\n<html>\n  <div id=\"1\" class=\"test\" contenteditable>\n    Hello World\n  </div>\n</html>\n`\n * const [{ content, props }] = extractTag('div', xml)\n * // content: Hello World\n * // props: { id: 1, class: 'test', contenteditable: true }\n */\nexport const extractTagsSpec = (tag, string) => {\n  const end1 = /\\s*\\/>/\n  const end2 = new RegExp(`>([\\\\s\\\\S]+?)?</${tag}>`)\n  const re = new RegExp(`<${tag}${attributesRe.source}?(?:${end1.source}|${end2.source})`, 'gu')\n  const r = []\n\n  let t\n  while ((t = execRes(re, string))) {\n    if (!t.length) continue\n    const [_p = '', _c = ''] = t\n    const p = _p.replace(/\\/$/, '').trim()\n    const props = extractProps(p)\n    const item = {\n      props,\n      content: _c,\n    }\n    r.push(item)\n  }\n  return r\n}\n\nexport default extractTags\nexport { extractPropsSpec }","import { attributeRe } from './res'\n\nexport const getPropValue = (val) => {\n  if (val == 'true') return true\n  if (val == 'false') return false\n  if (/^\\d+$/.test(val)) {\n    return parseInt(val, 10)\n  }\n  return val\n}\n\n/**\n * Parse the arguments part of an XML element\n * @param {string} string String to extract attributes from.\n * @param {boolean} parseValue Parse `true` and `false` values into a boolean, and numbers into integers. Default `true`.\n */\nexport const extractProps = (string, parseValue = true) => {\n  const o = {}\n  const re = new RegExp(`\\\\s+${attributeRe.source}`, 'gu')\n  ;` ${string}`.replace(re, (match, name,  doubleQuoteVal, singleQuoteVal) => {\n    const value = singleQuoteVal || doubleQuoteVal\n    const v = value === undefined ? true : value\n    const val = parseValue ? getPropValue(v) : v\n    o[name] = val\n  })\n  return o\n}\n","/**\n * @param {Array<string>} argv\n * @param {string} long\n * @param {string} [short]\n * @param {boolean} [bool]\n * @param {boolean} [number]\n */\nconst find = (argv, long, short, bool = false, number = false) => {\n  const re = short ? new RegExp(`^-(${short}|-${long})$`)\n    : new RegExp(`^--${long}$`)\n  const i = argv.findIndex(a => re.test(a))\n  if (i == -1) return { argv }\n\n  if (bool) {\n    return {\n      value: true,\n      index: i,\n      length: 1,\n    }\n  }\n\n  const j = i + 1\n  let value = argv[j]\n\n  if (!value || (typeof value == 'string' && value.startsWith('--'))) return { argv }\n\n  if (number) value = parseInt(value, 10)\n  return {\n    value,\n    index: i,\n    length: 2,\n  }\n}\n\n/**\n * Parse the config and extract arguments from the `process.argv` array.\n * @param {!_argufy.Config} config The configuration for parsing, where each key is a flag name and values are either strings, or objects with possible properties:\n *\n * - __short__ Shorthand for this argument, usually one letter.\n * - __boolean__ Does not have to be followed by a value, true if given.\n * - __number__ Parse as a number.\n * - __command__ Whether this argument can be specified as the first argument without the dash, such as `example run`.\n * - __multiple__ Extract multiple commands as an  array when `command` is set to true.\n *\n * @example\n  ```\n  const config = {\n    title: 't',       // program -t Title\n    open: {           // program -o\n      short: 'o',\n      boolean: true,\n    },\n    delay: {          // program -d 100\n      short: 'd',\n      number: true,\n    },\n    file: {           // program File.txt\n      command: true,\n    },\n    file2: {           // program File.txt File2.txt\n      command: true,\n      multiple: true,\n    },\n  }\n  ```\n * @param {!Array<string>} [args] Array with arguments to parse. `process.argv` is used by default. It is assumed that user arguments start from the 3rd position.\n * @returns {Object<string, string|Array<string>|boolean|number>} An object with all found values for the configuration request.\n */\nexport default function argufy(config = {}, args = process.argv) {\n  let [, , ...argv] = args\n  const titles = findTitles(argv)\n  argv = argv.slice(titles.length)\n  const config2 = Object.entries(config).reduce((acc, [key, value]) => {\n    if (typeof value == 'string') {\n      acc[key] = { short: value }\n    } else acc[key] = value\n    return acc\n  }, {})\n  const ranges = []\n  const res = Object.entries(config2).reduce((acc, [key, val]) => {\n    let value\n    try {\n      const { short, boolean, number, command, multiple } = val\n      if (command && multiple && titles.length) {\n        value = titles\n      } else if (command && titles.length) {\n        value = titles[0]\n      } else {\n        const r = find(argv, key, short, boolean, number)\n        ;({ value } = r)\n        const { index, length } = r\n        if (index !== undefined && length) ranges.push({ index, length })\n      }\n    } catch (err) {\n      return acc\n    }\n    if (value === undefined) return acc\n    const r = { ...acc, [key]: value }\n    return r\n  }, {})\n  let _argv = argv\n  ranges.forEach(({ index, length }) => {\n    Array.from({ length }).forEach((_, i) => {\n      const j = index + i\n      _argv[j] = null\n    })\n  })\n  _argv = _argv.filter(a => a !== null)\n  Object.assign(res, { _argv })\n  return res\n}\n\n/** @param {!Array<string>} argv */\nconst findTitles = argv => {\n  const titles = []\n  for (let i = 0; i < argv.length; i++) {\n    const a = argv[i]\n    if (a.startsWith('-')) break\n    titles.push(a)\n  }\n  return titles\n}\n\n/**\n * Based on the argufy config, creates an object that can be passed to `usually`.\n * @param {!_argufy.Config} argsConfig The configuration for parsing, where each key is a flag name and values are either strings, or objects with possible properties:\n * @example\n```\n{ 'input': 'The input to the program',\n  '--output, -o': 'The output of the program', }\n```\n */\nexport const reduceUsage = (argsConfig) => {\n  const a = Object.keys(argsConfig).reduce((acc, key) => {\n    const val = argsConfig[key]\n    if (typeof val == 'string') {\n      const k = `-${val}`\n      acc[k] = ''\n      return acc\n    }\n    let k = val.command ? key : `--${key}`\n    if (val.short) k = `${k}, -${val.short}`\n    let d = val.description\n    if (val.default) d = `${d}\\nDefault: ${val.default}.`\n    acc[k] = d\n    return acc\n  }, {})\n  return a\n}\n\n/* documentary types/index.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_argufy.Config} Config The configuration for parsing, where each key is a flag name and values are either strings, or objects with possible properties:\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {Object<string, string|!_argufy.Flag>} _argufy.Config The configuration for parsing, where each key is a flag name and values are either strings, or objects with possible properties:\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_argufy.Flag} Flag The flag passed to the program.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {Object} _argufy.Flag The flag passed to the program.\n * @prop {string} [short] Shorthand for this argument, usually one letter.\n * @prop {boolean} [boolean=false] Whether the flag is a boolean and does not require a value. Default `false`.\n * @prop {boolean} [number=false] Specifies whether the flag should be parsed as a number. Default `false`.\n * @prop {boolean} [command=false] If set to true, the value is read from the first argument passed to the CLI command (e.g., `$ cli command`). Default `false`.\n * @prop {boolean} [multiple=false] When using the `command` property, will parse the commands as an array. Default `false`.\n * @prop {string} [default] The default value for the argument. Does not actually set the value, only used in reducing the usage info (`argufy` bin on the other hand will set the default).\n * @prop {string} [description] The description to be used by `usually`.\n */\n","// DOM properties that should NOT have \"px\" added when numeric\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|ows|mnc|ntw|ine[ch]|zoo|^ord/i\n\nexport let encodeEntities = s => `${s}`\n  .replace(/&/g, '&amp;')\n  .replace(/</g, '&lt;')\n  .replace(/>/g, '&gt;')\n  .replace(/\"/g, '&quot;')\n\nexport let indent = (s, char) => `${s}`.replace(/(\\n+)/g, '$1' + (char || '\\t'))\n\nexport let isLargeString = (s, length = 40, ignoreLines = false) => (`${s}`.length>length || (!ignoreLines && `${s}`.indexOf('\\n')!=-1) || `${s}`.indexOf('<')!==-1)\n\nconst JS_TO_CSS = {}\n\n/**\n * Convert an Object style to a CSSText string.\n * @param {!Object} s\n */\nexport function styleObjToCss(s) {\n  let str = ''\n  for (let prop in s) {\n    let val = s[prop]\n    if (val!=null) {\n      if (str) str += ' '\n      // str += jsToCss(prop);\n      str += JS_TO_CSS[prop] || (JS_TO_CSS[prop] = prop.replace(/([A-Z])/g,'-$1').toLowerCase())\n      str += ': '\n      str += val\n      if (typeof val=='number' && IS_NON_DIMENSIONAL.test(prop)===false) {\n        str += 'px'\n      }\n      str += ';'\n    }\n  }\n  return str || undefined\n}\n\n/**\n * Reconstruct Component-style `props` from a VNode.\n * Ensures default/fallback values from `defaultProps`:\n * Own-properties of `defaultProps` not present in `vnode.attributes` are added.\n * @param {!preact.VNode} vnode The VNode to get props for\n */\nexport function getNodeProps(vnode) {\n  const props = {\n    ...vnode.attributes, children: vnode.children,\n  }\n\n  let defaultProps = vnode.nodeName.defaultProps\n  if (defaultProps!==undefined) {\n    for (let i in defaultProps) {\n      if (props[i]===undefined) {\n        props[i] = defaultProps[i]\n      }\n    }\n  }\n\n  return props\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').VNode} preact.VNode\n */","import { encodeEntities, styleObjToCss } from '../util'\n\n/**\n * Maps attributes to `name=\"value\"` strings, and returns html if dangerouslySetInnerHTML is given.\n * @param {!Object<string, ?>} attributes\n * @param {string} nodeName\n * @param {Object} [props]\n * @param {boolean} [props.allAttributes=false]\n * @param {boolean} [props.xml=false]\n * @param {boolean} [props.isSvgMode=false]\n * @param {boolean} [props.sort=false]\n */\nexport const mapAttributes = (attributes, nodeName, {\n  allAttributes, xml, isSvgMode, sort, selectValue,\n} = {}) => {\n  let html\n  const attrs = Object.keys(attributes)\n  if (sort) attrs.sort()\n  const a = attrs.map((name) => {\n    let v = attributes[name]\n    if (name == 'children') return\n    if (name.match(/[\\s\\n\\\\/='\"\\0<>]/)) return\n    if (!allAttributes && ['key', 'ref'].includes(name)) return\n    if (name == 'className') {\n      if (attributes.class) return // class takes precedence\n      name = 'class'\n    } else if (name == 'htmlFor') {\n      if (attributes.for) return // class takes precedence\n      name = 'for'\n    } else if (name == 'srcSet') {\n      if (attributes.srcset) return // srcset takes precedence\n      name = 'srcset'\n    }\n    if (isSvgMode && name.match(/^xlink:?./)) {\n      name = name.toLowerCase().replace(/^xlink:?/, 'xlink:')\n    }\n    if (name == 'style' && v && typeof v == 'object') {\n      v = styleObjToCss(v)\n    }\n    if (name == 'dangerouslySetInnerHTML') {\n      html = v && v.__html // side-effect\n    } else if ((v || v===0 || v==='') && typeof v!='function') {\n      if (v===true || v==='') {\n        v = name\n        // in non-xml mode, allow boolean attributes\n        if (!xml) return name\n      }\n      let s = ''\n      if (name == 'value') {\n        if (nodeName == 'select') {\n          selectValue = v\n          return\n        } else if (nodeName == 'option' && selectValue == v) {\n          s = 'selected '\n        }\n      }\n      return `${s}${name}=\"${encodeEntities(v)}\"`\n    }\n  }).filter(Boolean)\n  return { mappedAttributes: a, html, selectValue }\n}\n\nexport const inlineElements = [\n  'a', 'abbr', 'acronym', 'audio', 'b', 'bdi', 'bdo', 'big', 'br',\n  'button', 'canvas', 'cite', 'code', 'data', 'datalist', 'del',\n  'dfn', 'em', 'embed', 'i', 'iframe', 'img', 'input', 'ins',\n  'kbd', 'label', 'map', 'mark', 'meter', 'noscript', 'object',\n  'output', 'picture', 'progress', 'q', 'ruby', 's', 'samp',\n  'slot', 'small', 'span', 'strong', 'sub',\n  'sup', 'svg', 'template', 'textarea', 'time', 'u', 'tt', 'var',\n  'video', 'wbr',\n]","import { encodeEntities, indent, isLargeString, getNodeProps } from './util'\nimport { mapAttributes, inlineElements } from './lib'\n\n// components without names, kept as a hash for later comparison to return consistent UnnamedComponentXX names.\nconst UNNAMED = []\n\nconst VOID_ELEMENTS = /^(area|base|br|col|embed|hr|img|input|link|meta|param|source|track|wbr)$/\nconst INLINE_ELEMENTS = new RegExp(`^(${inlineElements.join('|')})$`)\n\n/** Only render elements, leaving Components inline as `<ComponentName ... />`.\n * This method is just a convenience alias for `render(vnode, context, { shallow:true })`\n * @param {preact.VNode} vnode JSX VNode to render.\n * @param {!Object} [context]  Optionally pass an initial context object through the render path.\n */\nconst shallowRender = (vnode, context) => renderToString(vnode, { shallow: true }, context)\n\n// const prettyAttributeHook = (name, value, context, opts) => {\n//   let indentChar = typeof opts.pretty=='string' ? opts.pretty : '  '\n//   return `\\n${indentChar}${name}=\"${encodeEntities(value)}\"`\n// }\n\n/**\n * Render Preact JSX Components to an HTML string.\n * @param {preact.VNode} vnode JSX VNode to render.\n * @param {!_depack.RenderConfig} [config] Rendering options.\n */\nconst render = (vnode, config = {}, context = {}) => {\n  const { addDoctype, pretty } = config\n  const res = renderToString(vnode, config, context)\n  if (addDoctype) return `<!doctype html>${pretty ? '\\n': ''}${res}`\n  return res\n}\n\n/** Render Preact JSX + Components to an HTML string.\n * @param {preact.VNode|boolean|number|string|undefined} vnode\n * @param {!_depack.RenderConfig} [opts]\n * @param {!Object} [context]\n * @param {boolean} [inner]\n * @param {boolean} [isSvgMode]\n * @param {string} [selectValue] Used to set the value of options via select's value `attribute`.\n */\nfunction renderToString(\n  vnode, opts = {}, context = {}, inner = false, isSvgMode = false, selectValue,\n) {\n  if (vnode==null || typeof vnode=='boolean') {\n    return ''\n  }\n\n  const {\n    pretty = false,\n    shallow = false,\n    renderRootComponent = false,\n    shallowHighOrder = false,\n    sortAttributes,\n    allAttributes,\n    xml,\n    initialPadding = 0,\n    closeVoidTags = false,\n  } = opts\n\n  let { lineLength = 40 } = opts\n  lineLength -= initialPadding\n\n  let { nodeName, attributes = {} } = vnode\n\n  const noPretty = ['textarea', 'pre'].includes(nodeName)\n  const ip = ' '.repeat(initialPadding)\n\n  const indentChar = typeof pretty == 'string' ? pretty :\n    `  ${ip}`\n\n  // #text nodes\n  if (typeof vnode!='object' && !nodeName) {\n    return encodeEntities(vnode)\n  }\n\n  // components\n  if (typeof nodeName=='function') {\n    // nodeName = /** @type {!Function} */ (nodeName)\n    if (shallow && (inner || !renderRootComponent)) {\n      nodeName = getComponentName(nodeName)\n    }\n    else {\n      let props = getNodeProps(/** @type {!preact.VNode} */ (vnode)),\n        rendered\n\n      if (!nodeName.prototype || typeof nodeName.prototype.render!='function') {\n        // stateless functional components\n        rendered = nodeName(props, context)\n      }\n      else {\n        // class-based components\n        let c = /** @type {!preact.Component} */ (new nodeName(props, context))\n        // turn off stateful re-rendering:\n        c._disable = c.__x = true\n        c.props = props\n        c.context = context\n        if (nodeName.getDerivedStateFromProps) c.state = {\n          ...c.state,\n          ...nodeName.getDerivedStateFromProps(c.props, c.state),\n        }\n        else if (c.componentWillMount) c.componentWillMount()\n        rendered = c.render(c.props, c.state, c.context)\n\n        if (c.getChildContext) {\n          context = { ...context, ...c.getChildContext() }\n        }\n      }\n\n      return renderToString(rendered, opts, context, shallowHighOrder, isSvgMode, selectValue)\n    }\n  }\n\n  // render JSX to HTML\n  let s = '', html\n\n  let mappedAttributes\n  ;({ mappedAttributes, html, selectValue } = mapAttributes(/** @type {!Object} */ (attributes), nodeName, {\n    allAttributes, xml, isSvgMode, sort: sortAttributes, selectValue,\n  }))\n\n  // account for >1 multiline attribute\n  if (pretty) {\n    const nl = `<${nodeName}`\n    let cl = nl.length\n    s = mappedAttributes.reduce((acc, current) => {\n      const newLength = cl + 1 + current.length\n      if (newLength > lineLength) {\n        cl = indentChar.length\n        return `${acc}\\n${indentChar}${current}`\n      }\n      cl = newLength\n      return `${acc} ${current}`\n    }, '')\n  } else {\n    s = mappedAttributes.length ? ' ' + mappedAttributes.join(' ') : ''\n  }\n\n  s = `<${nodeName}${s}>`\n  if (`${nodeName}`.match(/[\\s\\n\\\\/='\"\\0<>]/)) throw s\n\n  let isVoid = `${nodeName}`.match(VOID_ELEMENTS)\n  if (closeVoidTags) {\n    if (isVoid) s = s.replace(/>$/, ' />')\n  }\n\n  let pieces = []\n  if (html) {\n    // if multiline, indent.\n    if (!noPretty && pretty && (isLargeString(html) || html.length + getLastLineLength(s) > lineLength)) {\n      html = '\\n' + indentChar + indent(html, indentChar)\n    }\n    s += html\n  }\n  else if (vnode.children) {\n    let hasLarge = pretty && s.includes('\\n')\n    const noPrettyPieces = []\n    pieces = vnode.children.map((child, j) => {\n      if (child==null || child===false) return\n      const childSvgMode = nodeName == 'svg' ? true : nodeName == 'foreignObject' ? false : isSvgMode\n      const ret = renderToString(child, opts, context, true, childSvgMode, selectValue)\n      if (!ret) return\n      if (pretty && ret.length + getLastLineLength(s) > lineLength)\n        hasLarge = true\n      if (typeof child.nodeName == 'string') {\n        const rr = ret.replace(new RegExp(`</${child.nodeName}>$`), '')\n        if (isNodeInline(child.nodeName, rr)) noPrettyPieces[j] = ret.length\n      }\n      return ret\n    }).filter(Boolean)\n\n    if (pretty && hasLarge && !noPretty) {\n      pieces = pieces.reduce((acc, p, i) => {\n        const shouldSkipPretty = noPrettyPieces[i - 1] // length of prev inline\n        let currentBlockElement = shouldSkipPretty && /^<([\\s\\S]+?)>/.exec(p)\n        if (currentBlockElement) {\n          [, currentBlockElement] = currentBlockElement\n          currentBlockElement = !INLINE_ELEMENTS.test(currentBlockElement)\n        }\n        if (shouldSkipPretty && !currentBlockElement) {\n          const re = /[^<]*?(\\s)/y\n          let rres\n          let firstMatch = true\n          let lastWs\n          while ((rres = re.exec(p)) !== null) {\n            const [match] = /** @type {!Iterable}*/ (rres)\n            ;([,lastWs] = /** @type {!Iterable}*/ (rres))\n            const j = re.lastIndex + match.length - 1\n            if (j > lineLength - (firstMatch ? shouldSkipPretty : 0)) {\n              const before = p.slice(0, re.lastIndex - 1)\n              p = p.slice(re.lastIndex)\n              if (firstMatch) {\n                acc.push(before)\n                firstMatch = false\n              } else {\n                acc.push('\\n' + indentChar + indent(before, indentChar))\n              }\n              re.lastIndex = 0\n            }\n          }\n          if (lastWs) acc.push(lastWs)\n          acc.push(p)\n        } else {\n          acc.push('\\n' + indentChar + indent(p, indentChar))\n        }\n        return acc\n      }, [])\n    }\n  }\n\n  if (pieces.length) {\n    s += pieces.join('')\n  }\n  else if (xml) {\n    return s.substring(0, s.length-1) + ' />'\n  }\n\n  if (!isVoid) {\n    // inline elements should not have additional whitespace\n    // however if there were other tags inside them, that should be fine\n    const lastPiece = pieces[pieces.length - 1]\n    const isInline = isNodeInline(nodeName, lastPiece)\n    if (!isInline && !noPretty && pretty && s.includes('\\n')) s += `\\n${ip}`\n    s += `</${nodeName}>`\n  }\n\n  return s\n}\n\nconst isNodeInline = (nodeName, lastPiece) => {\n  return `${nodeName}`.match(INLINE_ELEMENTS) && (lastPiece ? !/>$/.test(lastPiece) : true)\n}\n\n/**\n * @param {!Function} component\n */\nfunction getComponentName(component) {\n  return component.displayName || component!==Function && component.name || getFallbackComponentName(component)\n}\n\n/**\n * @param {!Function} component\n */\nfunction getFallbackComponentName(component) {\n  /** @type {string} */\n  const str = Function.prototype.toString.call(component)\n\n  let name = (str.match(/^\\s*function\\s+([^( ]+)/) || '')[1]\n  if (!name) {\n    // search for an existing indexed name for the given component:\n    let index = -1\n    for (let i=UNNAMED.length; i--; ) {\n      if (UNNAMED[i]===component) {\n        index = i\n        break\n      }\n    }\n    // not found, create a new indexed name:\n    if (index<0) {\n      index = UNNAMED.push(component) - 1\n    }\n    name = `UnnamedComponent${index}`\n  }\n  return name\n}\n\nexport default render\n\nexport { shallowRender }\n\nconst getLastLineLength = (s) => {\n  const st = s.split('\\n')\n  const lastLine = st[st.length - 1]\n  return lastLine.length\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').RenderConfig} _depack.RenderConfig\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').VNode} preact.VNode\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').Component} preact.Component\n */","export function checkRule(reObject) {\n  if (typeof reObject != 'object') {\n    return false\n  }\n  const { re, replacement } = reObject\n  const hasRe = re instanceof RegExp\n  const type = ['string', 'function'].indexOf(typeof replacement) != -1\n  return hasRe && type\n}\n\nexport const hideStack = (commonError, thrownError) => {\n  if (!(thrownError instanceof Error)) throw thrownError\n  const [, , commonLine] = commonError.stack.split('\\n', 3)\n  const i = thrownError.stack.indexOf(commonLine)\n  if (i == -1) throw thrownError\n  const stack = thrownError.stack.substr(0, i - 1)\n  const li = stack.lastIndexOf('\\n')\n  thrownError.stack = stack.substr(0, li)\n  throw thrownError\n}","import { checkRule, hideStack } from './lib'\n\n/**\n  * _SyncReplaceable_ function receives the whole string and returns the result of transform rules which are either sync function replacers or string replacements (see https://github.com/artdecocode/restream#rule-type for more info). This is not a class and just a function.\n  * @param {string|!Buffer} input The string or buffer to transform synchronously using the replacements. Does not support asynchronous replacements.\n  * @param {!Array<!_restream.Rule>} rules An array with rules.\n  * @return {string}\n  * @example\n```\n// markdown __ to html <em> implementation\nconst stream = SyncReplaceable('__hello world__', {\n  re: /__(\\S+)__/g,\n  replacement(match, p1) {\n    return `<em>${p1}</em>`\n  },\n})\n```\n  */\nfunction SyncReplaceable(input, rules) {\n  /**\n   * @suppress {globalThis}\n   */\n  function replace() {\n    const fr = rules.filter(checkRule)\n    const s = fr.reduce((acc, { re, replacement }) => {\n      /** @type {string} */\n      let Acc = acc\n      if (this._broke) return Acc\n\n      if (typeof replacement == 'string') {\n        Acc = Acc.replace(re, replacement)\n        return Acc\n      } else {\n        let commonError\n        const t = Acc.replace(re, (match, ...args) => {\n          commonError = new Error()\n          try {\n            if (this._broke) return match\n            const p = replacement.call(this, match, ...args)\n            return p\n          } catch (e) { // hide stack for sync stack traces\n            hideStack(commonError, e)\n          }\n        })\n        return t\n      }\n    }, `${input}`)\n    return s\n  }\n  replace.brake = () => { replace._broke = true }\n  return replace.call(replace)\n}\n\nexport default SyncReplaceable\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').Rule} _restream.Rule\n */","import SyncReplaceable from '../SyncReplaceable'\n\n/**\n * @param {string} name\n */\nconst getDefaultRegExp = (name) => {\n  return new RegExp(`%%_RESTREAM_${name.toUpperCase()}_REPLACEMENT_(\\\\d+)_%%`, 'g')\n}\n\n/**\n * Make a unique string to replace cut text with.\n * @param {string} name\n * @param {number} index\n */\nconst getDefaultReplacement = (name, index) => {\n  return `%%_RESTREAM_${name.toUpperCase()}_REPLACEMENT_${index}_%%`\n}\n\n/**\n * Create a new marker.\n * @param {string} name The name of the matcher, used in the doc marker.\n * @param {!RegExp} re The regular expression used for detection.\n * @param {!_restream.MakeMarkersConfig} [conf] Additional configuration.\n * @param {function(string, number): string} [conf.getReplacement] The function used to create a replacement when some text needs to be cut.\n * @param {function(string): !RegExp} [conf.getRegex] The function used to create a RegExp to detect replaced chunks.\n * @return {!_restream.Marker} The marker.\n */\nconst makeMarker = (name, re, conf) => {\n  const {\n    getReplacement = getDefaultReplacement,\n    getRegex = getDefaultRegExp,\n  } = conf || {}\n  const regExp = getRegex(name)\n  return {\n    name,\n    re,\n    regExp,\n    getReplacement,\n    map: {},\n    lastIndex: 0,\n  }\n}\n\n/**\n * Make markers from a configuration object.\n * @param {!Object.<string, !RegExp>} matchers An object with types of markers to create as keys and their detection regexes as values.\n * @param {!_restream.MakeMarkersConfig} [config] Additional configuration.\n * @param {function(string, number): string} [config.getReplacement] The function used to create a replacement when some text needs to be cut.\n * @param {function(string): !RegExp} [config.getRegex] The function used to create a RegExp to detect replaced chunks.\n * @returns {!Object.<string, !_restream.Marker>} An object with markers for each requested type.\n */\nexport const makeMarkers = (matchers, config) => {\n  const res = Object.keys(matchers).reduce((acc, key) => {\n    const re = matchers[key]\n    const marker = makeMarker(key, re, config)\n    const m = {\n      ...acc,\n      [key]: marker,\n    }\n    return m\n  }, {})\n  return res\n}\n\n/**\n * Make a rule for pasting markers back.\n * @param {!_restream.Marker} marker A marker is used to cut and paste portions of text to exclude them from processing by other rules. Markers should be created using the `makeMarker` factory method that will assign their properties.\n * @param {!(_restream.Rule|Array<!_restream.Rule>)} [pipeRules] Any additional rules to replace the value of the marker before pasting it.\n * @returns {!_restream.Rule} A rule to paste previously replaced chunks.\n */\nexport const makePasteRule = (marker, pipeRules = []) => {\n  const { regExp: re, map } = marker\n  const rule = {\n    re,\n    replacement(match, index) {\n      const m = map[index]\n      delete map[index]\n      const pr = Array.isArray(pipeRules) ? pipeRules : [pipeRules]\n      const res = SyncReplaceable(m, pr)\n      return res\n    },\n  }\n  return rule\n}\n\n/**\n * Make a rule for initial replacement of markers.\n * @param {!_restream.Marker} marker A marker is used to cut and paste portions of text to exclude them from processing by other rules. Markers should be created using the `makeMarker` factory method that will assign their properties.\n * @returns {!_restream.Rule} A rule to cut matched chunks.\n */\nexport const makeCutRule = (marker) => {\n  const { re, map, getReplacement, name } = marker\n  const rule = {\n    re,\n    replacement(match) {\n      const { lastIndex } = marker\n      map[lastIndex] = match\n      marker.lastIndex += 1\n      const m = getReplacement(name, lastIndex)\n      return m\n    },\n  }\n  return rule\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').Rule} _restream.Rule\n */\n\n/* documentary types/markers.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_restream.Marker} Marker A marker is used to cut and paste portions of text to exclude them from processing by other rules. Markers should be created using the `makeMarker` factory method that will assign their properties.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {Object} _restream.Marker A marker is used to cut and paste portions of text to exclude them from processing by other rules. Markers should be created using the `makeMarker` factory method that will assign their properties.\n * @prop {string} name The name of the marker for annotation purposes.\n * @prop {function(string, number): string} getReplacement The function to generate marker placeholders which can be then found, e.g., for (name: `marker`, index: `10`) by default _Restream_ will generate `%%_RESTREAM_MARKER_REPLACEMENT_10_%%`, but can be overriden with this method.\n * @prop {!RegExp} re The regular expression used for detection of the match.\n * @prop {!RegExp} regExp The generated regular expression to replace the marker back to its original value.\n * @prop {!Object<number, string>} map The map which holds detected matches at their indexes.\n * @prop {number} lastIndex The index of the last inserted element. Starts with 0.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_restream.MakeMarkersConfig} MakeMarkersConfig Additional configuration.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {Object} _restream.MakeMarkersConfig Additional configuration.\n * @prop {function(string, number): string} [getReplacement] The function used to create a replacement when some text needs to be cut.\n * @prop {function(string): !RegExp} [getRegex] The function used to create a RegExp to detect replaced chunks.\n */\n","import Stream, { Transform } from 'stream'\nimport cleanStack from '@artdeco/clean-stack'\nimport { collect } from 'catchment'\nimport { checkRule, hideStack } from './lib'\n\nexport default class Replaceable extends Transform {\n  /**\n   * Replaceable class that extends Transform and pushes data when it's done replacing each incoming chunk. If the replacement is passed as a function, it will work in the same way as the replacer for `string.replace` method (https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace), taking the `match` as the first argument, and matched `p1`, `p2`, _etc_ parameters as following arguments. The replacer can also be an async function.\n   * @param {!(_restream.Rule|Array<!_restream.Rule>)} rules A single replacement rule, or multiple rules.\n   * @param {!stream.TransformOptions} [options] The options for the transform stream.\n   * @example\n   *\n```\n// markdown __ to html <em> implementation\nconst stream = replaceStream({\n  re: /__(\\S+)__/g,\n  replacement(match, p1) {\n    return `<em>${p1}</em>`\n  },\n})\n```\n   */\n  constructor(rules, options) {\n    super(options)\n    const re = Array.isArray(rules) ? rules : [rules]\n    const fr = re.filter(checkRule)\n    this.rules = fr\n    /**\n     * Whether the _Replaceable_ will not apply any more rules.\n     * @type {boolean}\n     */\n    this._broke = false\n    this._options = options\n  }\n\n  /**\n   * Creates a new replaceable to replace the given string, buffer or stream using the rules of the current stream. Calling `brake` will also set `_broke` on the parent stream.\n   * @param {string|!Buffer|!Stream} input The input to replace.\n   * @param {!Object} [context] The context to assign to the new replaceable.\n   */\n  async replace(input, context) {\n    const replaceable = new Replaceable(this.rules, this._options)\n    if (context) Object.assign(replaceable, context)\n    const res = await Replaceable.replace(replaceable, input)\n    if (replaceable._broke) this.brake()\n    if (context) Object.keys(context).forEach(key => {\n      context[key] = replaceable[key]\n    })\n    return res\n  }\n  /**\n   * The method to end the stream with given data, and collect the result.\n   * @param {!Replaceable} replaceable\n   * @param {string|!Buffer|!Stream} input The data or stream to end the _Replaceable_ with.\n   */\n  static async replace(replaceable, input) {\n    return replace(replaceable, input)\n  }\n\n  /**\n   * Stop executing further after the current rule.\n   */\n  brake() {\n    this._broke = true\n  }\n\n  /**\n   * @param {string|!Buffer} chunk The incoming chunk, or an object if the stream was started in object mode.\n   */\n  async reduce(chunk) {\n    /** @type {string} */\n    const s = await this.rules.reduce(async (acc, { re, replacement }) => {\n      /** @type {string} */\n      let string = await acc\n      if (this._broke) return string\n\n      if (typeof replacement == 'string') {\n        string = string.replace(re, replacement)\n      } else {\n        const promises = []\n        let commonError\n        const t = string.replace(re, (match, ...args) => {\n          commonError = new Error()\n          try {\n            if (this._broke) {\n              if (promises.length)\n                return promises.push(Promise.resolve(match))\n              return match\n            }\n            const p = replacement.call(this, match, ...args)\n            if (p instanceof Promise) {\n              promises.push(p)\n            }\n            return p\n          } catch (e) { // hide stack for sync stack traces\n            hideStack(commonError, e)\n          }\n        })\n        if (promises.length) {\n          try { // hide stack only for when throw happens before awaits\n            const data = await Promise.all(promises)\n            string = string.replace(re, () => data.shift())\n          } catch (e) {\n            hideStack(commonError, e)\n          }\n        } else {\n          string = t\n        }\n      }\n      return string\n    }, `${chunk}`)\n\n    return s\n  }\n  /**\n   * @suppress {checkTypes}\n   * @returns {!Promise}\n   */\n  async _transform(chunk, _, next) {\n    try {\n      const s = await this.reduce(chunk)\n      this.push(s)\n      next()\n    } catch (e) {\n      const s = cleanStack(e.stack)\n      e.stack = s\n      next(e)\n    }\n  }\n}\n\n/**\n * The method to end the stream with given data, and collect the result.\n * @param {!Replaceable} replaceable\n * @param {string|!Buffer|!Stream} input The data or stream to end the _Replaceable_ with.\n */\nexport async function replace(replaceable, input) {\n  if (input instanceof Stream) {\n    input.pipe(replaceable)\n  } else {\n    replaceable.end(input)\n  }\n  /** @type {string} */\n  const data = await collect(replaceable)\n  return data\n}\n\n/**\n * The class for when serial execution of asynchronous replacements withing the same rule are needed.\n */\nexport class SerialAsyncReplaceable extends Replaceable {\n  /**\n   * @param {!(_restream.Rule|Array<!_restream.Rule>)} rules\n   */\n  constructor(rules) {\n    super(rules)\n    this.promise = Promise.resolve()\n  }\n  addItem(fn) {\n    const pp = this.promise.then(fn)\n    this.promise = pp\n    return pp\n  }\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('.').Rule} _restream.Rule\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('.').AsyncReplacer} _restream.AsyncReplacer\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('.').Replacer} _restream.Replacer\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('stream').TransformOptions} stream.TransformOptions\n */","export const makeRe = (keys) => {\n  const k = `(${keys.join('|')})`\n  const s = '(?:\\\\s+(?!\\\\/>)[^>]*?)?' // before closing >\n  const re = new RegExp(`(\\\\n)?( *)(<${k}${s}(?:\\\\s*?/>|>[\\\\s\\\\S]*?<\\\\/\\\\4>))`, 'gm')\n  return re\n}","export default tty\nexport const {\n  ReadStream,\n  WriteStream,\n  isatty,\n} = tty","export default util\nexport const {\n  TextDecoder,\n  TextEncoder,\n  callbackify,\n  debug,\n  debuglog,\n  deprecate,\n  error,\n  format,\n  getSystemErrorName,\n  inherits,\n  inspect,\n  isArray,\n  isBoolean,\n  isBuffer,\n  isDate,\n  isError,\n  isFunction,\n  isNull,\n  isNullOrUndefined,\n  isNumber,\n  isObject,\n  isPrimitive,\n  isRegExp,\n  isString,\n  isSymbol,\n  isUndefined,\n  log,\n  print,\n  promisify,\n  puts,\n} = util","/**\n * Helpers.\n */\n\nvar s = 1000\nvar m = s * 60\nvar h = m * 60\nvar d = h * 24\nvar w = d * 7\nvar y = d * 365.25\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {string|number} val\n * @param {Object} [options]\n */\nexport default function(val, options = {}) {\n  var type = typeof val\n  if (type == 'string' && val.length > 0) {\n    const t = /** @type {string} */ (val)\n    return parse(t)\n  } else if (type == 'number' && isFinite(val)) {\n    const n = /** @type {number} */ (val)\n    return options.long ? fmtLong(n) : fmtShort(n)\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  )\n}\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {string} str\n * @api private\n */\nfunction parse(str) {\n  str = String(str)\n  if (str.length > 100) {\n    return\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  )\n  if (!match) {\n    return\n  }\n  var n = parseFloat(match[1])\n  var type = (match[2] || 'ms').toLowerCase()\n  switch (type) {\n  case 'years':\n  case 'year':\n  case 'yrs':\n  case 'yr':\n  case 'y':\n    return n * y\n  case 'weeks':\n  case 'week':\n  case 'w':\n    return n * w\n  case 'days':\n  case 'day':\n  case 'd':\n    return n * d\n  case 'hours':\n  case 'hour':\n  case 'hrs':\n  case 'hr':\n  case 'h':\n    return n * h\n  case 'minutes':\n  case 'minute':\n  case 'mins':\n  case 'min':\n  case 'm':\n    return n * m\n  case 'seconds':\n  case 'second':\n  case 'secs':\n  case 'sec':\n  case 's':\n    return n * s\n  case 'milliseconds':\n  case 'millisecond':\n  case 'msecs':\n  case 'msec':\n  case 'ms':\n    return n\n  default:\n    return undefined\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {number} ms\n * @api private\n */\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms)\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd'\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h'\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm'\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's'\n  }\n  return ms + 'ms'\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {number} ms\n * @api private\n */\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms)\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day')\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour')\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute')\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second')\n  }\n  return ms + ' ms'\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '')\n}\n\n/**\n * @license\n * Copyright (c) 2016 Zeit, Inc.\n * https://npmjs.org/ms\n */","/*!\n * bytes\n * Copyright(c) 2012-2014 TJ Holowaychuk\n * Copyright(c) 2015 Jed Watson\n * MIT Licensed\n */\n\nconst formatThousandsRegExp = /\\B(?=(\\d{3})+(?!\\d))/g\nconst formatDecimalsRegExp = /(?:\\.0*|(\\.[^0]+)0+)$/\n\nconst map = {\n  'b':  1,\n  'kb': 1 << 10,\n  'mb': 1 << 20,\n  'gb': 1 << 30,\n  'tb': Math.pow(1024, 4),\n  'pb': Math.pow(1024, 5),\n}\n\nconst parseRegExp = /^((-|\\+)?(\\d+(?:\\.\\d+)?)) *(kb|mb|gb|tb|pb)$/i\n\n/**\n * Convert the given value in bytes into a string or parse to string to an integer in bytes.\n *\n * @param {string|number} value\n * @param {{\n *  case: (string|undefined),\n *  decimalPlaces: (number|undefined),\n *  fixedDecimals: (boolean|undefined),\n *  thousandsSeparator: (string|undefined),\n *  unitSeparator: (string|undefined),\n *  }} [options] bytes options.\n *\n * @returns {?(string|number)}\n */\n\nexport default function bytes(value, options) {\n  if (typeof value == 'string') {\n    return parse(value)\n  }\n\n  if (typeof value == 'number') {\n    return format(value, options)\n  }\n\n  return null\n}\n\n/**\n * Format the given value in bytes into a string.\n *\n * If the value is negative, it is kept as such. If it is a float,\n * it is rounded.\n *\n * @param {number} value\n * @param {Object} [options]\n * @param {number} [options.decimalPlaces=2]\n * @param {number} [options.fixedDecimals=false]\n * @param {string} [options.thousandsSeparator=]\n * @param {string} [options.unit=]\n * @param {string} [options.unitSeparator=]\n * @returns {?string}\n */\nexport function format(value, options) {\n  if (!Number.isFinite(value)) {\n    return null\n  }\n\n  const mag = Math.abs(value)\n  const thousandsSeparator = (options && options.thousandsSeparator) || ''\n  const unitSeparator = (options && options.unitSeparator) || ''\n  const decimalPlaces = (options && options.decimalPlaces !== undefined) ? options.decimalPlaces : 2\n  const fixedDecimals = Boolean(options && options.fixedDecimals)\n  let unit = (options && options.unit) || ''\n\n  if (!unit || !map[unit.toLowerCase()]) {\n    if (mag >= map['pb']) {\n      unit = 'PB'\n    } else if (mag >= map['tb']) {\n      unit = 'TB'\n    } else if (mag >= map['gb']) {\n      unit = 'GB'\n    } else if (mag >= map['mb']) {\n      unit = 'MB'\n    } else if (mag >= map['kb']) {\n      unit = 'KB'\n    } else {\n      unit = 'B'\n    }\n  }\n\n  const val = value / map[unit.toLowerCase()]\n  let str = val.toFixed(decimalPlaces)\n\n  if (!fixedDecimals) {\n    str = str.replace(formatDecimalsRegExp, '$1')\n  }\n\n  if (thousandsSeparator) {\n    str = str.replace(formatThousandsRegExp, thousandsSeparator)\n  }\n\n  return str + unitSeparator + unit\n}\n\n/**\n * Parse the string value into an integer in bytes.\n *\n * If no unit is given, it is assumed the value is in bytes.\n *\n * @param {number|string} val\n *\n * @returns {number|null}\n * @public\n */\n\nexport function parse(val) {\n  if (typeof val == 'number' && !isNaN(val)) {\n    return val\n  }\n\n  if (typeof val != 'string') {\n    return null\n  }\n\n  // Test if the string passed is valid\n  const results = parseRegExp.exec(val)\n  let floatValue, unit = 'b'\n\n  if (!results) {\n    // Nothing could be extracted from the given string\n    floatValue = parseInt(val, 10)\n    unit = 'b'\n  } else {\n    // Retrieve the value and the unit\n    floatValue = parseFloat(results[1])\n    unit = results[4].toLowerCase()\n  }\n\n  return Math.floor(map[unit] * floatValue)\n}","/**\n * @license diff package https://github.com/kpdecker/jsdiff\n * BSD License\n * Copyright (c) 2009-2015, Kevin Decker <kpdecker@gmail.com>\n */\nexport default class Diff {\n  diff(oldString, newString) {\n    let self = this\n\n    // Allow subclasses to massage the input prior to running\n    oldString = this.castInput(oldString)\n    newString = this.castInput(newString)\n\n    oldString = this.removeEmpty(this.tokenize(oldString))\n    newString = this.removeEmpty(this.tokenize(newString))\n\n    let newLen = newString.length, oldLen = oldString.length\n    let editLength = 1\n    let maxEditLength = newLen + oldLen\n    let bestPath = [{ newPos: -1, components: [] }]\n\n    // Seed editLength = 0, i.e. the content starts with the same values\n    let oldPos = this.extractCommon(bestPath[0], newString, oldString, 0)\n    if (bestPath[0].newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n      // Identity per the equality and tokenizer\n      return [{ value: this.join(newString), count: newString.length }]\n    }\n\n    // Main worker method. checks all permutations of a given edit length for acceptance.\n    function execEditLength() {\n      for (let diagonalPath = -1 * editLength; diagonalPath <= editLength; diagonalPath += 2) {\n        let basePath\n        let addPath = bestPath[diagonalPath - 1],\n          removePath = bestPath[diagonalPath + 1],\n          oldPos = (removePath ? removePath.newPos : 0) - diagonalPath\n        if (addPath) {\n          // No one else is going to attempt to use this value, clear it\n          bestPath[diagonalPath - 1] = undefined\n        }\n\n        let canAdd = addPath && addPath.newPos + 1 < newLen,\n          canRemove = removePath && 0 <= oldPos && oldPos < oldLen\n        if (!canAdd && !canRemove) {\n          // If this path is a terminal then prune\n          bestPath[diagonalPath] = undefined\n          continue\n        }\n\n        // Select the diagonal that we want to branch from. We select the prior\n        // path whose position in the new string is the farthest from the origin\n        // and does not pass the bounds of the diff graph\n        if (!canAdd || (canRemove && addPath.newPos < removePath.newPos)) {\n          basePath = clonePath(removePath)\n          self.pushComponent(basePath.components, undefined, true)\n        } else {\n          basePath = addPath // No need to clone, we've pulled it from the list\n          basePath.newPos++\n          self.pushComponent(basePath.components, true, undefined)\n        }\n\n        oldPos = self.extractCommon(basePath, newString, oldString, diagonalPath)\n\n        // If we have hit the end of both strings, then we are done\n        if (basePath.newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n          return buildValues(self, basePath.components, newString, oldString)\n        } else {\n          // Otherwise track this path as a potential candidate and continue.\n          bestPath[diagonalPath] = basePath\n        }\n      }\n\n      editLength++\n    }\n\n    while (editLength <= maxEditLength) {\n      let ret = execEditLength()\n      if (ret) {\n        return ret\n      }\n    }\n  }\n\n  pushComponent(components, added, removed) {\n    let last = components[components.length - 1]\n    if (last && last.added === added && last.removed === removed) {\n      // We need to clone here as the component clone operation is just\n      // as shallow array clone\n      components[components.length - 1] = { count: last.count + 1, added: added, removed: removed }\n    } else {\n      components.push({ count: 1, added: added, removed: removed })\n    }\n  }\n  extractCommon(basePath, newString, oldString, diagonalPath) {\n    let newLen = newString.length,\n      oldLen = oldString.length,\n      newPos = basePath.newPos,\n      oldPos = newPos - diagonalPath,\n\n      commonCount = 0\n    while (newPos + 1 < newLen && oldPos + 1 < oldLen && this.equals(newString[newPos + 1], oldString[oldPos + 1])) {\n      newPos++\n      oldPos++\n      commonCount++\n    }\n\n    if (commonCount) {\n      basePath.components.push({ count: commonCount })\n    }\n\n    basePath.newPos = newPos\n    return oldPos\n  }\n\n  equals(left, right) {\n    return left === right\n  }\n  removeEmpty(array) {\n    let ret = []\n    for (let i = 0; i < array.length; i++) {\n      if (array[i]) {\n        ret.push(array[i])\n      }\n    }\n    return ret\n  }\n  castInput(value) {\n    return value\n  }\n  tokenize(value) {\n    return value.split('')\n  }\n  join(chars) {\n    return chars.join('')\n  }\n}\n\nfunction buildValues(diff, components, newString, oldString) {\n  let componentPos = 0,\n    componentLen = components.length,\n    newPos = 0,\n    oldPos = 0\n\n  for (; componentPos < componentLen; componentPos++) {\n    let component = components[componentPos]\n    if (!component.removed) {\n      if (!component.added) {\n        let value = newString.slice(newPos, newPos + component.count)\n        value = value.map(function(v, i) {\n          let oldValue = oldString[oldPos + i]\n          return oldValue.length > v.length ? oldValue : v\n        })\n\n        component.value = diff.join(value)\n      } else {\n        component.value = diff.join(newString.slice(newPos, newPos + component.count))\n      }\n      newPos += component.count\n\n      // Common case\n      if (!component.added) {\n        oldPos += component.count\n      }\n    } else {\n      component.value = diff.join(oldString.slice(oldPos, oldPos + component.count))\n      oldPos += component.count\n\n      // Reverse add and remove so removes are output first to match common convention\n      // The diffing algorithm is tied to add then remove output and this is the simplest\n      // route to get the desired output with minimal overhead.\n      if (componentPos && components[componentPos - 1].added) {\n        let tmp = components[componentPos - 1]\n        components[componentPos - 1] = components[componentPos]\n        components[componentPos] = tmp\n      }\n    }\n  }\n\n  // Special case handle for when one terminal is ignored (i.e. whitespace).\n  // For this case we merge the terminal into the prior string and drop the change.\n  // This is only available for string mode.\n  let lastComponent = components[componentLen - 1]\n  if (componentLen > 1\n      && typeof lastComponent.value === 'string'\n      && (lastComponent.added || lastComponent.removed)\n      && diff.equals('', lastComponent.value)) {\n    components[componentLen - 2].value += lastComponent.value\n    components.pop()\n  }\n\n  return components\n}\n\nfunction clonePath(path) {\n  return { newPos: path.newPos, components: path.components.slice(0) }\n}","import Diff from './diff'\n\nconst colors = {\n  'black': 30,\n  'red': 31,\n  'green': 32,\n  'yellow': 33,\n  'blue': 34,\n  'magenta': 35,\n  'cyan': 36,\n  'white': 37,\n  'grey': 90,\n}\n\nconst backgroundColors = {\n  'black': 40,\n  'red': 41,\n  'green': 42,\n  'yellow': 43,\n  'blue': 44,\n  'magenta': 45,\n  'cyan': 46,\n  'white': 47,\n}\n\n/**\n * Color the foreground.\n * @param {string} string The string to color.\n * @param {_erte.Color} color The color to apply.\n */\nexport function c(string, color) {\n  const cc = colors[color]\n  if (!cc) return string\n  return `\\x1b[${cc}m${string}\\x1b[0m`\n}\n\n/**\n * Color the background.\n * @param {string} string The string to color.\n * @param {_erte.Color} color The color to apply.\n */\nexport function b(string, color) {\n  const cc = backgroundColors[color]\n  if (!cc) return string\n  return `\\x1b[${cc}m${string}\\x1b[0m`\n}\n\n/**\n * Compares two strings and outputs a coloured version where strings don't match.\n * @param {string} source A string to compare.\n * @param {string} target Target string to compare with.\n * @returns {string} A string which uses shell-codes to highligh differences.\n */\nexport default function erte(source, target) {\n  const diff = new Diff()\n  const d = diff.diff(source, target)\n  const m = d.map(({ added, removed, value }) => {\n    let p\n    const s = value.split(' ')\n    if (added) {\n      p = s.map(t => {\n        return t.replace(/\\n$/mg, '\u23ce\\n')\n      }).map(t => c(t, 'green')).join(b(' ', 'green'))\n    } else if (removed) {\n      p = s.map(t => {\n        return t.replace(/\\n$/mg, '\u23ce\\n')\n      }).map(t => c(t, 'red')).join(b(' ', 'red'))\n    } else {\n      p = c(value, 'grey')\n    }\n    return p\n  })\n  const s = m.join('')\n  return s\n}\n\n/* documentary types/index.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_erte.Color} Color The color to apply.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {('black'|'red'|'green'|'yellow'|'blue'|'magenta'|'cyan'|'white'|'grey')} _erte.Color The color to apply.\n */\n","import { format } from '../bytes'\nimport { c } from 'erte'\n\nexport default {\n  'f': format,\n  'fy'(v) {\n    return c(format(v) || '', 'yellow')\n  },\n  'fr'(v) {\n    return c(format(v) || '', 'red')\n  },\n  'fb'(v) {\n    return c(format(v) || '', 'blue')\n  },\n  'fg'(v) {\n    return c(format(v) || '', 'green')\n  },\n  'fc'(v) { return c(format(v) || '', 'cyan') },\n  'fm'(v) { return c(format(v) || '', 'magenta') },\n}\n","import tty from 'tty'\nimport { inspect, format } from 'util'\nimport ms from './ms'\nimport f from './modifiers/f'\n\nconst colors = [6, 2, 3, 4, 5, 1]\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\nconst inspectOpts = Object.keys(process.env).filter(key => {\n  return /^debug_/i.test(key)\n}).reduce((obj, key) => {\n  // Camel-case\n  const prop = key\n    .substring(6)\n    .toLowerCase()\n    .replace(/_([a-z])/g, (_, k) => {\n      return k.toUpperCase()\n    })\n\n  // Coerce string value into JS value\n  let val = process.env[key]\n  if (/^(yes|on|true|enabled)$/i.test(val)) {\n    val = true\n  } else if (/^(no|off|false|disabled)$/i.test(val)) {\n    val = false\n  } else if (val === 'null') {\n    val = null\n  } else {\n    val = Number(val)\n  }\n\n  obj[prop] = val\n  return obj\n}, {})\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\nfunction useColors() {\n  return 'colors' in inspectOpts ?\n    Boolean(inspectOpts['colors']) :\n    tty.isatty(process.stderr.fd)\n}\n\n/**\n * Adds ANSI color escape codes if enabled.\n * @param {!Array} args\n * @this {_debug.DebugFunction}\n */\nfunction formatArgs(args) {\n  const { namespace, useColors: uc, color, diff } = this\n\n  if (uc) {\n    const c = color\n    const colorCode = '\\u001B[3' + (c < 8 ? c : '8;5;' + c)\n    const prefix = `  ${colorCode};1m${namespace} \\u001B[0m`\n\n    args[0] = prefix + args[0].split('\\n').join('\\n' + prefix)\n    args.push(colorCode + 'm+' + ms(diff) + '\\u001B[0m')\n  } else {\n    args[0] = getDate() + namespace + ' ' + args[0]\n  }\n}\n\nfunction getDate() {\n  if (inspectOpts['hideDate']) {\n    return ''\n  }\n  return new Date().toISOString() + ' '\n}\n\n/**\n * Invokes `util.format()` with the specified arguments and writes to stderr.\n */\nfunction log(...args) {\n  return process.stderr.write(format(...args) + '\\n')\n}\n\n/**\n * Save `namespaces`.\n * @param {string} namespaces\n */\nfunction save(namespaces) {\n  if (namespaces) {\n    process.env['DEBUG'] = namespaces\n  } else {\n    // If you set a process.env field to null or undefined, it gets cast to the\n    // string 'null' or 'undefined'. Just delete instead.\n    delete process.env['DEBUG']\n  }\n}\n\n/**\n * Load `namespaces`.\n * @return {string} returns the previously persisted debug modes\n */\n\nfunction load() {\n  return process.env['DEBUG']\n}\n\n/**\n * Init logic for `debug` instances.\n * @param {_debug.DebugFunction} debug\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init(debug) {\n  debug.inspectOpts = { ...inspectOpts }\n}\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n * @param {Object} v\n * @this {_debug.DebugFunction}\n */\nconst o = function(v) {\n  const opts = {\n    ...this.inspectOpts,\n    colors: this.useColors,\n  }\n  return inspect(v, opts)\n    .replace(/\\s*\\n\\s*/g, ' ')\n}\n\n/**\n * Map %O to `util.inspect()`, allowing multiple lines if needed.\n * @param {Object} v\n * @this {_debug.DebugFunction}\n */\nconst O = function(v) {\n  const opts = {\n    ...this.inspectOpts,\n    colors: this.useColors,\n  }\n  return inspect(v, opts)\n}\n\nconst formatters = { 'o': o, 'O': O, ...f }\n\n/** @type {_debug.Env} */\nconst NodeEnv = {\n  init,\n  log,\n  formatArgs,\n  save,\n  load,\n  useColors,\n  colors,\n  inspectOpts,\n  formatters,\n}\n\nexport default NodeEnv\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').DebugFunction} _debug.DebugFunction\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').Env} _debug.Env\n */","class Debug {\n  /**\n   * Create a debugger with the given `namespace`.\n   * @param {_debug.Env} env\n   */\n  constructor(env) {\n    this.colors = env.colors\n    this.formatArgs = env.formatArgs\n    this.inspectOpts = env.inspectOpts\n    this.log = env.log\n    this.save = env.save\n    this.init = env.init\n\n    this.formatters = env.formatters || {}\n\n    /**\n     * Active `debug` instances.\n     * @type {Array<_debug.DebugFunction>}\n     */\n    this.instances = []\n    /**\n\t   * The currently active debug mode names.\n     * @type {Array<!RegExp>}\n\t   */\n    this.names = []\n    /**\n\t   * The currently active names to skip.\n     * @type {Array<!RegExp>}\n\t   */\n    this.skips = []\n  }\n  createDebug() {\n    const debug = this.getDebug()\n\n    // env-specific initialization logic for debug instances\n    if (typeof this.init == 'function') {\n      this.init(debug)\n    }\n\n    this.instances.push(debug)\n    return debug\n  }\n\n  /**\n   * @returns {_debug.DebugFunction}\n   */\n  getDebug() {\n    const formatters = this.formatters\n    const formatArgs = this.formatArgs\n    const log = this.log // comes from the env\n\n    /** @type {number} */\n    let prevTime\n    /** @type {_debug.DebugFunction} */\n    function debug(...args) {\n      if (!debug.enabled) return\n\n      // Set `diff` timestamp\n      const curr = Number(new Date())\n      const time = curr - (prevTime || curr)\n      debug.diff = time\n      debug.prev = prevTime\n      debug.curr = curr\n      prevTime = curr\n\n      args[0] = coerce(args[0])\n\n      if (typeof args[0] != 'string') {\n        // Anything else let's inspect with %O\n        args.unshift('%O')\n      }\n\n      // Apply any `formatters` transformations\n      let index = 0\n      args[0] = args[0].replace(/%([a-zA-Z%]+)/g, (match, format) => {\n        // If we encounter an escaped % then don't increase the array index\n        if (match == '%%') {\n          return match\n        }\n        index++\n        const formatter = formatters[format]\n        if (formatter) {\n          const val = args[index]\n          match = formatter.call(debug, val)\n\n          // Now we need to remove `args[index]` since it's inlined in the `format`\n          args.splice(index, 1)\n          index--\n        }\n        return match\n      })\n\n      // Apply env-specific formatting (colors, etc.)\n      formatArgs.call(debug, args)\n\n      const logFn = debug.log || log\n      logFn.apply(debug, args)\n    }\n    return debug\n  }\n  /**\n\t * Selects a color for a debug namespace\n\t * @param {string} namespace The namespace string for the for the debug instance to be colored\n\t * @return {number|string} An ANSI color code for the given namespace\n\t */\n  selectColor(namespace) {\n    let hash = 0\n\n    for (let i = 0; i < namespace.length; i++) {\n      hash = ((hash << 5) - hash) + namespace.charCodeAt(i)\n      hash |= 0 // Convert to 32bit integer\n    }\n\n    return this.colors[Math.abs(hash) % this.colors.length]\n  }\n  /**\n\t * Enables a debug mode by namespaces. This can include modes\n\t * separated by a colon and wildcards.\n\t *\n\t * @param {string} namespaces\n\t * @api public\n\t */\n  enable(namespaces) {\n    this.save(namespaces)\n\n    this.names = []\n    this.skips = []\n\n    let i\n    const split = (typeof namespaces == 'string' ? namespaces : '').split(/[\\s,]+/)\n    const len = split.length\n\n    for (i = 0; i < len; i++) {\n      if (!split[i]) {\n        // ignore empty strings\n        continue\n      }\n\n      namespaces = split[i].replace(/\\*/g, '.*?')\n\n      if (namespaces[0] == '-') {\n        this.skips.push(new RegExp('^' + namespaces.substr(1) + '$'))\n      } else {\n        this.names.push(new RegExp('^' + namespaces + '$'))\n      }\n    }\n\n    for (i = 0; i < this.instances.length; i++) {\n      const instance = this.instances[i]\n      instance.enabled = this.enabled(instance.namespace)\n    }\n  }\n  destroy(debug) {\n    const index = this.instances.indexOf(debug)\n    if (index !== -1) {\n      this.instances.splice(index, 1)\n      return true\n    }\n    return false\n  }\n  /**\n\t * Disable debug output.\n\t * @return {string} namespaces\n\t */\n  disable() {\n    const namespaces = [\n      ...this.names.map(toNamespace),\n      ...this.skips.map(toNamespace).map(namespace => '-' + namespace),\n    ].join(',')\n    this.enable('')\n    return namespaces\n  }\n  /**\n\t * Returns true if the given mode name is enabled, false otherwise.\n\t * @param {string} name\n\t * @return {boolean}\n\t */\n  enabled(name) {\n    if (name[name.length - 1] == '*') {\n      return true\n    }\n\n    let i\n    let len\n\n    for (i = 0, len = this.skips.length; i < len; i++) {\n      if (this.skips[i].test(name)) {\n        return false\n      }\n    }\n\n    for (i = 0, len = this.names.length; i < len; i++) {\n      if (this.names[i].test(name)) {\n        return true\n      }\n    }\n\n    return false\n  }\n}\n\n/**\n * @param {string} namespace\n * @this {_debug.DebugContext}\n */\nfunction extend(namespace, delimiter) {\n\n}\n\n/**\n * This is the common logic for both the Node.js and web browser implementations of `debug()`.\n * @param {_debug.Env} env\n */\nexport default function setup(env) {\n  const instance = new Debug(env)\n\n  /**\n   * Creates a function to log messages.\n   * @param {string} namespace\n   */\n  function createDebug(namespace) {\n    const debug = instance.createDebug()\n\n    debug.namespace = namespace\n    debug.useColors = env.useColors()\n    debug.enabled = instance.enabled(namespace)\n    debug.color = instance.selectColor(namespace)\n    /** @this {_debug.DebugContext} */\n    debug.destroy = function() {\n      instance.destroy(this)\n    }\n    /** @this {_debug.DebugContext} */\n    debug.extend = function(ns, delimiter) {\n      const newDebug = (this.namespace + (delimiter === undefined ? ':' : delimiter) + ns)\n      newDebug.log = this.log // don't know why this is here\n      return newDebug\n    }\n\n    instance.enable(env.load())\n\n    return debug\n  }\n  return createDebug\n}\n\n/**\n * Convert regexp to namespace.\n *\n * @param {!RegExp} regexp\n * @return {string} namespace\n * @private\n */\nfunction toNamespace(regexp) {\n  return regexp.toString()\n    .substring(2, regexp.toString().length - 2)\n    .replace(/\\.\\*\\?$/, '*')\n}\n\n/**\n * Coerce `val`.\n * @param {!Error|*} val\n * @return {*}\n * @private\n */\nfunction coerce(val) {\n  if (val instanceof Error) {\n    return val.stack || val.message\n  }\n  return val\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('.').Env} _debug.Env\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('.').DebugFunction} _debug.DebugFunction\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('.').DebugContext} _debug.DebugContext\n */","export default _crypto\nexport const {\n  Certificate,\n  Cipher,\n  Credentials,\n  DEFAULT_ENCODING,\n  Decipher,\n  DiffieHellman,\n  ECDH,\n  Hash,\n  Hmac,\n  Verify,\n  createCipher,\n  createCipheriv,\n  createCredentials,\n  createDecipher,\n  createDecipheriv,\n  createDiffieHellman,\n  createECDH,\n  createHash,\n  createHmac,\n  createSign,\n  createVerify,\n  getCiphers,\n  getCurves,\n  getDiffieHellman,\n  getHashes,\n  pbkdf2,\n  pbkdf2Sync,\n  privateDecrypt,\n  privateEncrypt,\n  pseudoRandomBytes,\n  publicDecrypt,\n  publicEncrypt,\n  randomBytes,\n  randomFill,\n  randomFillSync,\n  timingSafeEqual,\n} = _crypto","import write from '@wrote/write'\nimport { join } from 'path'\nimport { createHash } from 'crypto'\n\nconst surround = (s) => {\n  return `'${s}'`\n}\nconst makeProps = (props) => {\n  const keys = Object.keys(props)\n  return `{\n  ${keys.map((key) => {\n    const k = /-/.test(key) ? `'${key}'` : key\n    const value = props[key]\n    const val = typeof value == 'string' ?\n      surround(value.replace(/'/g, '\\\\\\'')) : value\n    return `${k}: ${val}`\n  }).join(',\\n  ')}${keys.length ? ',' : ''}\n}`\n}\n\n/**\n * @param {!_competent.ExportedComponent} component\n */\nconst makeComponent = (component) => {\n  const arr = []\n  arr.push(`key: '${component.key}'`)\n  // arr.push(`Comp: ${cc(component.key)}`)\n  arr.push(`id: '${component.id}'`)\n  if (Object.keys(component.props).length)\n    arr.push(`props: ${makeProps(component.props)}`)\n  const c = component.children.filter(Boolean)\n  if (c.length)\n    arr.push(`children: ${JSON.stringify(component.children)}`)\n  const j = arr.map((l) => l.replace(/^/mg, '  ')).join(',\\n') + ','\n  return `{\n${j}\n}`\n}\n\nconst checkIds = (components) => {\n  const ids = components.reduce((acc, { id }) => {\n    if (!acc[id]) acc[id] = 0\n    acc[id]++\n    return acc\n  }, {})\n  Object.entries(ids).forEach(([key, value]) => {\n    if (value > 1) console.error('[components] ID %s encountered %s times.', key, value)\n  })\n}\n/**\n * Page-specific meta object of how to invoke components.\n * @param {!Array<!_competent.ExportedComponent>} components\n */\nconst makeJs = (components, preact) => {\n  const cs = components.map(({ id, ...comp }) => {\n    const j = JSON.stringify(comp)\n    const hash = createHash('md5').update(j).digest('hex').toString()\n    return { ...comp, id, hash }\n  })\n  checkIds(cs) // just printing...\n  let byHash = cs.reduce((acc, current) => {\n    const { hash } = current\n    if (!(hash in acc)) acc[hash] = []\n    acc[hash].push(current)\n    return acc\n  }, {})\n  byHash = Object.keys(byHash).sort().reduce((acc, key) => {\n    acc[key] = byHash[key]\n    return acc\n  }, {})\n\n  const sorted = Object.values(byHash).map((comps) => {\n    if (comps.length < 2) return comps[0]\n\n    const ids = comps.map(({ id }) => id).sort()\n    const comp = comps[0]\n    comp.id = ids\n    return comp\n  }, [])\n\n  const s = sorted.map((c) => makeComponent(c))\n  return `${preact ? '/** @type {!Array<!preact.PreactProps>} */\\n' : ''\n  }const meta = [${s.join(',\\n')}]`\n}\n\n// todo: test escaped \\\"prop\\\": value\n/**\n * @param {boolean|!Object} io\n */\nexport const defineIo = (io = true) => {\n  if (!io) return ''\n  return `const io = makeIo(${typeof io != 'boolean' ? JSON.stringify(io)\n    .replace(/([^\\\\])\"([^\"]+?)\":/g, (m, n, k) => {\n      return `${n == ',' ? ', ' : n}${k}: `\n    })\n    .replace(/^{/, '{ ')\n    .replace(/}$/, ' }') : ''})`\n}\n\n// /**\n//  * @param {!Array<!_competent.ExportedComponent>} components The list of exported components\n//  */\n// const makeNamed = (components) => {\n//   if (!components.length) throw new Error('No components were given')\n//   const c = components\n//     .map(({ key }) => cc(key))\n//     .filter((e, i, a) => a.indexOf(e) == i)\n//     .join(', ')\n//   return `{ ${c} }`\n// }\n\nconst cc = (key) => {\n  return key.replace(/(?:^|-)(.)/g, (m, l) => l.toUpperCase())\n}\n\n/**\n * @param {!Array<!_competent.ExportedComponent>} components The list of exported components\n */\nconst makeNamedMap = (components) => {\n  const c = components\n    .map(({ key }) => `'${key}': ${cc(key)}`)\n    .filter((e, i, a) => a.indexOf(e) == i)\n    .sort()\n    .join(',\\n  ')\n  const map = `const __components = {\\n  ${c},\\n}`\n  return map\n}\n\n/**\n * @param {!Array<!_competent.ExportedComponent>} components The list of exported components\n * @param {!Object<string, Array<?string>>} map The map of where to find components.\n */\nconst makeImports = (components, map) => {\n  const keys = components.reduce((acc, { key }) => {\n    if (acc.includes(key)) return acc\n    acc.push(key)\n    return acc\n  }, [])\n  const locs = {}\n  keys.forEach((key) => {\n    Object.entries(map).forEach(([file, array]) => {\n      const i = array.indexOf(key)\n      if (i < 0) return\n      if (!locs[file]) locs[file] = []\n      locs[file][i] = key\n    })\n  })\n  const res = Object.entries(locs).map(([key, val]) => {\n    return makeImport(val, key)\n  }).sort()\n  return res\n}\n\n/**\n * @param {!Array<?string>} values The array with imports, where the default one always has index of 0.\n */\nconst makeImport = (values, location, components = true) => {\n  let [def, ...rest] = values\n  rest = rest.filter(Boolean)\n  let s = 'import '\n  if (def) s += components ? cc(def) : def\n  if (rest.length) {\n    s += def ? ', ' : ''\n    s += `{ ${(components ? rest.map(cc) : rest).join(', ')} }`\n  }\n  s += ` from '${location}'`\n  return s\n}\n\n\n// ensured during the build step without compilation\nconst init = require(/*depack*/'./init')\nconst makeIo = require(/*depack*/'./make-io')\nconst start = require(/*depack*/'./start')\nconst preactProxy = require(/*depack*/'./preact-proxy')\nconst startPlain = require(/*depack*/'./start-plain')\n\nexport const writeAssets = async (path) => {\n  await write(join(path, './__competent-lib.js'), `export ${init.toString()}\n\nexport ${makeIo.toString()}\n\n/**\n * @param {_competent.RenderMeta} meta\n * @param {function(new:_competent.PlainComponent, Element, Element)} Comp\n */\nexport ${startPlain.toString()}\n\n/**\n * This is the class to provide render and unrender methods via standard API\n * common for Preact and Plain components.\n */\n${preactProxy.toString()}\n\n/**\n * @param {_competent.RenderMeta} meta\n */\nexport ${start.toString()}`)\n}\n\n/**\n * From the array of exported components, creates an ES6 modules script that will render them on a page using Preact.\n * @param {!Array<!_competent.ExportedComponent>} components The list of exported components\n * @param {!_competent.MakeCompsConfig} opts\n */\nexport default function makeComponentsScript(components, opts) {\n  if (typeof opts != 'object') throw new Error('Options are required with at least a map.')\n  const { map, io = false,\n    includeH = false, props = {}, preact = 'preact' } = opts\n  let { externalAssets = false } = opts\n\n  // if (!assetsPath) throw new Error('Please specify the path where to write lib files.')\n  if (!map) throw new Error('The map of where to import components from is required.')\n  if (externalAssets === true) externalAssets = '.'\n\n  const imports = [\n    ...(preact ? [\n      makeImport([null, 'Component', 'render', ...(includeH ? ['h'] : []),\n      ], preact, false)] : []\n    ),\n    ...(externalAssets ? [\n      makeImport([null,\n        ...(io ? ['makeIo'] : []),\n        'init', preact ? 'start' : 'startPlain'], `${externalAssets}/__competent-lib`, false),\n    ] : []),\n    ...makeImports(components, map),\n  ].join('\\n')\n\n  const extendProps = Object.keys(props).map((propName) => {\n    const val = props[propName]\n    const s = `  props.${propName} = ${val}`\n    return s\n  }).join('\\n')\n\n  const r = `start${preact ? '' : 'Plain'}(renderMeta, Comp, comp, el, parent, props, children${preact ? ', { render, Component, h }' : ''})`\n  const ifIo = io ? `el.render = () => {\n    comp = ${r}\n    return comp\n  }\n  el.render.meta = renderMeta\n  io.observe(el)` : `comp = ${r}`\n\n  let s = imports + '\\n\\n'\n  const Components = makeNamedMap(components)\n  s += Components + '\\n\\n'\n  if (!externalAssets) {\n    s += init.toString() + '\\n\\n'\n    if (preact) s += preactProxy.toString() + '\\n\\n'\n    s += (preact ? start : startPlain).toString() + '\\n\\n'\n    if (io) s += makeIo.toString() + '\\n\\n'\n  }\n  if (io) s += defineIo(io) + '\\n\\n'\n  s += makeJs(components, preact)\n  s += `\nmeta.forEach(({ key, id, props = {}, children = [] }) => {\n  const Comp = __components[key]\n  const plain = ${preact ? 'Comp.plain || (/^\\\\s*class\\\\s+/.test(Comp.toString()) && !Component.isPrototypeOf(Comp))' : true}\n${extendProps}${extendProps ? '\\n' : ''}\n  const ids = id.split(',')\n  ids.forEach((Id) => {\n    const { parent, el } = init(Id, key)\n    if (!el) return\n    const renderMeta = /** @type {_competent.RenderMeta} */ ({ key, id: Id, plain })\n    let comp\n  ${ifIo.replace(/^/gm, '  ')}\n  })\n})\n`\n  return s\n}\n\n// render(h(Comp, props, children), parent, el)\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../..').MakeCompsConfig} _competent.MakeCompsConfig\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../..').ExportedComponent} _competent.ExportedComponent\n */","import render from '@depack/render'\nimport rexml from 'rexml'\nimport { Replaceable } from 'restream'\nimport { makeRe } from './lib'\nimport Debug from '@idio/debug'\n\nconst debug = Debug('competent')\n\n/**\n * Extracts, Renders And Exports For Dynamic Render JSX Components From Within HTML.\n * @param {!Object<string, function({ children: !Array<string> })>} components The components to look for and render.\n * @param {!_competent.Config} [conf] Options for the program. All functions will be called with the Replaceable instance as their `this` context.\n */\nconst competent = (components, conf = {}) => {\n  const { getId, getProps = (props, meta) => ({\n    ...props, ...meta }), markExported, onSuccess, onFail,\n  removeOnError = false, getContext, getReplacements } = conf\n\n  const re = makeRe(Object.keys(components))\n\n  /** @type {!_restream.AsyncReplacer} */\n  const replacement = async function (m, ws, pad, Component, key, position, str) {\n    debug('render %s', key)\n    const SKIP_ERROR = new Error('Skip render')\n    try {\n      const instance = components[key]\n      const before = str.slice(0, position)\n      const after = str.slice(position + m.length)\n      if (/\u003c!--\\s*$/.test(before) && /^\\s*--\u003e/.test(after))\n        return m\n\n      // let initialPadding = 0\n      // const lastNewLine = before.lastIndexOf('\\n')\n      // if (lastNewLine != -1) initialPadding = position - lastNewLine - 1\n      // else initialPadding = position\n\n      const [{ content = '', props: htmlProps }] = rexml(key, Component)\n      let child = content\n\n      const children = [child]\n      let exported = false\n      let renderAgain = true\n      let recursiveRenderAgain = false\n      const renderOptions = {\n        pretty: undefined,\n        lineLength: undefined,\n      }\n      let id\n      let childContext, removeLine, overriddenProps\n      const props = getProps.call(this, {\n        ...htmlProps,\n        children,\n      }, /** @type {!_competent.Meta} */ ({\n        export(value = true, newProps = null) {\n          exported = value\n          if (newProps) overriddenProps = Object.entries(newProps).reduce((ac, [k, val]) => {\n            if (val === undefined) return ac\n            ac[k] = val\n            return ac\n          }, {})\n        },\n        setPretty(p, l) {\n          renderOptions.pretty = p\n          if (l) renderOptions.lineLength = l\n        },\n        renderAgain(doRender = true, v = false) { renderAgain = doRender, recursiveRenderAgain = v },\n        setChildContext(context) { childContext = context },\n        removeLine(r = true) { removeLine = r },\n        skipRender() { throw SKIP_ERROR },\n      }), key, position, str)\n      /** @type {preact.VNode} */\n      let hyperResult\n      try {\n        const promise = instance.call(this, props)\n        hyperResult = promise instanceof Promise ? await promise : promise\n      } catch (err) {\n        if (!err.message.startsWith('Class constructor'))\n          throw err\n        const Instance = /** @type {function(new:_competent.CompetentComponent)} */ (instance)\n        const i = new Instance()\n        const promise = i.serverRender ? i.serverRender(props) : i.render(props)\n        hyperResult = promise instanceof Promise ? await promise : promise\n        if (i.fileRender) {\n          let iframe = await i.render(props)\n          iframe = hyperToString(iframe, renderOptions)\n          if (renderAgain) iframe = await secondRender({\n            getContext: getContext.bind(this),\n            getReplacements: getReplacements.bind(this),\n            key, recursiveRenderAgain, re, replacement,\n            childContext, body: iframe })\n          await i.fileRender(iframe, props)\n        }\n      }\n      if (exported) { // generate id if needed\n        const hr = Array.isArray(hyperResult) ? hyperResult[0] : hyperResult\n        id = hr.attributes.id\n        if (!id) {\n          id = getId.call(this, key, overriddenProps || htmlProps)\n          hr.attributes.id = id\n        }\n      }\n      let r = hyperToString(hyperResult, renderOptions)\n      if (!r && removeLine) {\n        if (onSuccess) onSuccess.call(this, key, htmlProps)\n        return ''\n      }\n      r = (ws || '') + r.replace(/^/gm, pad)\n      if (renderAgain) {\n        // console.log('============\\n',r,'\\n============')\n        r = await secondRender({\n          getContext: getContext ? getContext.bind(this) : undefined,\n          getReplacements: getReplacements ? getReplacements.bind(this) : undefined,\n          key, recursiveRenderAgain, re, replacement,\n          childContext,\n          body: r,\n          position,\n        })\n      }\n      if (exported)\n        markExported.call(this, key, id, overriddenProps || htmlProps, children)\n      if (onSuccess) onSuccess.call(this, key, htmlProps)\n      return r\n    } catch (err) {\n      if (err === SKIP_ERROR) return m\n      if (onFail) onFail.call(this, key, err, position, str)\n      if (removeOnError) return ''\n      return m\n    }\n  }\n  /** @type {_restream.Rule} */\n  const rule = {\n    re, replacement,\n  }\n  return rule\n}\n\nconst hyperToString = (hyperResult, renderOptions) => {\n  let r\n  if (typeof hyperResult == 'string') {\n    r = hyperResult\n  } else if (Array.isArray(hyperResult)) {\n    r = hyperResult.map((hr) => {\n      if (typeof hr == 'string') return hr\n      const res = render(hr, renderOptions)\n      return res\n    }).join('\\n')\n  } else {\n    r = render(hyperResult, renderOptions)\n  }\n  return r\n}\n\nconst secondRender = async ({\n  getReplacements, key, recursiveRenderAgain, re, replacement, getContext, childContext, position,\n  body,\n}) => {\n  let childRules\n  if (getReplacements) {\n    childRules = getReplacements(key, recursiveRenderAgain)\n  } else {\n    if (recursiveRenderAgain)\n    // exclude the actual element \ud83e\udd37\u200d\n      childRules = {\n        re: upgradeRe(re, key),\n        replacement,\n      }\n    else childRules = { re, replacement }\n  }\n  const childRepl = new Replaceable(childRules)\n  if (getContext) {\n    const ctx = getContext(childContext, { position, key } )\n    Object.assign(childRepl, ctx)\n  }\n  return await Replaceable.replace(childRepl, body)\n}\n\nconst upgradeRe = (re, key) => {\n  const ure = new RegExp(re.source.replace(new RegExp(`([|(])${key}([|)])`),\n    (m, pb, pa) => {\n      if (pb == '|' && pa == '|') return '|'\n      if (pa == ')') return pa\n      if (pb == '(') return pb\n      return ''\n    }), re.flags)\n  return ure\n}\n\nexport default competent\nexport { default as makeComponentsScript, writeAssets } from './make-comps'\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('restream').Rule} _restream.Rule\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('restream').AsyncReplacer} _restream.AsyncReplacer\n */\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').Config} _competent.Config\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').Meta} _competent.Meta\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').VNode} preact.VNode\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').Component} preact.Component\n */\n","import NodeEnv from './node'\nimport setup from './common'\n\n/**\n * Creates a function to log messages.\n * @param {string} namespace\n */\nexport default function(namespace) {\n  if (!namespace) throw new Error('To use debug, pass the namespace.')\n  const node = setup(NodeEnv)\n  const debug = node(namespace)\n  return debug\n}","import makePromise from 'makepromise'\nimport { lstat } from 'fs'\n\n/**\n * Check If The File Or Directory Exists, And Return Stats.\n * @param {string} path The path to check for existence.\n */\nconst exists = async (path) => {\n  try {\n    const ls = /** @type {fs.Stats} */ (await makePromise(lstat, path))\n    return ls\n  } catch (err) {\n    return null\n  }\n}\n\nexport default exists\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('fs').Stats} fs.Stats\n */","import exists from '@wrote/exists'\nimport { dirname, join, relative } from 'path'\n\n/**\n * For the given local path that can omit the JS/JSX extension and point to a directory (e.g., `./lib` or `./lib/example`), find that file on the filesystem.\n * @param {string} path The dependency path, to resolve e.g., `./lib`.\n * @param {string} [relativeFrom] The optional path of the file that imports the given path.\n */\nconst resolveDependency = async (path, relativeFrom) => {\n  if (relativeFrom) {\n    const d = dirname(relativeFrom)\n    path = join(d, path)\n  }\n  let e = await exists(path)\n  let res = path\n  let isDir = false\n  if (!e) {\n    res = await checkSources(path)\n    if (!res) throw new Error(`${path}.js or ${path}.jsx is not found.`)\n  } else if (e.isDirectory()) {\n    // first try file\n    let fileChecked = false\n    let fileRes\n    if (!path.endsWith('/')) {\n      fileRes = res = await checkSources(path)\n      fileChecked = true\n    }\n    if (!fileRes) {\n      res = await checkSources(join(path, 'index'))\n      if (!res) {\n        const s = fileChecked ? `${path}.jsx? does not exist, and ` : ''\n        throw new Error(`${s}index.jsx? file is not found in ${path}`)\n      }\n      isDir = true\n    }\n  }\n  return {\n    path: path.startsWith('.') ? relative('', res) : res,\n    isDir,\n  }\n}\n\nconst checkSources = async (path) => {\n  let pp = `${path}.js`\n  let e = await exists(pp)\n  if (!e) pp = `${pp}x`; e = await exists(pp)\n  if (e) return pp\n}\n\nexport default resolveDependency","export default child_process\nexport const {\n  ChildProcess,\n  exec,\n  execFile,\n  execFileSync,\n  execSync,\n  fork,\n  spawn,\n  spawnSync,\n} = child_process","import { spawn, fork as forkCp } from 'child_process'\nimport { collect } from 'catchment'\n\n/**\n * @param {!child_process.ChildProcess} proc\n * @returns {!Promise<_spawncommand.PromiseResult>}\n */\nconst getPromise = async (proc) => {\n  const [code, stdout, stderr] = await Promise.all([\n    new Promise((resolve, reject) => {\n      proc.on('error', reject)\n        .on('exit', (code) => {\n          resolve(code)\n        })\n    }),\n    proc.stdout ? collect(proc.stdout) : undefined,\n    proc.stderr ? collect(proc.stderr) : undefined,\n  ])\n  return {\n    code,\n    stdout,\n    stderr,\n  }\n}\n\n/**\n * Spawns a new process using the `command` and returns an instance of a ChildProcess, extended to have a `promise` property which is resolved when the process exits. The resolved value is an object with `stdout`, `stderr` and `code` properties.\n * @param {string} command The command to run.\n * @param {!Array<string>} [args] List of string arguments.\n * @param {!child_process.SpawnOptions} [options] Options used to spawn.\n */\nexport default function spawnCommand(command, args, options) {\n  if (!command) throw new Error('Please specify a command to spawn.')\n  const proc = /** @type {!_spawncommand.ChildProcessWithPromise} */ (spawn(command, args, options))\n\n  const promise = getPromise(proc)\n  proc.promise = promise\n  /** @suppress {checkTypes} */\n  proc.spawnCommand = proc['spawnargs'].join(' ')\n  return proc\n}\n\n/**\n * Forks a process and assign a `promise` property to it, resolved with `stderr`, `stdout` and `code` properties on exit.\n * @param {string} mod The module to run in the child.\n * @param {!Array<string>} [args] List of string arguments.\n * @param {!child_process.ForkOptions} [options] Options to fork the process with.\n */\nexport function fork(mod, args, options) {\n  if (!mod) throw new Error('Please specify a module to fork')\n  const proc = /** @type {!_spawncommand.ChildProcessWithPromise} */ (forkCp(mod, args, options))\n\n  const promise = getPromise(proc)\n  proc.promise = promise\n  /** @suppress {checkTypes} */\n  proc.spawnCommand = proc['spawnargs'].join(' ')\n  return proc\n}\n\n/* typal types/index.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_spawncommand.PromiseResult} PromiseResult\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {Object} _spawncommand.PromiseResult\n * @prop {string} stdout The accumulated result of the `stdout` stream.\n * @prop {string} stderr The accumulated result of the `stderr` stream.\n * @prop {number} code The code with which the process exited.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('child_process').SpawnOptions} child_process.SpawnOptions\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('child_process').ForkOptions} child_process.ForkOptions\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('child_process').ChildProcess} child_process.ChildProcess\n */\n\n/* documentary types/cp.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_spawncommand.ChildProcessWithPromise} ChildProcessWithPromise A child process with an extra `promise` property.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {child_process.ChildProcess & _spawncommand.$ChildProcessWithPromise} _spawncommand.ChildProcessWithPromise A child process with an extra `promise` property.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {Object} _spawncommand.$ChildProcessWithPromise A child process with an extra `promise` property.\n * @prop {!Promise<!_spawncommand.PromiseResult>} promise A promise resolved when the process exits.\n * @prop {string} spawnCommand The spawn arguments joined by whitespace.\n */\n","/**\n * Exclude items from the array\n * @param {!Array<!Array<string>, !Array<string>>} acc left to exclude, and non-excluded\n * @param {string} current\n */\nexport const excludeReducer = (acc, current) => {\n  const [ok, ex] = acc\n  let i\n  if (!ex.length || (i = ex.indexOf(current)) == -1) {\n    return [\n      [...ok, current],\n      ex,\n    ]\n  }\n  const before = ex.slice(0, i)\n  const after = ex.slice(i + 1, -1)\n  const newExcluded = [...before, ...after]\n  return [\n    ok,\n    newExcluded,\n  ]\n}\n\nconst hasFile = (array, file) => {\n  return array.some(a => a == file)\n}\n\n/**\n * @param {!Array<string>} files\n * @param {boolean} [reverse]\n */\nexport const getKeys = (files, reverse) => {\n  const hasIndex = hasFile(files, 'index.md')\n  const hasFooter = hasFile(files, 'footer.md')\n\n  const excluded = ['index.md', 'footer.md']\n\n  const included = files.filter(f => !excluded.includes(f))\n\n  const sorted = included.sort((a, b) => {\n    const res = a.localeCompare(b, undefined, { numeric: true })\n    if (reverse) return -res\n    return res\n  })\n\n  if (hasIndex && hasFooter) {\n    return [\n      'index.md',\n      ...sorted,\n      'footer.md',\n    ]\n  }\n  if (hasIndex) {\n    return [\n      'index.md',\n      ...sorted,\n    ]\n  }\n  if (hasFooter) {\n    return [\n      ...sorted,\n      'footer.md',\n    ]\n  }\n  return sorted\n}\n","import { join } from 'path'\nimport { createReadStream } from 'fs'\nimport { PassThrough } from 'stream'\nimport { debuglog } from 'util'\nimport readDirStructure from '@wrote/read-dir-structure'\nimport { getKeys } from './lib'\n\nconst LOG = debuglog('pedantry')\n\nconst processDir = async ({\n  stream, source, path = '.', content = {}, reverse = false,\n  separator, includeFilename, ignoreHidden,\n}) => {\n  const k = Object.keys(content)\n\n  const keys = getKeys(k, reverse)\n\n  const size = await keys.reduce(async (acc, name) => {\n    let totalSize = await acc\n    const { type, content: dirContent } = content[name]\n    const relPath = join(path, name)\n\n    let s\n    if (type == 'File') {\n      const shouldIgnore = ignoreHidden && name.startsWith('.')\n      if (!shouldIgnore) s = await processFile({\n        stream, source, path: relPath, separator, includeFilename,\n      })\n    } else if (type == 'Directory') {\n      s = await processDir({\n        stream, source, path: relPath, content: dirContent, reverse,\n        separator, includeFilename, ignoreHidden,\n      })\n    }\n    totalSize += s\n    return totalSize\n  }, 0)\n\n  LOG('dir %s size: %s B', path, size)\n  return size\n}\n\n/**\n * @param {Object} options\n * @param {Pedantry} options.stream\n */\nconst processFile = async (options) => {\n  const {\n    stream, source, path, separator, includeFilename,\n  } = options\n  const fullPath = join(source, path)\n  stream.emit('file', path)\n  if (separator && !stream.justStarted) {\n    if (includeFilename) {\n      stream.push({ file: 'separator', data: separator })\n    } else {\n      stream.push(separator)\n    }\n  }\n  const size = await new Promise((r, j) => {\n    let s = 0\n    const rs = createReadStream(fullPath)\n    rs.on('data', (d) => {\n      s += d.byteLength\n    }).on('error', (err) => {\n      j(err)\n    }).on('close', () => {\n      r(s)\n    })\n    if (includeFilename) {\n      rs.on('data', (data) => {\n        stream.push({ file: fullPath, data: `${data}` })\n      })\n    } else {\n      rs.pipe(stream, { end: false })\n    }\n  })\n  stream.justStarted = false\n  LOG('file %s :: %s B', fullPath, size)\n  return size\n}\n\n// * @todo implement reading only on read ie change mode\n\nexport default class Pedantry extends PassThrough {\n  /**\n   * Upon creation, `Pedantry` will start reading files in the `source` directory recursively in the following order: the content of the `index.md` file will go first, then of all files and directories in the folder recursively in a sorted order, and the content of the `footer.md` file will go last if found.\n   * @param {string} source Path to the root directory.\n   * @param {_pedantry.Options} [options] Options for Pedantry.\n   */\n  constructor(source, options = {}) {\n    const {\n      reverse = false,\n      addNewLine = false,\n      addBlankLine = false,\n      includeFilename = false,\n      ignoreHidden = false,\n    } = options\n    super({\n      objectMode: includeFilename,\n    })\n    let separator\n    if (addNewLine) separator = '\\n'\n    else if (addBlankLine) separator = '\\n\\n'\n    this.justStarted = true\n    ;(async () => {\n      let content\n      try {\n        ({ content } = await readDirStructure(source))\n      } catch (err) {\n        const e = new Error(err.message)\n        this.emit('error', e)\n      }\n      try {\n        await processDir({\n          stream: this,\n          source,\n          content,\n          reverse,\n          separator,\n          includeFilename,\n          ignoreHidden,\n        })\n      } catch (err) {\n        this.emit('error', err)\n      } finally {\n        this.end()\n      }\n    })()\n  }\n}\n\n// /**\n//  * A file event.\n//  * @event Pedantry#file\n//  * @param {string} file A path to the file currently being processed relative to the `Pedantry` source.\n//  */\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').Options} _pedantry.Options\n */","export default _module\nexport const {\n  Module,\n  builtinModules,\n  runMain,\n  wrap,\n} = _module","import mismatch from 'mismatch'\n\nconst RE = /^ *import(?:\\s+(?:[^\\s,]+)\\s*,?)?(?:\\s*{(?:[^}]+)})?\\s+from\\s+(['\"])(.+?)\\1/gm\nconst RE2 = /^ *import\\s+(?:.+?\\s*,\\s*)?\\*\\s+as\\s+.+?\\s+from\\s+(['\"])(.+?)\\1/gm\nconst RE3 = /^ *import\\s+(['\"])(.+?)\\1/gm\nconst RE4 = /^ *export\\s+(?:{[^}]+?}|\\*)\\s+from\\s+(['\"])(.+?)\\1/gm\n\n/**\n * Returns the names of the modules imported with `import` and `export` statements.\n * @param {string} source The source to detect matches in.\n */\nconst getMatches = (source) => {\n  const res = [RE, RE2, RE3, RE4].reduce((acc, re) => {\n    const m = mismatch(re, source, ['q', 'from'])\n      .map(a => a['from'])\n    return [...acc, ...m]\n  }, [])\n  return res\n}\n\nexport default getMatches\n\nexport const RES = {\n  RE, RE2, RE3, RE4,\n}","import { join, relative, resolve, dirname, parse } from 'path'\r\nimport exists from '@wrote/exists'\r\nimport read from '@wrote/read'\r\nimport resolveDep from 'resolve-dependency'\r\n\r\nlet ROOT\r\n\r\n/**\r\n * Finds the location of the `package.json` for the given dependency in the directory, and its entry file.\r\n * @param {string} dir The path to the directory where the requiring file is located.\r\n * @param {string} name The name of the required package.\r\n * @param {!_fpj.Config} opts The options for `fpj`.\r\n * @param {!Array<string>} [opts.fields] Any additional fields from `package.json` file to return.\r\n * @param {boolean} [opts.soft=false] If the entry export (main or module) does not exist, `soft` mode will not throw an error, but add the `hasEntry` property to the output set to _false_. Default `false`.\r\n * @returns {!Promise<!_fpj.Return>}\r\n */\r\nconst findPackageJson = async (dir, name, opts = {}) => {\r\n  if (!ROOT) {\r\n    ({ root: ROOT } = parse(process.cwd()))\r\n  }\r\n  const { fields, soft = false } = opts\r\n  const fold = join(dir, 'node_modules', name)\r\n  const path = join(fold, 'package.json')\r\n  const e = await exists(path)\r\n  if (e) {\r\n    const res = await findEntry(path, fields)\r\n    if (res === undefined)\r\n      throw new Error(`The package ${relative('', path)} does export the module.`)\r\n    else if (!res.entryExists && !soft)\r\n      throw new Error(`The exported module ${res.main} in package ${name} does not exist.`)\r\n    const { entry, version, packageName, main, entryExists, ...rest } = res\r\n    const result = /** @type {!_fpj.Return} */ ({\r\n      entry: relative('', entry),\r\n      packageJson: relative('', path),\r\n      ...(version ? { version } : {}),\r\n      packageName,\r\n      ...(main ? { hasMain: true } : {}),\r\n      ...(!entryExists ? { entryExists: false } : {}),\r\n      ...rest,\r\n    })\r\n    return result\r\n  }\r\n  if (dir == ROOT && !e)\r\n    throw new Error(`Package.json for module ${name} not found.`)\r\n  return findPackageJson(join(resolve(dir), '..'), name, opts)\r\n}\r\n\r\n/**\r\n * Finds the path to the entry based on package.json file.\r\n * @param {string} path\r\n * @param {!Array<string>} fields\r\n */\r\nexport const findEntry = async (path, fields = []) => {\r\n  const f = await read(path)\r\n  let mod, version, packageName, main, rest\r\n  try {\r\n    ({\r\n      'module': mod,\r\n      'version': version,\r\n      'name': packageName,\r\n      'main': main,\r\n      ...rest\r\n    } = JSON.parse(f))\r\n    rest = fields.reduce((acc, current) => {\r\n      acc[current] = rest[current]\r\n      return acc\r\n    }, {})\r\n  } catch (err) {\r\n    throw new Error(`Could not parse ${path}.`)\r\n  }\r\n  const dir = dirname(path)\r\n  let resolved = mod || main\r\n  if (!resolved) {\r\n    const indexExists = await exists(join(dir, 'index.js'))\r\n    if (!indexExists) return undefined\r\n    resolved = main = 'index.js'\r\n  }\r\n  let entry = join(dir, resolved)\r\n  let r\r\n  try {\r\n    ({ path: r } = await resolveDep(entry))\r\n    entry = r\r\n  } catch (err) {/* does not exist */}\r\n  return { entry, version, packageName, main: !mod && main,\r\n    entryExists: !!r,\r\n    ...rest }\r\n}\r\n\r\nexport default findPackageJson\r\n\r\n/* documentary types/index.xml */\r\n/**\r\n * @suppress {nonStandardJsDocs}\r\n * @typedef {_fpj.Config} Config The options for `fpj`.\r\n */\r\n/**\r\n * @suppress {nonStandardJsDocs}\r\n * @typedef {Object} _fpj.Config The options for `fpj`.\r\n * @prop {!Array<string>} [fields] Any additional fields from `package.json` file to return.\r\n * @prop {boolean} [soft=false] If the entry export (main or module) does not exist, `soft` mode will not throw an error, but add the `hasEntry` property to the output set to _false_. Default `false`.\r\n */\r\n/**\r\n * @suppress {nonStandardJsDocs}\r\n * @typedef {_fpj.Return} Return The return type of the program.\r\n */\r\n/**\r\n * @suppress {nonStandardJsDocs}\r\n * @typedef {Object} _fpj.Return The return type of the program.\r\n * @prop {string} entry The location of the package's entry file. The preference is given to the `module` field.\r\n * @prop {string} packageJson The path to the package.json file itself.\r\n * @prop {string} packageName The name of the resolved package.\r\n * @prop {string} [version] The version of the package.\r\n * @prop {boolean} [hasMain] Whether the entry is the `main` rather than `module`.\r\n * @prop {boolean} [entryExists] In soft mode, will be set to `false` if the entry file does not exist.\r\n */\r\n","import { dirname, join } from 'path'\nimport { builtinModules } from 'module'\nimport read from '@wrote/read'\nimport resolveDependency from 'resolve-dependency'\nimport getMatches from '@depack/detect'\nimport split from '@depack/split'\nimport findPackageJson from 'fpj'\nimport mismatch from 'mismatch'\nimport erotic from 'erotic'\n\nexport const checkIfLib = modName => /^[./]/.test(modName)\n\n/**\n * Expands the dependency match to include `package.json` and entry paths.\n * @param {string} path The path to the file.\n * @param {!Array<string>} matches The matches.\n * @param {boolean} [soft] Whether to throw when a dependency's package.json is not found.\n * @param {!Array<string>} [fields] What additional fields to fetch from package.json.\n * @returns {!Promise<!Array<!_staticAnalysis.DependencyMeta>>}\n */\nconst getDependenciesMeta = async (path, matches, soft, fields, pckg = null) => {\n  const e = erotic()\n  const dir = dirname(path)\n  const proms = matches.map(async (name) => {\n    const internal = builtinModules.includes(name)\n    if (internal) return { internal: name }\n    const isLib = checkIfLib(name)\n    if (isLib) {\n      try {\n        const { path: entry } = await resolveDependency(name, path)\n        return { entry, package: pckg }\n      } catch (err) { /*\n        maybe a local package with package.json\n      */}\n    } else {\n      const { name: n, paths } = split(name)\n      if (paths) {\n        const { packageJson, packageName } = await findPackageJson(dir, n)\n        const d = dirname(packageJson)\n        const { path: entry } = await resolveDependency(join(d, paths))\n        return { entry, package: packageName }\n      }\n    }\n    try {\n      const {\n        entry, packageJson, version, packageName, hasMain, ...rest\n      } = await findPackageJson(dir, name, { fields })\n      if (packageName == pckg) {\n        console.warn('[static-analysis] Skipping package %s that imports itself in %s', packageName, path)\n        return null\n      }\n      return {\n        entry, packageJson, version, name: packageName,\n        ...(hasMain ? { hasMain } : {}),\n        ...rest }\n    } catch (err) {\n      if (soft) return null\n      let [v] = process.version.split('.')\n      v = parseInt(v.replace('v', ''), 10)\n      if (v >= 12) throw err\n      throw e(err)\n    }\n  })\n  return (await Promise.all(proms)).filter(Boolean)\n}\n\n/**\n * Detects the imports.\n * @param {string} path\n * @param {Object} cache\n * @returns {!Promise<!Array<!_staticAnalysis.Detection>>}\n */\nexport const detect = async (path, cache = {}, {\n  nodeModules = true, shallow = false, soft = false, fields = [],\n  node_modules_cache = {},\n  mergeSameNodeModules = true,\n  package: pckg } = {}) => {\n  if (path in cache) return []\n  cache[path] = 1\n  const source = await read(path)\n  const matches = getMatches(source)\n  const requireMatches = getRequireMatches(source)\n  const fm = nodeModules ? matches : matches.filter(checkIfLib)\n  const fr = nodeModules ? requireMatches : requireMatches.filter(checkIfLib)\n\n  let deps\n  try {\n    const dm = await getDependenciesMeta(path, fm, soft, fields, pckg)\n    const rm = await getDependenciesMeta(path, fr, soft, fields, pckg)\n    rm.forEach((val) => {\n      val.required = true\n    })\n    deps = [...dm, ...rm]\n  } catch (err) {\n    err.message = `${path}\\n [!] ${err.message}`\n    throw err\n  }\n  const Deps = mergeSameNodeModules ? deps.map(o => {\n    const { name, version, required } = o\n    if (name && version) {\n      // for non-flattened node_modules structure, e.g., when linking\n      // to prevent multiple same packages like\n      // depA, node_modules/depB/node_modules/depA\n      const n = `${name}:${version}${required ? '-required' : ''}`\n      const existing = node_modules_cache[n]\n      if (existing) return existing\n\n      node_modules_cache[n] = o\n    }\n    return o\n  }) : deps\n  const d = Deps.map(o => ({ ...o, from: path }))\n  const entries = Deps\n    .filter(({ entry }) => {\n      return entry && !(entry in cache)\n    })\n  const discovered = await entries\n    .reduce(async (acc, {\n      entry, hasMain, packageJson, name, package: p }) => {\n      if (packageJson && shallow) return acc\n      const accRes = await acc\n      const res = await detect(entry, cache, {\n        nodeModules, shallow, soft, fields, package: name || p,\n        node_modules_cache, mergeSameNodeModules,\n      })\n      const r = res\n        .map(o => ({\n          ...o,\n          from: o.from ? o.from : entry,\n          ...(!o.packageJson && hasMain ? { hasMain } : {}),\n        }))\n      return [...accRes, ...r]\n    }, d)\n  return discovered\n}\n\nexport const getRequireMatches = (source) => {\n  const m = mismatch(/(?:^|[^\\w\\d_])require\\(\\s*(['\"])(.+?)\\1\\s*\\)/gm, source, ['q', 'from'])\n  const res = m.map(a => a['from'])\n  return res\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').Detection} _staticAnalysis.Detection\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').DependencyMeta} _staticAnalysis.DependencyMeta\n */","/**\n * Splits the package name possibly with scope and returns the name and the\n * path within that page that was required.\n * @param {string} from The package, e.g., `@depack/depack/src`, or `depack`.\n */\nconst split = (from) => {\n  let [scope, name, ...paths] = from.split('/')\n  if (!scope.startsWith('@') && name) {\n    paths = [name, ...paths]\n    name = scope\n  } else if (!scope.startsWith('@')) {\n    name = scope\n  } else {\n    name = `${scope}/${name}`\n  }\n  return { name, paths: paths.join('/') }\n}\n\nexport default split","import resolveDependency from 'resolve-dependency'\nimport erotic from 'erotic'\nimport { detect } from './lib'\n\n/**\n * Detects all dependencies in a file and their dependencies recursively.\n * @param {!Array<string>|string} path The path to the file in which to detect dependencies.\n * @param {!_staticAnalysis.Config} [config] The configuration options for `staticAnalysis`.\n * @return {!Promise<!Array<_staticAnalysis.Detection>>}\n */\nconst staticAnalysis = async (path, config = {}) => {\n  const e = erotic()\n  let paths = Array.isArray(path) ? path : [path]\n  paths = await Promise.all(paths.map(async p => {\n    const { path: pp } = await resolveDependency(p)\n    return pp\n  }))\n\n  const {\n    nodeModules = true,\n    shallow = false,\n    soft = false,\n    fields = [],\n    mergeSameNodeModules = true,\n  } = config\n  let detected\n  try {\n    const cache = {}\n\n    detected = await paths.reduce(async (acc, p) => {\n      acc = await acc\n      const res = await detect(p, cache, {\n        nodeModules, shallow, soft, fields, mergeSameNodeModules })\n      acc.push(...res)\n      return acc\n    }, [])\n  } catch (err) {\n    let [v] = process.version.split('.')\n    v = parseInt(v.replace('v', ''), 10)\n    if (v >= 12) throw err\n    throw e(err)\n  }\n  const filtered = detected.filter(({ internal, entry }, i) => {\n    if (internal) {\n      const fi = detected.findIndex(({ internal: ii }) => {\n        return ii == internal\n      })\n      return fi == i\n    }\n    const ei = detected.findIndex(({ entry: ee }) => {\n      return entry == ee\n    })\n    return ei == i\n  })\n  const f = filtered.map((ff) => {\n    const { entry, internal } = ff\n    const froms = detected\n      .filter(({ internal: i, entry: ee }) => {\n        if (internal) return internal == i\n        if (entry) return entry == ee\n      })\n      .map(({ from }) => from)\n      .filter((el, i, a) => a.indexOf(el) == i)\n    const newF =  { ...ff, from: froms }\n    return newF\n  })\n    .map(({ package: pckg, ...props }) => {\n      if (pckg) return { package: pckg, ...props }\n      return props\n    })\n  return f\n}\n\n/**\n * Sorts the detected dependencies into commonJS modules, packageJsons and internals.\n * @param {!Array<!_staticAnalysis.Detection>} detected The detected matches\n * @return {_staticAnalysis.SortReturn}\n */\nexport const sort = (detected) => {\n  const packageJsons = []\n  const commonJsPackageJsons = []\n  const commonJs = []\n  const js = []\n  const internals = []\n  const deps = []\n  detected\n    .forEach(({ packageJson, hasMain, name, entry, internal }) => {\n      if (internal) return internals.push(internal)\n\n      if (packageJson && hasMain)\n        commonJsPackageJsons.push(packageJson)\n      else if (packageJson) packageJsons.push(packageJson)\n      if (entry && hasMain) commonJs.push(entry)\n      else if (entry) js.push(entry)\n      if (name) deps.push(name)\n    })\n  return { commonJsPackageJsons,\n    packageJsons, commonJs, js, internals, deps }\n}\n\nexport default staticAnalysis\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../').Config} _staticAnalysis.Config\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../').SortReturn} _staticAnalysis.SortReturn\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../').Detection} _staticAnalysis.Detection\n */","import staticAnalysis from 'static-analysis'\nimport resolveDependency from 'resolve-dependency'\nimport { c } from 'erte'\nimport { lstat } from 'fs'\nimport makePromise from 'makepromise'\n\nexport const compareHash = (currentHash, hash, log = console.log) => {\n  const added = []\n  const removed = []\n  hash.forEach((mm) => {\n    if (!currentHash.includes(mm)) {\n      added.push(mm)\n    }\n  })\n  currentHash.forEach((mm) => {\n    if (!hash.includes(mm)) {\n      removed.push(mm)\n    }\n  })\n  const changed = added.length || removed.length\n\n  if (!changed) return true\n  added.forEach((mm) => {\n    const { entry, mmeta } = getMetaToPrint(mm)\n    log(c('+', 'green'), entry, mmeta)\n  })\n  removed.forEach((mm) => {\n    const { entry, mmeta } = getMetaToPrint(mm)\n    log(c('-', 'red'), entry, mmeta)\n  })\n  return false\n}\n\nconst getMetaToPrint = (mm) => {\n  const [entry, meta] = mm.split(' ')\n  let mmeta = ''\n  if (meta) {\n    mmeta = /^\\d+$/.test(meta) ? new Date(parseInt(meta, 10)).toLocaleString() : meta\n  }\n  return { entry, mmeta }\n}\n\nexport const getMtime = async (entry) => {\n  const stat = /** @type {!fs.Stats} */ (await makePromise(lstat, entry))\n  const mtime = stat.mtime\n  return mtime.getTime()\n}\n\nexport const computeHash = async (analysis) => {\n  const hash = await Promise.all(analysis.map(async ({ entry, name, internal, version }) => {\n    if (name) return `${name} ${version}`\n    if (internal) return internal\n    const mtime = await getMtime(entry)\n    return `${entry} ${mtime}`\n  }))\n  return hash\n}\n\n\nexport const analyse = async (mod) => {\n  const analysis = await staticAnalysis(mod, {\n    shallow: true,\n    soft: true,\n  })\n  const hash = await computeHash(analysis)\n\n  const { path: mmod } = await resolveDependency(mod)\n  const mmtime = await getMtime(mmod)\n\n  return { mtime: mmtime, hash, analysis }\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('fs').Stats} fs.Stats\n */","import Catchment from 'catchment'\nimport { createWriteStream, createReadStream } from 'fs'\nimport { Writable } from 'stream'\n\n/**\n * Handles the flow of streams, and awaits for them to complete. The input can be specified either as a string with the `source` property, or as as stream with the `readable`. The output can also be given either as a string with the `destination`, or as a stream with the `writable`. If destination is passed as the `-`, the output becomes `process.stdout`.\n * @param {!_whichStream.Config} config The configuration object.\n */\nasync function whichStream(config) {\n  const {\n    source,\n    destination,\n  } = config\n  let { readable, writable } = config\n\n  if (!(source || readable))\n    throw new Error('Please give either a source or readable.')\n  if (!(destination || writable))\n    throw new Error('Please give either a destination or writable.')\n\n  if (source && !readable) readable = createReadStream(source)\n\n  if (destination == '-') {\n    readable.pipe(process.stdout)\n  } else if (destination) {\n    await handleWriteStream(destination, readable, source)\n  } else if (writable instanceof Writable) {\n    readable.pipe(writable)\n    await new Promise((r, j) => {\n      writable.on('error', j)\n      writable.on('finish', r)\n    })\n  }\n}\n\nconst handleWriteStream = async (destination, readable, source) => {\n  if (readable.path == destination || source == destination) {\n    const { promise } = new Catchment({ rs: readable })\n    const res = await promise\n    await new Promise((r, j) => {\n      // must create writable after reading\n      const writable = createWriteStream(destination)\n      writable\n        .once('error', j)\n        .end(res, r)\n    })\n  } else {\n    await new Promise((r, j) => {\n      const writable = createWriteStream(destination)\n      readable.pipe(writable)\n      writable\n        .once('error', j)\n        .on('close', r)\n    })\n  }\n}\n\nexport default whichStream\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').Config} _whichStream.Config\n */\n","import '@externs/preact/types/externs'\nimport write from '@wrote/write'\nimport read from '@wrote/read'\nimport clone from '@wrote/clone'\nimport ensurePath, { ensurePathSync } from '@wrote/ensure-path'\nimport readDirStructure from '@wrote/read-dir-structure'\nimport rexml from 'rexml'\nimport argufy, { reduceUsage } from 'argufy'\nimport Catchment, { collect } from 'catchment'\nimport clearr from 'clearr'\nimport competent from 'competent'\nimport erte, { c, b } from 'erte'\nimport forkfeed from 'forkfeed'\nimport makepromise from 'makepromise'\nimport mismatch from 'mismatch'\nimport usually from 'usually'\nimport resolveDependency from 'resolve-dependency'\nimport spawn, { fork } from 'spawncommand'\nimport {\n  SyncReplaceable, Replaceable, makeMarkers, makeCutRule, makePasteRule,\n  replace,\n} from 'restream'\nimport Pedantry from 'pedantry'\nimport compare from '@depack/cache'\nimport whichStream from 'which-stream'\n\nmodule.exports = {\n  'competent': competent,\n  'c': c,\n  'b': b,\n  'readDirStructure': readDirStructure,\n  'clone': clone,\n  'Pedantry': Pedantry,\n  'whichStream': whichStream,\n  'compare': compare,\n  'ensurePath': ensurePath,\n  'ensurePathSync': ensurePathSync,\n  'read': read,\n  'replace': replace,\n  'usually': usually,\n  'spawn': spawn,\n  'fork': fork,\n  'SyncReplaceable': SyncReplaceable,\n  'Replaceable': Replaceable,\n  'makeMarkers': makeMarkers,\n  'makeCutRule': makeCutRule,\n  'makePasteRule': makePasteRule,\n  'resolveDependency': resolveDependency,\n  'rexml': rexml,\n  'reduceUsage': reduceUsage,\n  'write': write,\n  'argufy': argufy,\n  'Catchment': Catchment,\n  'collect': collect,\n  'clearr': clearr,\n  'erte': erte,\n  'forkfeed': forkfeed,\n  'makepromise': makepromise,\n  'mismatch': mismatch,\n}","import { createHash } from 'crypto'\nimport { compareHash, analyse } from './lib'\n\n/** @type {_depack.compare} */\nconst compare = async (mod, cache = {}, log = console.log) => {\n  const current = cache[mod]\n  const { mtime, hash } = await analyse(mod)\n\n  const md5 = /** @type {string} */ (createHash('md5').update(JSON.stringify(hash)).digest(\"hex\"))\n\n  if (!current) return {\n    result: false, reason: 'NO_CACHE', mtime, hash, md5,\n  }\n\n  const {\n    'mtime': currentMtime,\n    'hash': currentHash,\n  } = current\n\n  if (mtime != currentMtime) return {\n    result: false, reason: 'MTIME_CHANGE', mtime, hash, currentMtime, md5,\n  }\n  const isHashSame = compareHash(currentHash, hash, log)\n  if (isHashSame ) return { result: true, md5 }\n\n\n  return { result: false, mtime, hash, reason: 'HASH_CHANGE', md5 }\n}\n\nexport default compare\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').compare} _depack.compare\n */","/**\n * Generate a usage string.\n * @param {!_usually.Config} config The configuration object.\n * @param {!Object<string, string>} config.usage The map with possible arguments (flags, options) and their information.\n * @param {string} [config.description] What does the program do?\n * @param {string} [config.line] The summary of the program in one line.\n * @param {string} [config.example] The example of the program usage.\n * @example\n```\nimport usually from 'usually'\n\nconst res = usually({\n  usage: {\n    '-h': 'print help',\n    '-c': 'execute this command',\n  },\n  description: 'A test command-line application',\n  line: 'usually [-c command|command2] [-h]',\n  example: 'usually -c command2',\n})\n// A test command-line application\n//\n//  usually [-c command|command2] [-h]\n//\n//        -h      print help\n//        -c      execute this command\n//\n//  Example:\n//\n//    usually -c command2\n//\n```\n */\nexport default function usually(config = { usage: {} }) {\n  const {\n    usage = {},\n    description,\n    line,\n    example,\n  } = config\n  const commands = Object.keys(usage)\n  const descriptions = Object.values(usage)\n\n  const [commandLength] = commands.reduce(([longestName = 0, longestDescription = 0], name) => {\n    const command = usage[name]\n    const theLongest = command.split('\\n')\n      .reduce((acc, c) => {\n        if (c.length > acc) return c.length\n        return acc\n      }, 0)\n    if (theLongest > longestDescription) longestDescription = theLongest\n    if (name.length > longestName) longestName = name.length\n    return [longestName, longestDescription]\n  }, [])\n\n  const pad = (string, length) => {\n    const l = length - string.length\n    const ts = ' '.repeat(l)\n    const s = `${string}${ts}`\n    return s\n  }\n\n  const usa = commands.reduce((acc, command, i) => {\n    const value = descriptions[i]\n    const vals = value.split('\\n')\n    const c = pad(command, commandLength)\n    const [firstVal, ...otherVals] = vals\n    const firstLine = `${c}\\t${firstVal}`\n    const emptyPad = pad('', commandLength)\n    const otherLines = otherVals.map(val => {\n      const r = `${emptyPad}\\t${val}`\n      return r\n    })\n    const res = [...acc, firstLine, ...otherLines]\n    return res\n  }, [])\n\n  const USA = usa.map(a => `\\t${a}`)\n  const s = [\n    description,\n    `  ${line || ''}`,\n  ].filter(l => l ? l.trim() : l).join('\\n\\n')\n  const u = `${s ? `${s}\\n` : ''}\n${USA.join('\\n')}\n`\n\n\n  if (example) {\n    return `${u}\n  Example:\n\n    ${example}\n`\n  }\n\n  return u\n}\n\n/* documentary types/index.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_usually.Config} Config The configuration object.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {Object} _usually.Config The configuration object.\n * @prop {!Object<string, string>} usage The map with possible arguments (flags, options) and their information.\n * @prop {string} [description] What does the program do?\n * @prop {string} [line] The summary of the program in one line.\n * @prop {string} [example] The example of the program usage.\n */\n","import { createWriteStream } from 'fs'\nimport erotic from 'erotic'\n\n/**\n * Write a file to the filesystem.\n * @param {string} path The path of the file to write.\n * @param {string|Buffer} data The data to write.\n */\nexport default async function write(path, data) {\n  if (!path) throw new Error('No path is given.')\n  const er = erotic(true)\n  const ws = createWriteStream(path)\n  await new Promise((r, j) => {\n    ws\n      .on('error', (e) => {\n        const err = er(e)\n        j(err)\n      })\n      .on('close', r)\n      .end(data)\n  })\n}","/**\n * Clears the carriage return like the terminal would.\n * @param {string} string The string with the `\\r`.\n * @example\n * const res = clearR('...\\r..?\\r.!')\n * // output: .!?\n */\nconst clearR = (string) => {\n  const st = string.split('\\n').map(l => {\n    const r = l.split('\\r')\n    const t = r.reduce((acc, current, i) => {\n      if (!i) return acc\n      const { length } = current\n      const after = acc.slice(length)\n      return `${current}${after}`\n    }, r[0])\n    return t\n  }).join('\\n')\n  return st\n}\n\nexport default clearR","/**\n * Write data to the `writable` when data from the `readable` matches the regexp.\n * @param {!stream.Readable} readable A readable stream to detect data on.\n * @param {!stream.Writable} stdin A writable stream to pass answers to.\n * @param {!Array<!Array<(!RegExp|string)>>} inputs A serial collection of answers. Each answer will be ended with a `\\n` character. For example, `[[/question/, 'answer'], [/question2/, 'answer2]]`.\n * @param {stream.Writable} [log] A stream to which to write both data from readable, and the passed answer.\n */\nconst forkFeed = (readable, stdin, inputs = [], log = null) => {\n  if (log) readable.on('data', d => log.write(d))\n\n  let [a, ...rest] = inputs\n  if (!a) return\n\n  const handler = (d) => {\n    const [regexp, answer] = a\n    if (!regexp.test(d)) return\n\n    const an = `${answer}\\n`\n    if (log) log.write(an)\n\n    stdin.write(an)\n    ;([a, ...rest] = rest)\n    if (!a) readable.removeListener('data', handler)\n  }\n  readable.on('data', handler)\n}\n\nexport default forkFeed\n\n/* documentary types/index.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('stream').Writable} stream.Writable\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('stream').Readable} stream.Readable\n */\n"],
"names":["createReadStream","fs","createWriteStream","lstat","mkdir","mkdirSync","readdir","readlink","symlink","getStackSegment","stack","from","oneLine","splitStack","split","undefined","item","length","slice","items","join","getEntryStack","transparent","stackSegment","getCallerFromArguments","args","caller","homedir","os","extractPathRegex","pathRegex","homeDir","cleanStack","pretty","ignoredModules","j","re","RegExp","source","replace","filter","x","pathMatches","match","includes","test","trim","map","m","p1","makeCallback","entryCaller","entryStack","shadow","cb","messageOrError","arguments","errorStack","Error","calleeStackLine","message","isError","stackMessage","stackHeading","Object","assign","e","properties","erotic","$jscompDefaultExport","stream","PassThrough","Transform","Writable","pipeError","streamA","streamB","once","emit","Catchment","options","binary","rs","opts","er","proxyError","wrap","_","_caughtData","_promise","Promise","r","on","d","Buffer","concat","indexOf","pipe","chunk","encoding","callback","push","collect","readable","promise","res","read","path","makePromise","fn","resolveValue","fnLength","name","resolve","reject","err","error","allArgs","Array","isArray","basename","dirname","parse","relative","ensurePath","dir","make","code","parentDir","makeSync","lstatFiles","dirPath","dirContent","readFiles","relativePath","ls","all","isDirectory","lstatRes","isNotDirectory","readDirStructure","ignore","lsr","directories","files","notDirectories","reduce","acc","current","isFile","isSymbolicLink","type","dirs","rel","structure","content","cloneFile","to","ws","cloneLn","target","cloneDir","pr","keys","k","p","pt","mismatch","string","addPositions","position","start","o","capturedGroup","i","key","attributeRe","nameRe","valRe","attributesRe","extractTags","tag","t","tags","matches","simple","end1","end2","tagName","attributes","attrs","props","extractProps","simpleAttribute","val","parseInt","find","argv","long","short","bool","number","findIndex","a","value","index","startsWith","findTitles","titles","IS_NON_DIMENSIONAL","encodeEntities","s","isLargeString","JS_TO_CSS","getNodeProps","vnode","children","defaultProps","nodeName","mapAttributes","allAttributes","xml","isSvgMode","sort","selectValue","html","mappedAttributes","v","class","for","srcset","toLowerCase","str","prop","__html","Boolean","UNNAMED","VOID_ELEMENTS","INLINE_ELEMENTS","render","config","addDoctype","renderToString","context","inner","shallow","renderRootComponent","shallowHighOrder","sortAttributes","initialPadding","closeVoidTags","lineLength","noPretty","ip","repeat","indentChar","prototype","c","_disable","__x","getDerivedStateFromProps","state","componentWillMount","rendered","getChildContext","displayName","Function","getFallbackComponentName","cl","nl","newLength","isVoid","pieces","getLastLineLength","hasLarge","noPrettyPieces","child","ret","childSvgMode","rr","isNodeInline","currentBlockElement","shouldSkipPretty","exec","rres","firstMatch","lastWs","lastIndex","before","substring","isInline","lastPiece","component","toString","call","st","lastLine","checkRule","reObject","hasRe","replacement","hideStack","commonError","thrownError","commonLine","substr","li","lastIndexOf","SyncReplaceable","input","rules","fr","_broke","Acc","brake","replace.brake","getDefaultRegExp","toUpperCase","getDefaultReplacement","replaceable","Replaceable","_options","Replaceable$$module$node_modules$restream$src$Replaceable.replace","forEach","promises","data","shift","next","Stream","end","makeRe","tty","debuglog","util","format","inspect","isFinite","msAbs","Math","abs","ms","plural","h","round","JSON","stringify","String","n","parseFloat","y","w","formatThousandsRegExp","formatDecimalsRegExp","pow","Number","mag","thousandsSeparator","unitSeparator","decimalPlaces","fixedDecimals","unit","toFixed","pushComponent","components","added","removed","last","count","extractCommon","basePath","newString","oldString","diagonalPath","newLen","oldLen","newPos","oldPos","commonCount","equals","removeEmpty","array","Diff","editLength","maxEditLength","bestPath","addPath","removePath","canAdd","canRemove","self","buildValues","left","right","chars","diff","componentPos","componentLen","tmp","oldValue","lastComponent","pop","colors","backgroundColors","color","cc","b","inspectOpts","process","env","obj","NodeEnv","init","debug","log","stderr","write","formatArgs","namespace","uc","colorCode","prefix","toISOString","Date","save","namespaces","load","useColors","isatty","fd","formatters","O","f","getDebug","enabled","curr","prevTime","prev","coerce","unshift","formatter","splice","apply","createDebug","instances","selectColor","hash","charCodeAt","enable","names","skips","len","instance","Debug","createHash","_crypto","require","setup","destroy","debug.destroy","extend","debug.extend","ns","delimiter","newDebug","node","hyperToString","hyperResult","renderOptions","hr","secondRender","getReplacements","recursiveRenderAgain","getContext","childContext","body","childRules","upgradeRe","childRepl","ctx","ure","pb","pa","flags","exists","resolveDependency","relativeFrom","isDir","checkSources","fileChecked","fileRes","endsWith","pp","fork","child_process","spawn","getPromise","proc","stdout","hasFile","file","some","getKeys","reverse","hasIndex","hasFooter","excluded","sorted","included","localeCompare","numeric","LOG","processDir","separator","includeFilename","ignoreHidden","size","totalSize","relPath","processFile","fullPath","justStarted","byteLength","Pedantry","addNewLine","addBlankLine","objectMode","builtinModules","_module","RE","RE2","RE3","RE4","getMatches","ROOT","findPackageJson","cwd","fields","soft","fold","findEntry","entryExists","main","entry","version","packageName","rest","result","packageJson","hasMain","mod","resolved","indexExists","checkIfLib","modName","getDependenciesMeta","pckg","proms","internal","isLib","package","scope","paths","console","warn","detect","cache","nodeModules","node_modules_cache","mergeSameNodeModules","requireMatches","getRequireMatches","fm","dm","rm","required","deps","Deps","existing","discovered","entries","accRes","staticAnalysis","detected","filtered","fi","ii","ei","ee","ff","froms","el","newF","compareHash","currentHash","mm","mmeta","getMetaToPrint","meta","toLocaleString","getMtime","mtime","stat","getTime","computeHash","analysis","analyse","mmod","mmtime","handleWriteStream","destination","writable","module","exports","conf","competent","pad","Component","SKIP_ERROR","after","htmlProps","exported","renderAgain","id","removeLine","overriddenProps","getProps","export","newProps","ac","setPretty","l","doRender","setChildContext","skipRender","serverRender","fileRender","iframe","bind","getId","onSuccess","markExported","onFail","removeOnError","rule","clone","whichStream","compare","md5","update","digest","reason","currentMtime","isHashSame","ensurePathSync","usually","usage","description","line","example","commands","descriptions","values","commandLength","longestName","longestDescription","theLongest","command","ts","USA","usa","vals","firstVal","otherVals","firstLine","emptyPad","otherLines","u","spawnCommand","forkCp","matchers","makeMarkers","getReplacement","getRegex","regExp","marker","makeCutRule","pipeRules","makePasteRule","argsConfig","reduceUsage","default","argufy","config2","ranges","boolean","multiple","_argv","clearR","erte","stdin","inputs","forkFeed","handler","regexp","answer","an","removeListener","makepromise"]
}
